Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    APPEND
    COMMENT

Grammar

Rule 0     S' -> bloque_codigo
Rule 1     bloque_codigo -> empty
Rule 2     bloque_codigo -> linea_codigo empty
Rule 3     bloque_codigo -> bloque_codigo linea_codigo empty
Rule 4     linea_codigo -> expr_funcion
Rule 5     linea_codigo -> expr_def_funcion
Rule 6     linea_codigo -> expr_asign
Rule 7     linea_codigo -> expr_if_else
Rule 8     linea_codigo -> def_for
Rule 9     linea_codigo -> expr_return
Rule 10    linea_codigo -> call_method
Rule 11    expr_def_funcion -> DEF expr_funcion DPUNTOS
Rule 12    params -> variable
Rule 13    params -> params COMA variable
Rule 14    params -> expr_funcion
Rule 15    variable -> ID
Rule 16    variable -> expr_str
Rule 17    variable -> NUMBER
Rule 18    variable -> expr_float
Rule 19    variable -> bool
Rule 20    variable -> lista
Rule 21    expr_funcion -> ID LPAREN params RPAREN
Rule 22    expr_funcion -> ID LPAREN RPAREN
Rule 23    lista -> ID LCORC variable RCORC
Rule 24    lista -> ID LCORC operaciones_algebraica RCORC
Rule 25    expr_str -> STRING
Rule 26    expr_float -> NUMBER PUNTO NUMBER
Rule 27    expr_asign -> ID EQUALS variable
Rule 28    expr_asign -> ID EQUALS expr_funcion
Rule 29    expr_asign -> ID EQUALS operaciones_algebraica
Rule 30    expr_asign -> ID EQUALS LCORC RCORC
Rule 31    expr_asign -> ID EQUALS call_method
Rule 32    operador_igualdad -> MAYOR
Rule 33    operador_igualdad -> MENOR
Rule 34    operador_igualdad -> DEQUALS
Rule 35    operador_igualdad -> MAYOR EQUALS
Rule 36    operador_igualdad -> MENOR EQUALS
Rule 37    operador_igualdad -> NEGADOR EQUALS
Rule 38    expr_return -> RETURN variable
Rule 39    expr_return -> RETURN expr_funcion
Rule 40    expr_return -> RETURN operaciones_algebraica
Rule 41    expr_if_else -> IF condiciones_expr_if_else DPUNTOS
Rule 42    expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS
Rule 43    expr_if_else -> ELSE DPUNTOS
Rule 44    condiciones_expr_if_else -> condiciones
Rule 45    condiciones_expr_if_else -> condiciones and_or condiciones_expr_if_else
Rule 46    condiciones_expr_if_else -> LPAREN condiciones_expr_if_else RPAREN
Rule 47    condiciones -> variable
Rule 48    condiciones -> expr_funcion
Rule 49    condiciones -> operaciones_algebraica operador_igualdad variable
Rule 50    condiciones -> condiciones operador_igualdad condiciones
Rule 51    def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS
Rule 52    params_for -> variable_for
Rule 53    params_for -> variable_for COMA variable_for
Rule 54    params_for -> variable_for COMA variable_for COMA variable_for
Rule 55    variable_for -> variable
Rule 56    variable_for -> operaciones_algebraica
Rule 57    bool -> TRUE
Rule 58    bool -> FALSE
Rule 59    and_or -> AND
Rule 60    and_or -> OR
Rule 61    operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
Rule 62    operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
Rule 63    operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica
Rule 64    variables_operaciones_algebraica -> variable
Rule 65    variables_operaciones_algebraica -> expr_funcion
Rule 66    operador_alge -> PLUS
Rule 67    operador_alge -> MINUS
Rule 68    operador_alge -> TIMES
Rule 69    operador_alge -> DIVIDE
Rule 70    operador_alge -> MOD
Rule 71    operador_alge -> EXP
Rule 72    call_method -> variable PUNTO expr_funcion
Rule 73    call_method -> call_method PUNTO expr_funcion
Rule 74    empty -> <empty>

Terminals, with rules where they appear

AND                  : 59
APPEND               : 
COMA                 : 13 53 54 54
COMMENT              : 
DEF                  : 11
DEQUALS              : 34
DIVIDE               : 69
DPUNTOS              : 11 41 42 43 51
ELIF                 : 42
ELSE                 : 43
EQUALS               : 27 28 29 30 31 35 36 37
EXP                  : 71
FALSE                : 58
FOR                  : 51
ID                   : 15 21 22 23 24 27 28 29 30 31
IF                   : 41
IN                   : 51
LCORC                : 23 24 30
LPAREN               : 21 22 46 51 62
MAYOR                : 32 35
MENOR                : 33 36
MINUS                : 67
MOD                  : 70
NEGADOR              : 37
NUMBER               : 17 26 26
OR                   : 60
PLUS                 : 66
PUNTO                : 26 72 73
RANGE                : 51
RCORC                : 23 24 30
RETURN               : 38 39 40
RPAREN               : 21 22 46 51 62
STRING               : 25
TIMES                : 68
TRUE                 : 57
error                : 

Nonterminals, with rules where they appear

and_or               : 45
bloque_codigo        : 3 0
bool                 : 19
call_method          : 10 31 73
condiciones          : 44 45 50 50
condiciones_expr_if_else : 41 42 45 46
def_for              : 8
empty                : 1 2 3
expr_asign           : 6
expr_def_funcion     : 5
expr_float           : 18
expr_funcion         : 4 11 14 28 39 48 65 72 73
expr_if_else         : 7
expr_return          : 9
expr_str             : 16
linea_codigo         : 2 3
lista                : 20
operaciones_algebraica : 24 29 40 49 56 63
operador_alge        : 61 62 63
operador_igualdad    : 49 50
params               : 13 21
params_for           : 51
variable             : 12 13 23 27 38 47 49 51 55 64 72
variable_for         : 52 53 53 54 54 54
variables_operaciones_algebraica : 61 61 62 62 63

Parsing method: LALR

state 0

    (0) S' -> . bloque_codigo
    (1) bloque_codigo -> . empty
    (2) bloque_codigo -> . linea_codigo empty
    (3) bloque_codigo -> . bloque_codigo linea_codigo empty
    (74) empty -> .
    (4) linea_codigo -> . expr_funcion
    (5) linea_codigo -> . expr_def_funcion
    (6) linea_codigo -> . expr_asign
    (7) linea_codigo -> . expr_if_else
    (8) linea_codigo -> . def_for
    (9) linea_codigo -> . expr_return
    (10) linea_codigo -> . call_method
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN
    (11) expr_def_funcion -> . DEF expr_funcion DPUNTOS
    (27) expr_asign -> . ID EQUALS variable
    (28) expr_asign -> . ID EQUALS expr_funcion
    (29) expr_asign -> . ID EQUALS operaciones_algebraica
    (30) expr_asign -> . ID EQUALS LCORC RCORC
    (31) expr_asign -> . ID EQUALS call_method
    (41) expr_if_else -> . IF condiciones_expr_if_else DPUNTOS
    (42) expr_if_else -> . ELIF condiciones_expr_if_else DPUNTOS
    (43) expr_if_else -> . ELSE DPUNTOS
    (51) def_for -> . FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS
    (38) expr_return -> . RETURN variable
    (39) expr_return -> . RETURN expr_funcion
    (40) expr_return -> . RETURN operaciones_algebraica
    (72) call_method -> . variable PUNTO expr_funcion
    (73) call_method -> . call_method PUNTO expr_funcion
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 74 (empty -> .)
    ID              shift and go to state 11
    DEF             shift and go to state 12
    IF              shift and go to state 14
    ELIF            shift and go to state 15
    ELSE            shift and go to state 16
    FOR             shift and go to state 17
    RETURN          shift and go to state 18
    NUMBER          shift and go to state 20
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

  ! ID              [ reduce using rule 74 (empty -> .) ]
  ! DEF             [ reduce using rule 74 (empty -> .) ]
  ! IF              [ reduce using rule 74 (empty -> .) ]
  ! ELIF            [ reduce using rule 74 (empty -> .) ]
  ! ELSE            [ reduce using rule 74 (empty -> .) ]
  ! FOR             [ reduce using rule 74 (empty -> .) ]
  ! RETURN          [ reduce using rule 74 (empty -> .) ]
  ! NUMBER          [ reduce using rule 74 (empty -> .) ]
  ! STRING          [ reduce using rule 74 (empty -> .) ]
  ! TRUE            [ reduce using rule 74 (empty -> .) ]
  ! FALSE           [ reduce using rule 74 (empty -> .) ]

    bloque_codigo                  shift and go to state 1
    empty                          shift and go to state 2
    linea_codigo                   shift and go to state 3
    expr_funcion                   shift and go to state 4
    expr_def_funcion               shift and go to state 5
    expr_asign                     shift and go to state 6
    expr_if_else                   shift and go to state 7
    def_for                        shift and go to state 8
    expr_return                    shift and go to state 9
    call_method                    shift and go to state 10
    variable                       shift and go to state 13
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23

state 1

    (0) S' -> bloque_codigo .
    (3) bloque_codigo -> bloque_codigo . linea_codigo empty
    (4) linea_codigo -> . expr_funcion
    (5) linea_codigo -> . expr_def_funcion
    (6) linea_codigo -> . expr_asign
    (7) linea_codigo -> . expr_if_else
    (8) linea_codigo -> . def_for
    (9) linea_codigo -> . expr_return
    (10) linea_codigo -> . call_method
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN
    (11) expr_def_funcion -> . DEF expr_funcion DPUNTOS
    (27) expr_asign -> . ID EQUALS variable
    (28) expr_asign -> . ID EQUALS expr_funcion
    (29) expr_asign -> . ID EQUALS operaciones_algebraica
    (30) expr_asign -> . ID EQUALS LCORC RCORC
    (31) expr_asign -> . ID EQUALS call_method
    (41) expr_if_else -> . IF condiciones_expr_if_else DPUNTOS
    (42) expr_if_else -> . ELIF condiciones_expr_if_else DPUNTOS
    (43) expr_if_else -> . ELSE DPUNTOS
    (51) def_for -> . FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS
    (38) expr_return -> . RETURN variable
    (39) expr_return -> . RETURN expr_funcion
    (40) expr_return -> . RETURN operaciones_algebraica
    (72) call_method -> . variable PUNTO expr_funcion
    (73) call_method -> . call_method PUNTO expr_funcion
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC

    ID              shift and go to state 11
    DEF             shift and go to state 12
    IF              shift and go to state 14
    ELIF            shift and go to state 15
    ELSE            shift and go to state 16
    FOR             shift and go to state 17
    RETURN          shift and go to state 18
    NUMBER          shift and go to state 20
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    linea_codigo                   shift and go to state 27
    expr_funcion                   shift and go to state 4
    expr_def_funcion               shift and go to state 5
    expr_asign                     shift and go to state 6
    expr_if_else                   shift and go to state 7
    def_for                        shift and go to state 8
    expr_return                    shift and go to state 9
    call_method                    shift and go to state 10
    variable                       shift and go to state 13
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23

state 2

    (1) bloque_codigo -> empty .

    ID              reduce using rule 1 (bloque_codigo -> empty .)
    DEF             reduce using rule 1 (bloque_codigo -> empty .)
    IF              reduce using rule 1 (bloque_codigo -> empty .)
    ELIF            reduce using rule 1 (bloque_codigo -> empty .)
    ELSE            reduce using rule 1 (bloque_codigo -> empty .)
    FOR             reduce using rule 1 (bloque_codigo -> empty .)
    RETURN          reduce using rule 1 (bloque_codigo -> empty .)
    NUMBER          reduce using rule 1 (bloque_codigo -> empty .)
    STRING          reduce using rule 1 (bloque_codigo -> empty .)
    TRUE            reduce using rule 1 (bloque_codigo -> empty .)
    FALSE           reduce using rule 1 (bloque_codigo -> empty .)
    $end            reduce using rule 1 (bloque_codigo -> empty .)


state 3

    (2) bloque_codigo -> linea_codigo . empty
    (74) empty -> .

    ID              reduce using rule 74 (empty -> .)
    DEF             reduce using rule 74 (empty -> .)
    IF              reduce using rule 74 (empty -> .)
    ELIF            reduce using rule 74 (empty -> .)
    ELSE            reduce using rule 74 (empty -> .)
    FOR             reduce using rule 74 (empty -> .)
    RETURN          reduce using rule 74 (empty -> .)
    NUMBER          reduce using rule 74 (empty -> .)
    STRING          reduce using rule 74 (empty -> .)
    TRUE            reduce using rule 74 (empty -> .)
    FALSE           reduce using rule 74 (empty -> .)
    $end            reduce using rule 74 (empty -> .)

    empty                          shift and go to state 28

state 4

    (4) linea_codigo -> expr_funcion .

    ID              reduce using rule 4 (linea_codigo -> expr_funcion .)
    DEF             reduce using rule 4 (linea_codigo -> expr_funcion .)
    IF              reduce using rule 4 (linea_codigo -> expr_funcion .)
    ELIF            reduce using rule 4 (linea_codigo -> expr_funcion .)
    ELSE            reduce using rule 4 (linea_codigo -> expr_funcion .)
    FOR             reduce using rule 4 (linea_codigo -> expr_funcion .)
    RETURN          reduce using rule 4 (linea_codigo -> expr_funcion .)
    NUMBER          reduce using rule 4 (linea_codigo -> expr_funcion .)
    STRING          reduce using rule 4 (linea_codigo -> expr_funcion .)
    TRUE            reduce using rule 4 (linea_codigo -> expr_funcion .)
    FALSE           reduce using rule 4 (linea_codigo -> expr_funcion .)
    $end            reduce using rule 4 (linea_codigo -> expr_funcion .)


state 5

    (5) linea_codigo -> expr_def_funcion .

    ID              reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    DEF             reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    IF              reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    ELIF            reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    ELSE            reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    FOR             reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    RETURN          reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    NUMBER          reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    STRING          reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    TRUE            reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    FALSE           reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    $end            reduce using rule 5 (linea_codigo -> expr_def_funcion .)


state 6

    (6) linea_codigo -> expr_asign .

    ID              reduce using rule 6 (linea_codigo -> expr_asign .)
    DEF             reduce using rule 6 (linea_codigo -> expr_asign .)
    IF              reduce using rule 6 (linea_codigo -> expr_asign .)
    ELIF            reduce using rule 6 (linea_codigo -> expr_asign .)
    ELSE            reduce using rule 6 (linea_codigo -> expr_asign .)
    FOR             reduce using rule 6 (linea_codigo -> expr_asign .)
    RETURN          reduce using rule 6 (linea_codigo -> expr_asign .)
    NUMBER          reduce using rule 6 (linea_codigo -> expr_asign .)
    STRING          reduce using rule 6 (linea_codigo -> expr_asign .)
    TRUE            reduce using rule 6 (linea_codigo -> expr_asign .)
    FALSE           reduce using rule 6 (linea_codigo -> expr_asign .)
    $end            reduce using rule 6 (linea_codigo -> expr_asign .)


state 7

    (7) linea_codigo -> expr_if_else .

    ID              reduce using rule 7 (linea_codigo -> expr_if_else .)
    DEF             reduce using rule 7 (linea_codigo -> expr_if_else .)
    IF              reduce using rule 7 (linea_codigo -> expr_if_else .)
    ELIF            reduce using rule 7 (linea_codigo -> expr_if_else .)
    ELSE            reduce using rule 7 (linea_codigo -> expr_if_else .)
    FOR             reduce using rule 7 (linea_codigo -> expr_if_else .)
    RETURN          reduce using rule 7 (linea_codigo -> expr_if_else .)
    NUMBER          reduce using rule 7 (linea_codigo -> expr_if_else .)
    STRING          reduce using rule 7 (linea_codigo -> expr_if_else .)
    TRUE            reduce using rule 7 (linea_codigo -> expr_if_else .)
    FALSE           reduce using rule 7 (linea_codigo -> expr_if_else .)
    $end            reduce using rule 7 (linea_codigo -> expr_if_else .)


state 8

    (8) linea_codigo -> def_for .

    ID              reduce using rule 8 (linea_codigo -> def_for .)
    DEF             reduce using rule 8 (linea_codigo -> def_for .)
    IF              reduce using rule 8 (linea_codigo -> def_for .)
    ELIF            reduce using rule 8 (linea_codigo -> def_for .)
    ELSE            reduce using rule 8 (linea_codigo -> def_for .)
    FOR             reduce using rule 8 (linea_codigo -> def_for .)
    RETURN          reduce using rule 8 (linea_codigo -> def_for .)
    NUMBER          reduce using rule 8 (linea_codigo -> def_for .)
    STRING          reduce using rule 8 (linea_codigo -> def_for .)
    TRUE            reduce using rule 8 (linea_codigo -> def_for .)
    FALSE           reduce using rule 8 (linea_codigo -> def_for .)
    $end            reduce using rule 8 (linea_codigo -> def_for .)


state 9

    (9) linea_codigo -> expr_return .

    ID              reduce using rule 9 (linea_codigo -> expr_return .)
    DEF             reduce using rule 9 (linea_codigo -> expr_return .)
    IF              reduce using rule 9 (linea_codigo -> expr_return .)
    ELIF            reduce using rule 9 (linea_codigo -> expr_return .)
    ELSE            reduce using rule 9 (linea_codigo -> expr_return .)
    FOR             reduce using rule 9 (linea_codigo -> expr_return .)
    RETURN          reduce using rule 9 (linea_codigo -> expr_return .)
    NUMBER          reduce using rule 9 (linea_codigo -> expr_return .)
    STRING          reduce using rule 9 (linea_codigo -> expr_return .)
    TRUE            reduce using rule 9 (linea_codigo -> expr_return .)
    FALSE           reduce using rule 9 (linea_codigo -> expr_return .)
    $end            reduce using rule 9 (linea_codigo -> expr_return .)


state 10

    (10) linea_codigo -> call_method .
    (73) call_method -> call_method . PUNTO expr_funcion

    ID              reduce using rule 10 (linea_codigo -> call_method .)
    DEF             reduce using rule 10 (linea_codigo -> call_method .)
    IF              reduce using rule 10 (linea_codigo -> call_method .)
    ELIF            reduce using rule 10 (linea_codigo -> call_method .)
    ELSE            reduce using rule 10 (linea_codigo -> call_method .)
    FOR             reduce using rule 10 (linea_codigo -> call_method .)
    RETURN          reduce using rule 10 (linea_codigo -> call_method .)
    NUMBER          reduce using rule 10 (linea_codigo -> call_method .)
    STRING          reduce using rule 10 (linea_codigo -> call_method .)
    TRUE            reduce using rule 10 (linea_codigo -> call_method .)
    FALSE           reduce using rule 10 (linea_codigo -> call_method .)
    $end            reduce using rule 10 (linea_codigo -> call_method .)
    PUNTO           shift and go to state 29


state 11

    (21) expr_funcion -> ID . LPAREN params RPAREN
    (22) expr_funcion -> ID . LPAREN RPAREN
    (27) expr_asign -> ID . EQUALS variable
    (28) expr_asign -> ID . EQUALS expr_funcion
    (29) expr_asign -> ID . EQUALS operaciones_algebraica
    (30) expr_asign -> ID . EQUALS LCORC RCORC
    (31) expr_asign -> ID . EQUALS call_method
    (15) variable -> ID .
    (23) lista -> ID . LCORC variable RCORC
    (24) lista -> ID . LCORC operaciones_algebraica RCORC

    LPAREN          shift and go to state 30
    EQUALS          shift and go to state 31
    PUNTO           reduce using rule 15 (variable -> ID .)
    LCORC           shift and go to state 32


state 12

    (11) expr_def_funcion -> DEF . expr_funcion DPUNTOS
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN

    ID              shift and go to state 34

    expr_funcion                   shift and go to state 33

state 13

    (72) call_method -> variable . PUNTO expr_funcion

    PUNTO           shift and go to state 35


state 14

    (41) expr_if_else -> IF . condiciones_expr_if_else DPUNTOS
    (44) condiciones_expr_if_else -> . condiciones
    (45) condiciones_expr_if_else -> . condiciones and_or condiciones_expr_if_else
    (46) condiciones_expr_if_else -> . LPAREN condiciones_expr_if_else RPAREN
    (47) condiciones -> . variable
    (48) condiciones -> . expr_funcion
    (49) condiciones -> . operaciones_algebraica operador_igualdad variable
    (50) condiciones -> . condiciones operador_igualdad condiciones
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN
    (61) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (62) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (63) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC
    (64) variables_operaciones_algebraica -> . variable
    (65) variables_operaciones_algebraica -> . expr_funcion

    LPAREN          shift and go to state 38
    ID              shift and go to state 42
    NUMBER          shift and go to state 20
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    condiciones_expr_if_else       shift and go to state 36
    condiciones                    shift and go to state 37
    variable                       shift and go to state 39
    expr_funcion                   shift and go to state 40
    operaciones_algebraica         shift and go to state 41
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23
    variables_operaciones_algebraica shift and go to state 43

state 15

    (42) expr_if_else -> ELIF . condiciones_expr_if_else DPUNTOS
    (44) condiciones_expr_if_else -> . condiciones
    (45) condiciones_expr_if_else -> . condiciones and_or condiciones_expr_if_else
    (46) condiciones_expr_if_else -> . LPAREN condiciones_expr_if_else RPAREN
    (47) condiciones -> . variable
    (48) condiciones -> . expr_funcion
    (49) condiciones -> . operaciones_algebraica operador_igualdad variable
    (50) condiciones -> . condiciones operador_igualdad condiciones
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN
    (61) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (62) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (63) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC
    (64) variables_operaciones_algebraica -> . variable
    (65) variables_operaciones_algebraica -> . expr_funcion

    LPAREN          shift and go to state 38
    ID              shift and go to state 42
    NUMBER          shift and go to state 20
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    condiciones_expr_if_else       shift and go to state 44
    condiciones                    shift and go to state 37
    variable                       shift and go to state 39
    expr_funcion                   shift and go to state 40
    operaciones_algebraica         shift and go to state 41
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23
    variables_operaciones_algebraica shift and go to state 43

state 16

    (43) expr_if_else -> ELSE . DPUNTOS

    DPUNTOS         shift and go to state 45


state 17

    (51) def_for -> FOR . variable IN RANGE LPAREN params_for RPAREN DPUNTOS
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC

    ID              shift and go to state 47
    NUMBER          shift and go to state 20
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    variable                       shift and go to state 46
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23

state 18

    (38) expr_return -> RETURN . variable
    (39) expr_return -> RETURN . expr_funcion
    (40) expr_return -> RETURN . operaciones_algebraica
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN
    (61) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (62) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (63) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC
    (64) variables_operaciones_algebraica -> . variable
    (65) variables_operaciones_algebraica -> . expr_funcion

    ID              shift and go to state 42
    NUMBER          shift and go to state 20
    LPAREN          shift and go to state 51
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    variable                       shift and go to state 48
    expr_funcion                   shift and go to state 49
    operaciones_algebraica         shift and go to state 50
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23
    variables_operaciones_algebraica shift and go to state 43

state 19

    (16) variable -> expr_str .

    PUNTO           reduce using rule 16 (variable -> expr_str .)
    AND             reduce using rule 16 (variable -> expr_str .)
    OR              reduce using rule 16 (variable -> expr_str .)
    MAYOR           reduce using rule 16 (variable -> expr_str .)
    MENOR           reduce using rule 16 (variable -> expr_str .)
    DEQUALS         reduce using rule 16 (variable -> expr_str .)
    NEGADOR         reduce using rule 16 (variable -> expr_str .)
    DPUNTOS         reduce using rule 16 (variable -> expr_str .)
    PLUS            reduce using rule 16 (variable -> expr_str .)
    MINUS           reduce using rule 16 (variable -> expr_str .)
    TIMES           reduce using rule 16 (variable -> expr_str .)
    DIVIDE          reduce using rule 16 (variable -> expr_str .)
    MOD             reduce using rule 16 (variable -> expr_str .)
    EXP             reduce using rule 16 (variable -> expr_str .)
    IN              reduce using rule 16 (variable -> expr_str .)
    ID              reduce using rule 16 (variable -> expr_str .)
    DEF             reduce using rule 16 (variable -> expr_str .)
    IF              reduce using rule 16 (variable -> expr_str .)
    ELIF            reduce using rule 16 (variable -> expr_str .)
    ELSE            reduce using rule 16 (variable -> expr_str .)
    FOR             reduce using rule 16 (variable -> expr_str .)
    RETURN          reduce using rule 16 (variable -> expr_str .)
    NUMBER          reduce using rule 16 (variable -> expr_str .)
    STRING          reduce using rule 16 (variable -> expr_str .)
    TRUE            reduce using rule 16 (variable -> expr_str .)
    FALSE           reduce using rule 16 (variable -> expr_str .)
    $end            reduce using rule 16 (variable -> expr_str .)
    RPAREN          reduce using rule 16 (variable -> expr_str .)
    COMA            reduce using rule 16 (variable -> expr_str .)
    RCORC           reduce using rule 16 (variable -> expr_str .)


state 20

    (17) variable -> NUMBER .
    (26) expr_float -> NUMBER . PUNTO NUMBER

  ! shift/reduce conflict for PUNTO resolved as shift
    AND             reduce using rule 17 (variable -> NUMBER .)
    OR              reduce using rule 17 (variable -> NUMBER .)
    MAYOR           reduce using rule 17 (variable -> NUMBER .)
    MENOR           reduce using rule 17 (variable -> NUMBER .)
    DEQUALS         reduce using rule 17 (variable -> NUMBER .)
    NEGADOR         reduce using rule 17 (variable -> NUMBER .)
    DPUNTOS         reduce using rule 17 (variable -> NUMBER .)
    PLUS            reduce using rule 17 (variable -> NUMBER .)
    MINUS           reduce using rule 17 (variable -> NUMBER .)
    TIMES           reduce using rule 17 (variable -> NUMBER .)
    DIVIDE          reduce using rule 17 (variable -> NUMBER .)
    MOD             reduce using rule 17 (variable -> NUMBER .)
    EXP             reduce using rule 17 (variable -> NUMBER .)
    IN              reduce using rule 17 (variable -> NUMBER .)
    ID              reduce using rule 17 (variable -> NUMBER .)
    DEF             reduce using rule 17 (variable -> NUMBER .)
    IF              reduce using rule 17 (variable -> NUMBER .)
    ELIF            reduce using rule 17 (variable -> NUMBER .)
    ELSE            reduce using rule 17 (variable -> NUMBER .)
    FOR             reduce using rule 17 (variable -> NUMBER .)
    RETURN          reduce using rule 17 (variable -> NUMBER .)
    NUMBER          reduce using rule 17 (variable -> NUMBER .)
    STRING          reduce using rule 17 (variable -> NUMBER .)
    TRUE            reduce using rule 17 (variable -> NUMBER .)
    FALSE           reduce using rule 17 (variable -> NUMBER .)
    $end            reduce using rule 17 (variable -> NUMBER .)
    RPAREN          reduce using rule 17 (variable -> NUMBER .)
    COMA            reduce using rule 17 (variable -> NUMBER .)
    RCORC           reduce using rule 17 (variable -> NUMBER .)
    PUNTO           shift and go to state 52

  ! PUNTO           [ reduce using rule 17 (variable -> NUMBER .) ]


state 21

    (18) variable -> expr_float .

    PUNTO           reduce using rule 18 (variable -> expr_float .)
    AND             reduce using rule 18 (variable -> expr_float .)
    OR              reduce using rule 18 (variable -> expr_float .)
    MAYOR           reduce using rule 18 (variable -> expr_float .)
    MENOR           reduce using rule 18 (variable -> expr_float .)
    DEQUALS         reduce using rule 18 (variable -> expr_float .)
    NEGADOR         reduce using rule 18 (variable -> expr_float .)
    DPUNTOS         reduce using rule 18 (variable -> expr_float .)
    PLUS            reduce using rule 18 (variable -> expr_float .)
    MINUS           reduce using rule 18 (variable -> expr_float .)
    TIMES           reduce using rule 18 (variable -> expr_float .)
    DIVIDE          reduce using rule 18 (variable -> expr_float .)
    MOD             reduce using rule 18 (variable -> expr_float .)
    EXP             reduce using rule 18 (variable -> expr_float .)
    IN              reduce using rule 18 (variable -> expr_float .)
    ID              reduce using rule 18 (variable -> expr_float .)
    DEF             reduce using rule 18 (variable -> expr_float .)
    IF              reduce using rule 18 (variable -> expr_float .)
    ELIF            reduce using rule 18 (variable -> expr_float .)
    ELSE            reduce using rule 18 (variable -> expr_float .)
    FOR             reduce using rule 18 (variable -> expr_float .)
    RETURN          reduce using rule 18 (variable -> expr_float .)
    NUMBER          reduce using rule 18 (variable -> expr_float .)
    STRING          reduce using rule 18 (variable -> expr_float .)
    TRUE            reduce using rule 18 (variable -> expr_float .)
    FALSE           reduce using rule 18 (variable -> expr_float .)
    $end            reduce using rule 18 (variable -> expr_float .)
    RPAREN          reduce using rule 18 (variable -> expr_float .)
    COMA            reduce using rule 18 (variable -> expr_float .)
    RCORC           reduce using rule 18 (variable -> expr_float .)


state 22

    (19) variable -> bool .

    PUNTO           reduce using rule 19 (variable -> bool .)
    AND             reduce using rule 19 (variable -> bool .)
    OR              reduce using rule 19 (variable -> bool .)
    MAYOR           reduce using rule 19 (variable -> bool .)
    MENOR           reduce using rule 19 (variable -> bool .)
    DEQUALS         reduce using rule 19 (variable -> bool .)
    NEGADOR         reduce using rule 19 (variable -> bool .)
    DPUNTOS         reduce using rule 19 (variable -> bool .)
    PLUS            reduce using rule 19 (variable -> bool .)
    MINUS           reduce using rule 19 (variable -> bool .)
    TIMES           reduce using rule 19 (variable -> bool .)
    DIVIDE          reduce using rule 19 (variable -> bool .)
    MOD             reduce using rule 19 (variable -> bool .)
    EXP             reduce using rule 19 (variable -> bool .)
    IN              reduce using rule 19 (variable -> bool .)
    ID              reduce using rule 19 (variable -> bool .)
    DEF             reduce using rule 19 (variable -> bool .)
    IF              reduce using rule 19 (variable -> bool .)
    ELIF            reduce using rule 19 (variable -> bool .)
    ELSE            reduce using rule 19 (variable -> bool .)
    FOR             reduce using rule 19 (variable -> bool .)
    RETURN          reduce using rule 19 (variable -> bool .)
    NUMBER          reduce using rule 19 (variable -> bool .)
    STRING          reduce using rule 19 (variable -> bool .)
    TRUE            reduce using rule 19 (variable -> bool .)
    FALSE           reduce using rule 19 (variable -> bool .)
    $end            reduce using rule 19 (variable -> bool .)
    RPAREN          reduce using rule 19 (variable -> bool .)
    COMA            reduce using rule 19 (variable -> bool .)
    RCORC           reduce using rule 19 (variable -> bool .)


state 23

    (20) variable -> lista .

    PUNTO           reduce using rule 20 (variable -> lista .)
    AND             reduce using rule 20 (variable -> lista .)
    OR              reduce using rule 20 (variable -> lista .)
    MAYOR           reduce using rule 20 (variable -> lista .)
    MENOR           reduce using rule 20 (variable -> lista .)
    DEQUALS         reduce using rule 20 (variable -> lista .)
    NEGADOR         reduce using rule 20 (variable -> lista .)
    DPUNTOS         reduce using rule 20 (variable -> lista .)
    PLUS            reduce using rule 20 (variable -> lista .)
    MINUS           reduce using rule 20 (variable -> lista .)
    TIMES           reduce using rule 20 (variable -> lista .)
    DIVIDE          reduce using rule 20 (variable -> lista .)
    MOD             reduce using rule 20 (variable -> lista .)
    EXP             reduce using rule 20 (variable -> lista .)
    IN              reduce using rule 20 (variable -> lista .)
    ID              reduce using rule 20 (variable -> lista .)
    DEF             reduce using rule 20 (variable -> lista .)
    IF              reduce using rule 20 (variable -> lista .)
    ELIF            reduce using rule 20 (variable -> lista .)
    ELSE            reduce using rule 20 (variable -> lista .)
    FOR             reduce using rule 20 (variable -> lista .)
    RETURN          reduce using rule 20 (variable -> lista .)
    NUMBER          reduce using rule 20 (variable -> lista .)
    STRING          reduce using rule 20 (variable -> lista .)
    TRUE            reduce using rule 20 (variable -> lista .)
    FALSE           reduce using rule 20 (variable -> lista .)
    $end            reduce using rule 20 (variable -> lista .)
    RPAREN          reduce using rule 20 (variable -> lista .)
    COMA            reduce using rule 20 (variable -> lista .)
    RCORC           reduce using rule 20 (variable -> lista .)


state 24

    (25) expr_str -> STRING .

    PUNTO           reduce using rule 25 (expr_str -> STRING .)
    AND             reduce using rule 25 (expr_str -> STRING .)
    OR              reduce using rule 25 (expr_str -> STRING .)
    MAYOR           reduce using rule 25 (expr_str -> STRING .)
    MENOR           reduce using rule 25 (expr_str -> STRING .)
    DEQUALS         reduce using rule 25 (expr_str -> STRING .)
    NEGADOR         reduce using rule 25 (expr_str -> STRING .)
    DPUNTOS         reduce using rule 25 (expr_str -> STRING .)
    PLUS            reduce using rule 25 (expr_str -> STRING .)
    MINUS           reduce using rule 25 (expr_str -> STRING .)
    TIMES           reduce using rule 25 (expr_str -> STRING .)
    DIVIDE          reduce using rule 25 (expr_str -> STRING .)
    MOD             reduce using rule 25 (expr_str -> STRING .)
    EXP             reduce using rule 25 (expr_str -> STRING .)
    IN              reduce using rule 25 (expr_str -> STRING .)
    ID              reduce using rule 25 (expr_str -> STRING .)
    DEF             reduce using rule 25 (expr_str -> STRING .)
    IF              reduce using rule 25 (expr_str -> STRING .)
    ELIF            reduce using rule 25 (expr_str -> STRING .)
    ELSE            reduce using rule 25 (expr_str -> STRING .)
    FOR             reduce using rule 25 (expr_str -> STRING .)
    RETURN          reduce using rule 25 (expr_str -> STRING .)
    NUMBER          reduce using rule 25 (expr_str -> STRING .)
    STRING          reduce using rule 25 (expr_str -> STRING .)
    TRUE            reduce using rule 25 (expr_str -> STRING .)
    FALSE           reduce using rule 25 (expr_str -> STRING .)
    $end            reduce using rule 25 (expr_str -> STRING .)
    RPAREN          reduce using rule 25 (expr_str -> STRING .)
    COMA            reduce using rule 25 (expr_str -> STRING .)
    RCORC           reduce using rule 25 (expr_str -> STRING .)


state 25

    (57) bool -> TRUE .

    PUNTO           reduce using rule 57 (bool -> TRUE .)
    AND             reduce using rule 57 (bool -> TRUE .)
    OR              reduce using rule 57 (bool -> TRUE .)
    MAYOR           reduce using rule 57 (bool -> TRUE .)
    MENOR           reduce using rule 57 (bool -> TRUE .)
    DEQUALS         reduce using rule 57 (bool -> TRUE .)
    NEGADOR         reduce using rule 57 (bool -> TRUE .)
    DPUNTOS         reduce using rule 57 (bool -> TRUE .)
    PLUS            reduce using rule 57 (bool -> TRUE .)
    MINUS           reduce using rule 57 (bool -> TRUE .)
    TIMES           reduce using rule 57 (bool -> TRUE .)
    DIVIDE          reduce using rule 57 (bool -> TRUE .)
    MOD             reduce using rule 57 (bool -> TRUE .)
    EXP             reduce using rule 57 (bool -> TRUE .)
    IN              reduce using rule 57 (bool -> TRUE .)
    ID              reduce using rule 57 (bool -> TRUE .)
    DEF             reduce using rule 57 (bool -> TRUE .)
    IF              reduce using rule 57 (bool -> TRUE .)
    ELIF            reduce using rule 57 (bool -> TRUE .)
    ELSE            reduce using rule 57 (bool -> TRUE .)
    FOR             reduce using rule 57 (bool -> TRUE .)
    RETURN          reduce using rule 57 (bool -> TRUE .)
    NUMBER          reduce using rule 57 (bool -> TRUE .)
    STRING          reduce using rule 57 (bool -> TRUE .)
    TRUE            reduce using rule 57 (bool -> TRUE .)
    FALSE           reduce using rule 57 (bool -> TRUE .)
    $end            reduce using rule 57 (bool -> TRUE .)
    RPAREN          reduce using rule 57 (bool -> TRUE .)
    COMA            reduce using rule 57 (bool -> TRUE .)
    RCORC           reduce using rule 57 (bool -> TRUE .)


state 26

    (58) bool -> FALSE .

    PUNTO           reduce using rule 58 (bool -> FALSE .)
    AND             reduce using rule 58 (bool -> FALSE .)
    OR              reduce using rule 58 (bool -> FALSE .)
    MAYOR           reduce using rule 58 (bool -> FALSE .)
    MENOR           reduce using rule 58 (bool -> FALSE .)
    DEQUALS         reduce using rule 58 (bool -> FALSE .)
    NEGADOR         reduce using rule 58 (bool -> FALSE .)
    DPUNTOS         reduce using rule 58 (bool -> FALSE .)
    PLUS            reduce using rule 58 (bool -> FALSE .)
    MINUS           reduce using rule 58 (bool -> FALSE .)
    TIMES           reduce using rule 58 (bool -> FALSE .)
    DIVIDE          reduce using rule 58 (bool -> FALSE .)
    MOD             reduce using rule 58 (bool -> FALSE .)
    EXP             reduce using rule 58 (bool -> FALSE .)
    IN              reduce using rule 58 (bool -> FALSE .)
    ID              reduce using rule 58 (bool -> FALSE .)
    DEF             reduce using rule 58 (bool -> FALSE .)
    IF              reduce using rule 58 (bool -> FALSE .)
    ELIF            reduce using rule 58 (bool -> FALSE .)
    ELSE            reduce using rule 58 (bool -> FALSE .)
    FOR             reduce using rule 58 (bool -> FALSE .)
    RETURN          reduce using rule 58 (bool -> FALSE .)
    NUMBER          reduce using rule 58 (bool -> FALSE .)
    STRING          reduce using rule 58 (bool -> FALSE .)
    TRUE            reduce using rule 58 (bool -> FALSE .)
    FALSE           reduce using rule 58 (bool -> FALSE .)
    $end            reduce using rule 58 (bool -> FALSE .)
    RPAREN          reduce using rule 58 (bool -> FALSE .)
    COMA            reduce using rule 58 (bool -> FALSE .)
    RCORC           reduce using rule 58 (bool -> FALSE .)


state 27

    (3) bloque_codigo -> bloque_codigo linea_codigo . empty
    (74) empty -> .

    ID              reduce using rule 74 (empty -> .)
    DEF             reduce using rule 74 (empty -> .)
    IF              reduce using rule 74 (empty -> .)
    ELIF            reduce using rule 74 (empty -> .)
    ELSE            reduce using rule 74 (empty -> .)
    FOR             reduce using rule 74 (empty -> .)
    RETURN          reduce using rule 74 (empty -> .)
    NUMBER          reduce using rule 74 (empty -> .)
    STRING          reduce using rule 74 (empty -> .)
    TRUE            reduce using rule 74 (empty -> .)
    FALSE           reduce using rule 74 (empty -> .)
    $end            reduce using rule 74 (empty -> .)

    empty                          shift and go to state 53

state 28

    (2) bloque_codigo -> linea_codigo empty .

    ID              reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    DEF             reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    IF              reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    ELIF            reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    ELSE            reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    FOR             reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    RETURN          reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    NUMBER          reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    STRING          reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    TRUE            reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    FALSE           reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    $end            reduce using rule 2 (bloque_codigo -> linea_codigo empty .)


state 29

    (73) call_method -> call_method PUNTO . expr_funcion
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN

    ID              shift and go to state 34

    expr_funcion                   shift and go to state 54

state 30

    (21) expr_funcion -> ID LPAREN . params RPAREN
    (22) expr_funcion -> ID LPAREN . RPAREN
    (12) params -> . variable
    (13) params -> . params COMA variable
    (14) params -> . expr_funcion
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC

    RPAREN          shift and go to state 56
    ID              shift and go to state 42
    NUMBER          shift and go to state 20
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    params                         shift and go to state 55
    variable                       shift and go to state 57
    expr_funcion                   shift and go to state 58
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23

state 31

    (27) expr_asign -> ID EQUALS . variable
    (28) expr_asign -> ID EQUALS . expr_funcion
    (29) expr_asign -> ID EQUALS . operaciones_algebraica
    (30) expr_asign -> ID EQUALS . LCORC RCORC
    (31) expr_asign -> ID EQUALS . call_method
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN
    (61) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (62) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (63) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (72) call_method -> . variable PUNTO expr_funcion
    (73) call_method -> . call_method PUNTO expr_funcion
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC
    (64) variables_operaciones_algebraica -> . variable
    (65) variables_operaciones_algebraica -> . expr_funcion

    LCORC           shift and go to state 62
    ID              shift and go to state 42
    NUMBER          shift and go to state 20
    LPAREN          shift and go to state 51
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    variable                       shift and go to state 59
    expr_funcion                   shift and go to state 60
    operaciones_algebraica         shift and go to state 61
    call_method                    shift and go to state 63
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23
    variables_operaciones_algebraica shift and go to state 43

state 32

    (23) lista -> ID LCORC . variable RCORC
    (24) lista -> ID LCORC . operaciones_algebraica RCORC
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (61) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (62) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (63) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC
    (64) variables_operaciones_algebraica -> . variable
    (65) variables_operaciones_algebraica -> . expr_funcion
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN

    ID              shift and go to state 64
    NUMBER          shift and go to state 20
    LPAREN          shift and go to state 51
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    variable                       shift and go to state 65
    operaciones_algebraica         shift and go to state 66
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23
    variables_operaciones_algebraica shift and go to state 43
    expr_funcion                   shift and go to state 67

state 33

    (11) expr_def_funcion -> DEF expr_funcion . DPUNTOS

    DPUNTOS         shift and go to state 68


state 34

    (21) expr_funcion -> ID . LPAREN params RPAREN
    (22) expr_funcion -> ID . LPAREN RPAREN

    LPAREN          shift and go to state 30


state 35

    (72) call_method -> variable PUNTO . expr_funcion
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN

    ID              shift and go to state 34

    expr_funcion                   shift and go to state 69

state 36

    (41) expr_if_else -> IF condiciones_expr_if_else . DPUNTOS

    DPUNTOS         shift and go to state 70


state 37

    (44) condiciones_expr_if_else -> condiciones .
    (45) condiciones_expr_if_else -> condiciones . and_or condiciones_expr_if_else
    (50) condiciones -> condiciones . operador_igualdad condiciones
    (59) and_or -> . AND
    (60) and_or -> . OR
    (32) operador_igualdad -> . MAYOR
    (33) operador_igualdad -> . MENOR
    (34) operador_igualdad -> . DEQUALS
    (35) operador_igualdad -> . MAYOR EQUALS
    (36) operador_igualdad -> . MENOR EQUALS
    (37) operador_igualdad -> . NEGADOR EQUALS

    DPUNTOS         reduce using rule 44 (condiciones_expr_if_else -> condiciones .)
    RPAREN          reduce using rule 44 (condiciones_expr_if_else -> condiciones .)
    AND             shift and go to state 73
    OR              shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    DEQUALS         shift and go to state 77
    NEGADOR         shift and go to state 78

    and_or                         shift and go to state 71
    operador_igualdad              shift and go to state 72

state 38

    (46) condiciones_expr_if_else -> LPAREN . condiciones_expr_if_else RPAREN
    (62) operaciones_algebraica -> LPAREN . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (44) condiciones_expr_if_else -> . condiciones
    (45) condiciones_expr_if_else -> . condiciones and_or condiciones_expr_if_else
    (46) condiciones_expr_if_else -> . LPAREN condiciones_expr_if_else RPAREN
    (64) variables_operaciones_algebraica -> . variable
    (65) variables_operaciones_algebraica -> . expr_funcion
    (47) condiciones -> . variable
    (48) condiciones -> . expr_funcion
    (49) condiciones -> . operaciones_algebraica operador_igualdad variable
    (50) condiciones -> . condiciones operador_igualdad condiciones
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN
    (61) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (62) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (63) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC

    LPAREN          shift and go to state 38
    ID              shift and go to state 42
    NUMBER          shift and go to state 20
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    condiciones_expr_if_else       shift and go to state 79
    variables_operaciones_algebraica shift and go to state 80
    condiciones                    shift and go to state 37
    variable                       shift and go to state 81
    expr_funcion                   shift and go to state 82
    operaciones_algebraica         shift and go to state 41
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23

state 39

    (47) condiciones -> variable .
    (64) variables_operaciones_algebraica -> variable .

    AND             reduce using rule 47 (condiciones -> variable .)
    OR              reduce using rule 47 (condiciones -> variable .)
    MAYOR           reduce using rule 47 (condiciones -> variable .)
    MENOR           reduce using rule 47 (condiciones -> variable .)
    DEQUALS         reduce using rule 47 (condiciones -> variable .)
    NEGADOR         reduce using rule 47 (condiciones -> variable .)
    DPUNTOS         reduce using rule 47 (condiciones -> variable .)
    RPAREN          reduce using rule 47 (condiciones -> variable .)
    PLUS            reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    MINUS           reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    TIMES           reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    DIVIDE          reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    MOD             reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    EXP             reduce using rule 64 (variables_operaciones_algebraica -> variable .)


state 40

    (48) condiciones -> expr_funcion .
    (65) variables_operaciones_algebraica -> expr_funcion .

    AND             reduce using rule 48 (condiciones -> expr_funcion .)
    OR              reduce using rule 48 (condiciones -> expr_funcion .)
    MAYOR           reduce using rule 48 (condiciones -> expr_funcion .)
    MENOR           reduce using rule 48 (condiciones -> expr_funcion .)
    DEQUALS         reduce using rule 48 (condiciones -> expr_funcion .)
    NEGADOR         reduce using rule 48 (condiciones -> expr_funcion .)
    DPUNTOS         reduce using rule 48 (condiciones -> expr_funcion .)
    RPAREN          reduce using rule 48 (condiciones -> expr_funcion .)
    PLUS            reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    MINUS           reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    TIMES           reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    DIVIDE          reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    MOD             reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    EXP             reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)


state 41

    (49) condiciones -> operaciones_algebraica . operador_igualdad variable
    (63) operaciones_algebraica -> operaciones_algebraica . operador_alge variables_operaciones_algebraica
    (32) operador_igualdad -> . MAYOR
    (33) operador_igualdad -> . MENOR
    (34) operador_igualdad -> . DEQUALS
    (35) operador_igualdad -> . MAYOR EQUALS
    (36) operador_igualdad -> . MENOR EQUALS
    (37) operador_igualdad -> . NEGADOR EQUALS
    (66) operador_alge -> . PLUS
    (67) operador_alge -> . MINUS
    (68) operador_alge -> . TIMES
    (69) operador_alge -> . DIVIDE
    (70) operador_alge -> . MOD
    (71) operador_alge -> . EXP

    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    DEQUALS         shift and go to state 77
    NEGADOR         shift and go to state 78
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    TIMES           shift and go to state 87
    DIVIDE          shift and go to state 88
    MOD             shift and go to state 89
    EXP             shift and go to state 90

    operador_igualdad              shift and go to state 83
    operador_alge                  shift and go to state 84

state 42

    (15) variable -> ID .
    (21) expr_funcion -> ID . LPAREN params RPAREN
    (22) expr_funcion -> ID . LPAREN RPAREN
    (23) lista -> ID . LCORC variable RCORC
    (24) lista -> ID . LCORC operaciones_algebraica RCORC

    AND             reduce using rule 15 (variable -> ID .)
    OR              reduce using rule 15 (variable -> ID .)
    MAYOR           reduce using rule 15 (variable -> ID .)
    MENOR           reduce using rule 15 (variable -> ID .)
    DEQUALS         reduce using rule 15 (variable -> ID .)
    NEGADOR         reduce using rule 15 (variable -> ID .)
    DPUNTOS         reduce using rule 15 (variable -> ID .)
    PLUS            reduce using rule 15 (variable -> ID .)
    MINUS           reduce using rule 15 (variable -> ID .)
    TIMES           reduce using rule 15 (variable -> ID .)
    DIVIDE          reduce using rule 15 (variable -> ID .)
    MOD             reduce using rule 15 (variable -> ID .)
    EXP             reduce using rule 15 (variable -> ID .)
    ID              reduce using rule 15 (variable -> ID .)
    DEF             reduce using rule 15 (variable -> ID .)
    IF              reduce using rule 15 (variable -> ID .)
    ELIF            reduce using rule 15 (variable -> ID .)
    ELSE            reduce using rule 15 (variable -> ID .)
    FOR             reduce using rule 15 (variable -> ID .)
    RETURN          reduce using rule 15 (variable -> ID .)
    NUMBER          reduce using rule 15 (variable -> ID .)
    STRING          reduce using rule 15 (variable -> ID .)
    TRUE            reduce using rule 15 (variable -> ID .)
    FALSE           reduce using rule 15 (variable -> ID .)
    $end            reduce using rule 15 (variable -> ID .)
    RPAREN          reduce using rule 15 (variable -> ID .)
    COMA            reduce using rule 15 (variable -> ID .)
    PUNTO           reduce using rule 15 (variable -> ID .)
    RCORC           reduce using rule 15 (variable -> ID .)
    LPAREN          shift and go to state 30
    LCORC           shift and go to state 32


state 43

    (61) operaciones_algebraica -> variables_operaciones_algebraica . operador_alge variables_operaciones_algebraica
    (66) operador_alge -> . PLUS
    (67) operador_alge -> . MINUS
    (68) operador_alge -> . TIMES
    (69) operador_alge -> . DIVIDE
    (70) operador_alge -> . MOD
    (71) operador_alge -> . EXP

    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    TIMES           shift and go to state 87
    DIVIDE          shift and go to state 88
    MOD             shift and go to state 89
    EXP             shift and go to state 90

    operador_alge                  shift and go to state 91

state 44

    (42) expr_if_else -> ELIF condiciones_expr_if_else . DPUNTOS

    DPUNTOS         shift and go to state 92


state 45

    (43) expr_if_else -> ELSE DPUNTOS .

    ID              reduce using rule 43 (expr_if_else -> ELSE DPUNTOS .)
    DEF             reduce using rule 43 (expr_if_else -> ELSE DPUNTOS .)
    IF              reduce using rule 43 (expr_if_else -> ELSE DPUNTOS .)
    ELIF            reduce using rule 43 (expr_if_else -> ELSE DPUNTOS .)
    ELSE            reduce using rule 43 (expr_if_else -> ELSE DPUNTOS .)
    FOR             reduce using rule 43 (expr_if_else -> ELSE DPUNTOS .)
    RETURN          reduce using rule 43 (expr_if_else -> ELSE DPUNTOS .)
    NUMBER          reduce using rule 43 (expr_if_else -> ELSE DPUNTOS .)
    STRING          reduce using rule 43 (expr_if_else -> ELSE DPUNTOS .)
    TRUE            reduce using rule 43 (expr_if_else -> ELSE DPUNTOS .)
    FALSE           reduce using rule 43 (expr_if_else -> ELSE DPUNTOS .)
    $end            reduce using rule 43 (expr_if_else -> ELSE DPUNTOS .)


state 46

    (51) def_for -> FOR variable . IN RANGE LPAREN params_for RPAREN DPUNTOS

    IN              shift and go to state 93


state 47

    (15) variable -> ID .
    (23) lista -> ID . LCORC variable RCORC
    (24) lista -> ID . LCORC operaciones_algebraica RCORC

    IN              reduce using rule 15 (variable -> ID .)
    AND             reduce using rule 15 (variable -> ID .)
    OR              reduce using rule 15 (variable -> ID .)
    MAYOR           reduce using rule 15 (variable -> ID .)
    MENOR           reduce using rule 15 (variable -> ID .)
    DEQUALS         reduce using rule 15 (variable -> ID .)
    NEGADOR         reduce using rule 15 (variable -> ID .)
    DPUNTOS         reduce using rule 15 (variable -> ID .)
    RPAREN          reduce using rule 15 (variable -> ID .)
    COMA            reduce using rule 15 (variable -> ID .)
    LCORC           shift and go to state 32


state 48

    (38) expr_return -> RETURN variable .
    (64) variables_operaciones_algebraica -> variable .

    ID              reduce using rule 38 (expr_return -> RETURN variable .)
    DEF             reduce using rule 38 (expr_return -> RETURN variable .)
    IF              reduce using rule 38 (expr_return -> RETURN variable .)
    ELIF            reduce using rule 38 (expr_return -> RETURN variable .)
    ELSE            reduce using rule 38 (expr_return -> RETURN variable .)
    FOR             reduce using rule 38 (expr_return -> RETURN variable .)
    RETURN          reduce using rule 38 (expr_return -> RETURN variable .)
    NUMBER          reduce using rule 38 (expr_return -> RETURN variable .)
    STRING          reduce using rule 38 (expr_return -> RETURN variable .)
    TRUE            reduce using rule 38 (expr_return -> RETURN variable .)
    FALSE           reduce using rule 38 (expr_return -> RETURN variable .)
    $end            reduce using rule 38 (expr_return -> RETURN variable .)
    PLUS            reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    MINUS           reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    TIMES           reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    DIVIDE          reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    MOD             reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    EXP             reduce using rule 64 (variables_operaciones_algebraica -> variable .)


state 49

    (39) expr_return -> RETURN expr_funcion .
    (65) variables_operaciones_algebraica -> expr_funcion .

    ID              reduce using rule 39 (expr_return -> RETURN expr_funcion .)
    DEF             reduce using rule 39 (expr_return -> RETURN expr_funcion .)
    IF              reduce using rule 39 (expr_return -> RETURN expr_funcion .)
    ELIF            reduce using rule 39 (expr_return -> RETURN expr_funcion .)
    ELSE            reduce using rule 39 (expr_return -> RETURN expr_funcion .)
    FOR             reduce using rule 39 (expr_return -> RETURN expr_funcion .)
    RETURN          reduce using rule 39 (expr_return -> RETURN expr_funcion .)
    NUMBER          reduce using rule 39 (expr_return -> RETURN expr_funcion .)
    STRING          reduce using rule 39 (expr_return -> RETURN expr_funcion .)
    TRUE            reduce using rule 39 (expr_return -> RETURN expr_funcion .)
    FALSE           reduce using rule 39 (expr_return -> RETURN expr_funcion .)
    $end            reduce using rule 39 (expr_return -> RETURN expr_funcion .)
    PLUS            reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    MINUS           reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    TIMES           reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    DIVIDE          reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    MOD             reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    EXP             reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)


state 50

    (40) expr_return -> RETURN operaciones_algebraica .
    (63) operaciones_algebraica -> operaciones_algebraica . operador_alge variables_operaciones_algebraica
    (66) operador_alge -> . PLUS
    (67) operador_alge -> . MINUS
    (68) operador_alge -> . TIMES
    (69) operador_alge -> . DIVIDE
    (70) operador_alge -> . MOD
    (71) operador_alge -> . EXP

    ID              reduce using rule 40 (expr_return -> RETURN operaciones_algebraica .)
    DEF             reduce using rule 40 (expr_return -> RETURN operaciones_algebraica .)
    IF              reduce using rule 40 (expr_return -> RETURN operaciones_algebraica .)
    ELIF            reduce using rule 40 (expr_return -> RETURN operaciones_algebraica .)
    ELSE            reduce using rule 40 (expr_return -> RETURN operaciones_algebraica .)
    FOR             reduce using rule 40 (expr_return -> RETURN operaciones_algebraica .)
    RETURN          reduce using rule 40 (expr_return -> RETURN operaciones_algebraica .)
    NUMBER          reduce using rule 40 (expr_return -> RETURN operaciones_algebraica .)
    STRING          reduce using rule 40 (expr_return -> RETURN operaciones_algebraica .)
    TRUE            reduce using rule 40 (expr_return -> RETURN operaciones_algebraica .)
    FALSE           reduce using rule 40 (expr_return -> RETURN operaciones_algebraica .)
    $end            reduce using rule 40 (expr_return -> RETURN operaciones_algebraica .)
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    TIMES           shift and go to state 87
    DIVIDE          shift and go to state 88
    MOD             shift and go to state 89
    EXP             shift and go to state 90

    operador_alge                  shift and go to state 84

state 51

    (62) operaciones_algebraica -> LPAREN . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (64) variables_operaciones_algebraica -> . variable
    (65) variables_operaciones_algebraica -> . expr_funcion
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC

    ID              shift and go to state 42
    NUMBER          shift and go to state 20
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    variables_operaciones_algebraica shift and go to state 94
    variable                       shift and go to state 95
    expr_funcion                   shift and go to state 67
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23

state 52

    (26) expr_float -> NUMBER PUNTO . NUMBER

    NUMBER          shift and go to state 96


state 53

    (3) bloque_codigo -> bloque_codigo linea_codigo empty .

    ID              reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    DEF             reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    IF              reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    ELIF            reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    ELSE            reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    FOR             reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    RETURN          reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    NUMBER          reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    STRING          reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    TRUE            reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    FALSE           reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    $end            reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)


state 54

    (73) call_method -> call_method PUNTO expr_funcion .

    PUNTO           reduce using rule 73 (call_method -> call_method PUNTO expr_funcion .)
    ID              reduce using rule 73 (call_method -> call_method PUNTO expr_funcion .)
    DEF             reduce using rule 73 (call_method -> call_method PUNTO expr_funcion .)
    IF              reduce using rule 73 (call_method -> call_method PUNTO expr_funcion .)
    ELIF            reduce using rule 73 (call_method -> call_method PUNTO expr_funcion .)
    ELSE            reduce using rule 73 (call_method -> call_method PUNTO expr_funcion .)
    FOR             reduce using rule 73 (call_method -> call_method PUNTO expr_funcion .)
    RETURN          reduce using rule 73 (call_method -> call_method PUNTO expr_funcion .)
    NUMBER          reduce using rule 73 (call_method -> call_method PUNTO expr_funcion .)
    STRING          reduce using rule 73 (call_method -> call_method PUNTO expr_funcion .)
    TRUE            reduce using rule 73 (call_method -> call_method PUNTO expr_funcion .)
    FALSE           reduce using rule 73 (call_method -> call_method PUNTO expr_funcion .)
    $end            reduce using rule 73 (call_method -> call_method PUNTO expr_funcion .)


state 55

    (21) expr_funcion -> ID LPAREN params . RPAREN
    (13) params -> params . COMA variable

    RPAREN          shift and go to state 97
    COMA            shift and go to state 98


state 56

    (22) expr_funcion -> ID LPAREN RPAREN .

    ID              reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    DEF             reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    IF              reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    ELIF            reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    ELSE            reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    FOR             reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    RETURN          reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    NUMBER          reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    STRING          reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    TRUE            reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    FALSE           reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    $end            reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    DPUNTOS         reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    AND             reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    OR              reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    MAYOR           reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    MENOR           reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    DEQUALS         reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    NEGADOR         reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    MOD             reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    EXP             reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    PUNTO           reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    COMA            reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)
    RCORC           reduce using rule 22 (expr_funcion -> ID LPAREN RPAREN .)


state 57

    (12) params -> variable .

    RPAREN          reduce using rule 12 (params -> variable .)
    COMA            reduce using rule 12 (params -> variable .)


state 58

    (14) params -> expr_funcion .

    RPAREN          reduce using rule 14 (params -> expr_funcion .)
    COMA            reduce using rule 14 (params -> expr_funcion .)


state 59

    (27) expr_asign -> ID EQUALS variable .
    (72) call_method -> variable . PUNTO expr_funcion
    (64) variables_operaciones_algebraica -> variable .

    ID              reduce using rule 27 (expr_asign -> ID EQUALS variable .)
    DEF             reduce using rule 27 (expr_asign -> ID EQUALS variable .)
    IF              reduce using rule 27 (expr_asign -> ID EQUALS variable .)
    ELIF            reduce using rule 27 (expr_asign -> ID EQUALS variable .)
    ELSE            reduce using rule 27 (expr_asign -> ID EQUALS variable .)
    FOR             reduce using rule 27 (expr_asign -> ID EQUALS variable .)
    RETURN          reduce using rule 27 (expr_asign -> ID EQUALS variable .)
    NUMBER          reduce using rule 27 (expr_asign -> ID EQUALS variable .)
    STRING          reduce using rule 27 (expr_asign -> ID EQUALS variable .)
    TRUE            reduce using rule 27 (expr_asign -> ID EQUALS variable .)
    FALSE           reduce using rule 27 (expr_asign -> ID EQUALS variable .)
    $end            reduce using rule 27 (expr_asign -> ID EQUALS variable .)
    PUNTO           shift and go to state 35
    PLUS            reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    MINUS           reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    TIMES           reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    DIVIDE          reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    MOD             reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    EXP             reduce using rule 64 (variables_operaciones_algebraica -> variable .)


state 60

    (28) expr_asign -> ID EQUALS expr_funcion .
    (65) variables_operaciones_algebraica -> expr_funcion .

    ID              reduce using rule 28 (expr_asign -> ID EQUALS expr_funcion .)
    DEF             reduce using rule 28 (expr_asign -> ID EQUALS expr_funcion .)
    IF              reduce using rule 28 (expr_asign -> ID EQUALS expr_funcion .)
    ELIF            reduce using rule 28 (expr_asign -> ID EQUALS expr_funcion .)
    ELSE            reduce using rule 28 (expr_asign -> ID EQUALS expr_funcion .)
    FOR             reduce using rule 28 (expr_asign -> ID EQUALS expr_funcion .)
    RETURN          reduce using rule 28 (expr_asign -> ID EQUALS expr_funcion .)
    NUMBER          reduce using rule 28 (expr_asign -> ID EQUALS expr_funcion .)
    STRING          reduce using rule 28 (expr_asign -> ID EQUALS expr_funcion .)
    TRUE            reduce using rule 28 (expr_asign -> ID EQUALS expr_funcion .)
    FALSE           reduce using rule 28 (expr_asign -> ID EQUALS expr_funcion .)
    $end            reduce using rule 28 (expr_asign -> ID EQUALS expr_funcion .)
    PLUS            reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    MINUS           reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    TIMES           reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    DIVIDE          reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    MOD             reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    EXP             reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)


state 61

    (29) expr_asign -> ID EQUALS operaciones_algebraica .
    (63) operaciones_algebraica -> operaciones_algebraica . operador_alge variables_operaciones_algebraica
    (66) operador_alge -> . PLUS
    (67) operador_alge -> . MINUS
    (68) operador_alge -> . TIMES
    (69) operador_alge -> . DIVIDE
    (70) operador_alge -> . MOD
    (71) operador_alge -> . EXP

    ID              reduce using rule 29 (expr_asign -> ID EQUALS operaciones_algebraica .)
    DEF             reduce using rule 29 (expr_asign -> ID EQUALS operaciones_algebraica .)
    IF              reduce using rule 29 (expr_asign -> ID EQUALS operaciones_algebraica .)
    ELIF            reduce using rule 29 (expr_asign -> ID EQUALS operaciones_algebraica .)
    ELSE            reduce using rule 29 (expr_asign -> ID EQUALS operaciones_algebraica .)
    FOR             reduce using rule 29 (expr_asign -> ID EQUALS operaciones_algebraica .)
    RETURN          reduce using rule 29 (expr_asign -> ID EQUALS operaciones_algebraica .)
    NUMBER          reduce using rule 29 (expr_asign -> ID EQUALS operaciones_algebraica .)
    STRING          reduce using rule 29 (expr_asign -> ID EQUALS operaciones_algebraica .)
    TRUE            reduce using rule 29 (expr_asign -> ID EQUALS operaciones_algebraica .)
    FALSE           reduce using rule 29 (expr_asign -> ID EQUALS operaciones_algebraica .)
    $end            reduce using rule 29 (expr_asign -> ID EQUALS operaciones_algebraica .)
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    TIMES           shift and go to state 87
    DIVIDE          shift and go to state 88
    MOD             shift and go to state 89
    EXP             shift and go to state 90

    operador_alge                  shift and go to state 84

state 62

    (30) expr_asign -> ID EQUALS LCORC . RCORC

    RCORC           shift and go to state 99


state 63

    (31) expr_asign -> ID EQUALS call_method .
    (73) call_method -> call_method . PUNTO expr_funcion

    ID              reduce using rule 31 (expr_asign -> ID EQUALS call_method .)
    DEF             reduce using rule 31 (expr_asign -> ID EQUALS call_method .)
    IF              reduce using rule 31 (expr_asign -> ID EQUALS call_method .)
    ELIF            reduce using rule 31 (expr_asign -> ID EQUALS call_method .)
    ELSE            reduce using rule 31 (expr_asign -> ID EQUALS call_method .)
    FOR             reduce using rule 31 (expr_asign -> ID EQUALS call_method .)
    RETURN          reduce using rule 31 (expr_asign -> ID EQUALS call_method .)
    NUMBER          reduce using rule 31 (expr_asign -> ID EQUALS call_method .)
    STRING          reduce using rule 31 (expr_asign -> ID EQUALS call_method .)
    TRUE            reduce using rule 31 (expr_asign -> ID EQUALS call_method .)
    FALSE           reduce using rule 31 (expr_asign -> ID EQUALS call_method .)
    $end            reduce using rule 31 (expr_asign -> ID EQUALS call_method .)
    PUNTO           shift and go to state 29


state 64

    (15) variable -> ID .
    (23) lista -> ID . LCORC variable RCORC
    (24) lista -> ID . LCORC operaciones_algebraica RCORC
    (21) expr_funcion -> ID . LPAREN params RPAREN
    (22) expr_funcion -> ID . LPAREN RPAREN

    RCORC           reduce using rule 15 (variable -> ID .)
    PLUS            reduce using rule 15 (variable -> ID .)
    MINUS           reduce using rule 15 (variable -> ID .)
    TIMES           reduce using rule 15 (variable -> ID .)
    DIVIDE          reduce using rule 15 (variable -> ID .)
    MOD             reduce using rule 15 (variable -> ID .)
    EXP             reduce using rule 15 (variable -> ID .)
    COMA            reduce using rule 15 (variable -> ID .)
    RPAREN          reduce using rule 15 (variable -> ID .)
    LCORC           shift and go to state 32
    LPAREN          shift and go to state 30


state 65

    (23) lista -> ID LCORC variable . RCORC
    (64) variables_operaciones_algebraica -> variable .

    RCORC           shift and go to state 100
    PLUS            reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    MINUS           reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    TIMES           reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    DIVIDE          reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    MOD             reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    EXP             reduce using rule 64 (variables_operaciones_algebraica -> variable .)


state 66

    (24) lista -> ID LCORC operaciones_algebraica . RCORC
    (63) operaciones_algebraica -> operaciones_algebraica . operador_alge variables_operaciones_algebraica
    (66) operador_alge -> . PLUS
    (67) operador_alge -> . MINUS
    (68) operador_alge -> . TIMES
    (69) operador_alge -> . DIVIDE
    (70) operador_alge -> . MOD
    (71) operador_alge -> . EXP

    RCORC           shift and go to state 101
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    TIMES           shift and go to state 87
    DIVIDE          shift and go to state 88
    MOD             shift and go to state 89
    EXP             shift and go to state 90

    operador_alge                  shift and go to state 84

state 67

    (65) variables_operaciones_algebraica -> expr_funcion .

    PLUS            reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    MINUS           reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    TIMES           reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    DIVIDE          reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    MOD             reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    EXP             reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    MAYOR           reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    MENOR           reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    DEQUALS         reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    NEGADOR         reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    ID              reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    DEF             reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    IF              reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    ELIF            reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    ELSE            reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    FOR             reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    RETURN          reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    NUMBER          reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    STRING          reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    TRUE            reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    FALSE           reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    $end            reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    RCORC           reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    COMA            reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    RPAREN          reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)


state 68

    (11) expr_def_funcion -> DEF expr_funcion DPUNTOS .

    ID              reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    DEF             reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    IF              reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    ELIF            reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    ELSE            reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    FOR             reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    RETURN          reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    NUMBER          reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    STRING          reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    TRUE            reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    FALSE           reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    $end            reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)


state 69

    (72) call_method -> variable PUNTO expr_funcion .

    PUNTO           reduce using rule 72 (call_method -> variable PUNTO expr_funcion .)
    ID              reduce using rule 72 (call_method -> variable PUNTO expr_funcion .)
    DEF             reduce using rule 72 (call_method -> variable PUNTO expr_funcion .)
    IF              reduce using rule 72 (call_method -> variable PUNTO expr_funcion .)
    ELIF            reduce using rule 72 (call_method -> variable PUNTO expr_funcion .)
    ELSE            reduce using rule 72 (call_method -> variable PUNTO expr_funcion .)
    FOR             reduce using rule 72 (call_method -> variable PUNTO expr_funcion .)
    RETURN          reduce using rule 72 (call_method -> variable PUNTO expr_funcion .)
    NUMBER          reduce using rule 72 (call_method -> variable PUNTO expr_funcion .)
    STRING          reduce using rule 72 (call_method -> variable PUNTO expr_funcion .)
    TRUE            reduce using rule 72 (call_method -> variable PUNTO expr_funcion .)
    FALSE           reduce using rule 72 (call_method -> variable PUNTO expr_funcion .)
    $end            reduce using rule 72 (call_method -> variable PUNTO expr_funcion .)


state 70

    (41) expr_if_else -> IF condiciones_expr_if_else DPUNTOS .

    ID              reduce using rule 41 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    DEF             reduce using rule 41 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    IF              reduce using rule 41 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    ELIF            reduce using rule 41 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    ELSE            reduce using rule 41 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    FOR             reduce using rule 41 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    RETURN          reduce using rule 41 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    NUMBER          reduce using rule 41 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    STRING          reduce using rule 41 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    TRUE            reduce using rule 41 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    FALSE           reduce using rule 41 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    $end            reduce using rule 41 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)


state 71

    (45) condiciones_expr_if_else -> condiciones and_or . condiciones_expr_if_else
    (44) condiciones_expr_if_else -> . condiciones
    (45) condiciones_expr_if_else -> . condiciones and_or condiciones_expr_if_else
    (46) condiciones_expr_if_else -> . LPAREN condiciones_expr_if_else RPAREN
    (47) condiciones -> . variable
    (48) condiciones -> . expr_funcion
    (49) condiciones -> . operaciones_algebraica operador_igualdad variable
    (50) condiciones -> . condiciones operador_igualdad condiciones
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN
    (61) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (62) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (63) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC
    (64) variables_operaciones_algebraica -> . variable
    (65) variables_operaciones_algebraica -> . expr_funcion

    LPAREN          shift and go to state 38
    ID              shift and go to state 42
    NUMBER          shift and go to state 20
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    condiciones                    shift and go to state 37
    condiciones_expr_if_else       shift and go to state 102
    variable                       shift and go to state 39
    expr_funcion                   shift and go to state 40
    operaciones_algebraica         shift and go to state 41
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23
    variables_operaciones_algebraica shift and go to state 43

state 72

    (50) condiciones -> condiciones operador_igualdad . condiciones
    (47) condiciones -> . variable
    (48) condiciones -> . expr_funcion
    (49) condiciones -> . operaciones_algebraica operador_igualdad variable
    (50) condiciones -> . condiciones operador_igualdad condiciones
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN
    (61) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (62) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (63) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC
    (64) variables_operaciones_algebraica -> . variable
    (65) variables_operaciones_algebraica -> . expr_funcion

    ID              shift and go to state 42
    NUMBER          shift and go to state 20
    LPAREN          shift and go to state 51
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    condiciones                    shift and go to state 103
    variable                       shift and go to state 39
    expr_funcion                   shift and go to state 40
    operaciones_algebraica         shift and go to state 41
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23
    variables_operaciones_algebraica shift and go to state 43

state 73

    (59) and_or -> AND .

    LPAREN          reduce using rule 59 (and_or -> AND .)
    ID              reduce using rule 59 (and_or -> AND .)
    NUMBER          reduce using rule 59 (and_or -> AND .)
    STRING          reduce using rule 59 (and_or -> AND .)
    TRUE            reduce using rule 59 (and_or -> AND .)
    FALSE           reduce using rule 59 (and_or -> AND .)


state 74

    (60) and_or -> OR .

    LPAREN          reduce using rule 60 (and_or -> OR .)
    ID              reduce using rule 60 (and_or -> OR .)
    NUMBER          reduce using rule 60 (and_or -> OR .)
    STRING          reduce using rule 60 (and_or -> OR .)
    TRUE            reduce using rule 60 (and_or -> OR .)
    FALSE           reduce using rule 60 (and_or -> OR .)


state 75

    (32) operador_igualdad -> MAYOR .
    (35) operador_igualdad -> MAYOR . EQUALS

    ID              reduce using rule 32 (operador_igualdad -> MAYOR .)
    NUMBER          reduce using rule 32 (operador_igualdad -> MAYOR .)
    LPAREN          reduce using rule 32 (operador_igualdad -> MAYOR .)
    STRING          reduce using rule 32 (operador_igualdad -> MAYOR .)
    TRUE            reduce using rule 32 (operador_igualdad -> MAYOR .)
    FALSE           reduce using rule 32 (operador_igualdad -> MAYOR .)
    EQUALS          shift and go to state 104


state 76

    (33) operador_igualdad -> MENOR .
    (36) operador_igualdad -> MENOR . EQUALS

    ID              reduce using rule 33 (operador_igualdad -> MENOR .)
    NUMBER          reduce using rule 33 (operador_igualdad -> MENOR .)
    LPAREN          reduce using rule 33 (operador_igualdad -> MENOR .)
    STRING          reduce using rule 33 (operador_igualdad -> MENOR .)
    TRUE            reduce using rule 33 (operador_igualdad -> MENOR .)
    FALSE           reduce using rule 33 (operador_igualdad -> MENOR .)
    EQUALS          shift and go to state 105


state 77

    (34) operador_igualdad -> DEQUALS .

    ID              reduce using rule 34 (operador_igualdad -> DEQUALS .)
    NUMBER          reduce using rule 34 (operador_igualdad -> DEQUALS .)
    LPAREN          reduce using rule 34 (operador_igualdad -> DEQUALS .)
    STRING          reduce using rule 34 (operador_igualdad -> DEQUALS .)
    TRUE            reduce using rule 34 (operador_igualdad -> DEQUALS .)
    FALSE           reduce using rule 34 (operador_igualdad -> DEQUALS .)


state 78

    (37) operador_igualdad -> NEGADOR . EQUALS

    EQUALS          shift and go to state 106


state 79

    (46) condiciones_expr_if_else -> LPAREN condiciones_expr_if_else . RPAREN

    RPAREN          shift and go to state 107


state 80

    (62) operaciones_algebraica -> LPAREN variables_operaciones_algebraica . operador_alge variables_operaciones_algebraica RPAREN
    (61) operaciones_algebraica -> variables_operaciones_algebraica . operador_alge variables_operaciones_algebraica
    (66) operador_alge -> . PLUS
    (67) operador_alge -> . MINUS
    (68) operador_alge -> . TIMES
    (69) operador_alge -> . DIVIDE
    (70) operador_alge -> . MOD
    (71) operador_alge -> . EXP

    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    TIMES           shift and go to state 87
    DIVIDE          shift and go to state 88
    MOD             shift and go to state 89
    EXP             shift and go to state 90

    operador_alge                  shift and go to state 108

state 81

    (64) variables_operaciones_algebraica -> variable .
    (47) condiciones -> variable .

    PLUS            reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    MINUS           reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    TIMES           reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    DIVIDE          reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    MOD             reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    EXP             reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    AND             reduce using rule 47 (condiciones -> variable .)
    OR              reduce using rule 47 (condiciones -> variable .)
    MAYOR           reduce using rule 47 (condiciones -> variable .)
    MENOR           reduce using rule 47 (condiciones -> variable .)
    DEQUALS         reduce using rule 47 (condiciones -> variable .)
    NEGADOR         reduce using rule 47 (condiciones -> variable .)
    RPAREN          reduce using rule 47 (condiciones -> variable .)


state 82

    (65) variables_operaciones_algebraica -> expr_funcion .
    (48) condiciones -> expr_funcion .

    PLUS            reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    MINUS           reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    TIMES           reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    DIVIDE          reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    MOD             reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    EXP             reduce using rule 65 (variables_operaciones_algebraica -> expr_funcion .)
    AND             reduce using rule 48 (condiciones -> expr_funcion .)
    OR              reduce using rule 48 (condiciones -> expr_funcion .)
    MAYOR           reduce using rule 48 (condiciones -> expr_funcion .)
    MENOR           reduce using rule 48 (condiciones -> expr_funcion .)
    DEQUALS         reduce using rule 48 (condiciones -> expr_funcion .)
    NEGADOR         reduce using rule 48 (condiciones -> expr_funcion .)
    RPAREN          reduce using rule 48 (condiciones -> expr_funcion .)


state 83

    (49) condiciones -> operaciones_algebraica operador_igualdad . variable
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC

    ID              shift and go to state 47
    NUMBER          shift and go to state 20
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    variable                       shift and go to state 109
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23

state 84

    (63) operaciones_algebraica -> operaciones_algebraica operador_alge . variables_operaciones_algebraica
    (64) variables_operaciones_algebraica -> . variable
    (65) variables_operaciones_algebraica -> . expr_funcion
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC

    ID              shift and go to state 42
    NUMBER          shift and go to state 20
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    variables_operaciones_algebraica shift and go to state 110
    variable                       shift and go to state 95
    expr_funcion                   shift and go to state 67
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23

state 85

    (66) operador_alge -> PLUS .

    ID              reduce using rule 66 (operador_alge -> PLUS .)
    NUMBER          reduce using rule 66 (operador_alge -> PLUS .)
    STRING          reduce using rule 66 (operador_alge -> PLUS .)
    TRUE            reduce using rule 66 (operador_alge -> PLUS .)
    FALSE           reduce using rule 66 (operador_alge -> PLUS .)


state 86

    (67) operador_alge -> MINUS .

    ID              reduce using rule 67 (operador_alge -> MINUS .)
    NUMBER          reduce using rule 67 (operador_alge -> MINUS .)
    STRING          reduce using rule 67 (operador_alge -> MINUS .)
    TRUE            reduce using rule 67 (operador_alge -> MINUS .)
    FALSE           reduce using rule 67 (operador_alge -> MINUS .)


state 87

    (68) operador_alge -> TIMES .

    ID              reduce using rule 68 (operador_alge -> TIMES .)
    NUMBER          reduce using rule 68 (operador_alge -> TIMES .)
    STRING          reduce using rule 68 (operador_alge -> TIMES .)
    TRUE            reduce using rule 68 (operador_alge -> TIMES .)
    FALSE           reduce using rule 68 (operador_alge -> TIMES .)


state 88

    (69) operador_alge -> DIVIDE .

    ID              reduce using rule 69 (operador_alge -> DIVIDE .)
    NUMBER          reduce using rule 69 (operador_alge -> DIVIDE .)
    STRING          reduce using rule 69 (operador_alge -> DIVIDE .)
    TRUE            reduce using rule 69 (operador_alge -> DIVIDE .)
    FALSE           reduce using rule 69 (operador_alge -> DIVIDE .)


state 89

    (70) operador_alge -> MOD .

    ID              reduce using rule 70 (operador_alge -> MOD .)
    NUMBER          reduce using rule 70 (operador_alge -> MOD .)
    STRING          reduce using rule 70 (operador_alge -> MOD .)
    TRUE            reduce using rule 70 (operador_alge -> MOD .)
    FALSE           reduce using rule 70 (operador_alge -> MOD .)


state 90

    (71) operador_alge -> EXP .

    ID              reduce using rule 71 (operador_alge -> EXP .)
    NUMBER          reduce using rule 71 (operador_alge -> EXP .)
    STRING          reduce using rule 71 (operador_alge -> EXP .)
    TRUE            reduce using rule 71 (operador_alge -> EXP .)
    FALSE           reduce using rule 71 (operador_alge -> EXP .)


state 91

    (61) operaciones_algebraica -> variables_operaciones_algebraica operador_alge . variables_operaciones_algebraica
    (64) variables_operaciones_algebraica -> . variable
    (65) variables_operaciones_algebraica -> . expr_funcion
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC

    ID              shift and go to state 42
    NUMBER          shift and go to state 20
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    variables_operaciones_algebraica shift and go to state 111
    variable                       shift and go to state 95
    expr_funcion                   shift and go to state 67
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23

state 92

    (42) expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .

    ID              reduce using rule 42 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    DEF             reduce using rule 42 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    IF              reduce using rule 42 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    ELIF            reduce using rule 42 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    ELSE            reduce using rule 42 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    FOR             reduce using rule 42 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    RETURN          reduce using rule 42 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    NUMBER          reduce using rule 42 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    STRING          reduce using rule 42 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    TRUE            reduce using rule 42 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    FALSE           reduce using rule 42 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    $end            reduce using rule 42 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)


state 93

    (51) def_for -> FOR variable IN . RANGE LPAREN params_for RPAREN DPUNTOS

    RANGE           shift and go to state 112


state 94

    (62) operaciones_algebraica -> LPAREN variables_operaciones_algebraica . operador_alge variables_operaciones_algebraica RPAREN
    (66) operador_alge -> . PLUS
    (67) operador_alge -> . MINUS
    (68) operador_alge -> . TIMES
    (69) operador_alge -> . DIVIDE
    (70) operador_alge -> . MOD
    (71) operador_alge -> . EXP

    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    TIMES           shift and go to state 87
    DIVIDE          shift and go to state 88
    MOD             shift and go to state 89
    EXP             shift and go to state 90

    operador_alge                  shift and go to state 113

state 95

    (64) variables_operaciones_algebraica -> variable .

    PLUS            reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    MINUS           reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    TIMES           reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    DIVIDE          reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    MOD             reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    EXP             reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    MAYOR           reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    MENOR           reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    DEQUALS         reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    NEGADOR         reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    ID              reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    DEF             reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    IF              reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    ELIF            reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    ELSE            reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    FOR             reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    RETURN          reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    NUMBER          reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    STRING          reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    TRUE            reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    FALSE           reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    $end            reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    RCORC           reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    COMA            reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    RPAREN          reduce using rule 64 (variables_operaciones_algebraica -> variable .)


state 96

    (26) expr_float -> NUMBER PUNTO NUMBER .

    PUNTO           reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    AND             reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    OR              reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    MAYOR           reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    MENOR           reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    DEQUALS         reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    NEGADOR         reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    DPUNTOS         reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    PLUS            reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    MINUS           reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    TIMES           reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    DIVIDE          reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    MOD             reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    EXP             reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    IN              reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    ID              reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    DEF             reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    IF              reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    ELIF            reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    ELSE            reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    FOR             reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    RETURN          reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    NUMBER          reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    STRING          reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    TRUE            reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    FALSE           reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    $end            reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    RPAREN          reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    COMA            reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)
    RCORC           reduce using rule 26 (expr_float -> NUMBER PUNTO NUMBER .)


state 97

    (21) expr_funcion -> ID LPAREN params RPAREN .

    ID              reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    DEF             reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    IF              reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    ELIF            reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    ELSE            reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    FOR             reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    RETURN          reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    NUMBER          reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    STRING          reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    TRUE            reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    FALSE           reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    $end            reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    DPUNTOS         reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    AND             reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    OR              reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    MAYOR           reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    MENOR           reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    DEQUALS         reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    NEGADOR         reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    PLUS            reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    MINUS           reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    TIMES           reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    DIVIDE          reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    MOD             reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    EXP             reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    PUNTO           reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    RPAREN          reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    COMA            reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)
    RCORC           reduce using rule 21 (expr_funcion -> ID LPAREN params RPAREN .)


state 98

    (13) params -> params COMA . variable
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC

    ID              shift and go to state 47
    NUMBER          shift and go to state 20
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    variable                       shift and go to state 114
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23

state 99

    (30) expr_asign -> ID EQUALS LCORC RCORC .

    ID              reduce using rule 30 (expr_asign -> ID EQUALS LCORC RCORC .)
    DEF             reduce using rule 30 (expr_asign -> ID EQUALS LCORC RCORC .)
    IF              reduce using rule 30 (expr_asign -> ID EQUALS LCORC RCORC .)
    ELIF            reduce using rule 30 (expr_asign -> ID EQUALS LCORC RCORC .)
    ELSE            reduce using rule 30 (expr_asign -> ID EQUALS LCORC RCORC .)
    FOR             reduce using rule 30 (expr_asign -> ID EQUALS LCORC RCORC .)
    RETURN          reduce using rule 30 (expr_asign -> ID EQUALS LCORC RCORC .)
    NUMBER          reduce using rule 30 (expr_asign -> ID EQUALS LCORC RCORC .)
    STRING          reduce using rule 30 (expr_asign -> ID EQUALS LCORC RCORC .)
    TRUE            reduce using rule 30 (expr_asign -> ID EQUALS LCORC RCORC .)
    FALSE           reduce using rule 30 (expr_asign -> ID EQUALS LCORC RCORC .)
    $end            reduce using rule 30 (expr_asign -> ID EQUALS LCORC RCORC .)


state 100

    (23) lista -> ID LCORC variable RCORC .

    PUNTO           reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    AND             reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    OR              reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    MAYOR           reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    MENOR           reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    DEQUALS         reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    NEGADOR         reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    DPUNTOS         reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    PLUS            reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    MINUS           reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    TIMES           reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    DIVIDE          reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    MOD             reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    EXP             reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    IN              reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    ID              reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    DEF             reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    IF              reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    ELIF            reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    ELSE            reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    FOR             reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    RETURN          reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    NUMBER          reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    STRING          reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    TRUE            reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    FALSE           reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    $end            reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    RPAREN          reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    COMA            reduce using rule 23 (lista -> ID LCORC variable RCORC .)
    RCORC           reduce using rule 23 (lista -> ID LCORC variable RCORC .)


state 101

    (24) lista -> ID LCORC operaciones_algebraica RCORC .

    PUNTO           reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    AND             reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    OR              reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    MAYOR           reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    MENOR           reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    DEQUALS         reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    NEGADOR         reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    DPUNTOS         reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    PLUS            reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    MINUS           reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    TIMES           reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    DIVIDE          reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    MOD             reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    EXP             reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    IN              reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    ID              reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    DEF             reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    IF              reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    ELIF            reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    ELSE            reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    FOR             reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    RETURN          reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    NUMBER          reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    STRING          reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    TRUE            reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    FALSE           reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    $end            reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    RPAREN          reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    COMA            reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)
    RCORC           reduce using rule 24 (lista -> ID LCORC operaciones_algebraica RCORC .)


state 102

    (45) condiciones_expr_if_else -> condiciones and_or condiciones_expr_if_else .

    DPUNTOS         reduce using rule 45 (condiciones_expr_if_else -> condiciones and_or condiciones_expr_if_else .)
    RPAREN          reduce using rule 45 (condiciones_expr_if_else -> condiciones and_or condiciones_expr_if_else .)


state 103

    (50) condiciones -> condiciones operador_igualdad condiciones .
    (50) condiciones -> condiciones . operador_igualdad condiciones
    (32) operador_igualdad -> . MAYOR
    (33) operador_igualdad -> . MENOR
    (34) operador_igualdad -> . DEQUALS
    (35) operador_igualdad -> . MAYOR EQUALS
    (36) operador_igualdad -> . MENOR EQUALS
    (37) operador_igualdad -> . NEGADOR EQUALS

  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for DEQUALS resolved as shift
  ! shift/reduce conflict for NEGADOR resolved as shift
    AND             reduce using rule 50 (condiciones -> condiciones operador_igualdad condiciones .)
    OR              reduce using rule 50 (condiciones -> condiciones operador_igualdad condiciones .)
    DPUNTOS         reduce using rule 50 (condiciones -> condiciones operador_igualdad condiciones .)
    RPAREN          reduce using rule 50 (condiciones -> condiciones operador_igualdad condiciones .)
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    DEQUALS         shift and go to state 77
    NEGADOR         shift and go to state 78

  ! MAYOR           [ reduce using rule 50 (condiciones -> condiciones operador_igualdad condiciones .) ]
  ! MENOR           [ reduce using rule 50 (condiciones -> condiciones operador_igualdad condiciones .) ]
  ! DEQUALS         [ reduce using rule 50 (condiciones -> condiciones operador_igualdad condiciones .) ]
  ! NEGADOR         [ reduce using rule 50 (condiciones -> condiciones operador_igualdad condiciones .) ]

    operador_igualdad              shift and go to state 72

state 104

    (35) operador_igualdad -> MAYOR EQUALS .

    ID              reduce using rule 35 (operador_igualdad -> MAYOR EQUALS .)
    NUMBER          reduce using rule 35 (operador_igualdad -> MAYOR EQUALS .)
    LPAREN          reduce using rule 35 (operador_igualdad -> MAYOR EQUALS .)
    STRING          reduce using rule 35 (operador_igualdad -> MAYOR EQUALS .)
    TRUE            reduce using rule 35 (operador_igualdad -> MAYOR EQUALS .)
    FALSE           reduce using rule 35 (operador_igualdad -> MAYOR EQUALS .)


state 105

    (36) operador_igualdad -> MENOR EQUALS .

    ID              reduce using rule 36 (operador_igualdad -> MENOR EQUALS .)
    NUMBER          reduce using rule 36 (operador_igualdad -> MENOR EQUALS .)
    LPAREN          reduce using rule 36 (operador_igualdad -> MENOR EQUALS .)
    STRING          reduce using rule 36 (operador_igualdad -> MENOR EQUALS .)
    TRUE            reduce using rule 36 (operador_igualdad -> MENOR EQUALS .)
    FALSE           reduce using rule 36 (operador_igualdad -> MENOR EQUALS .)


state 106

    (37) operador_igualdad -> NEGADOR EQUALS .

    ID              reduce using rule 37 (operador_igualdad -> NEGADOR EQUALS .)
    NUMBER          reduce using rule 37 (operador_igualdad -> NEGADOR EQUALS .)
    LPAREN          reduce using rule 37 (operador_igualdad -> NEGADOR EQUALS .)
    STRING          reduce using rule 37 (operador_igualdad -> NEGADOR EQUALS .)
    TRUE            reduce using rule 37 (operador_igualdad -> NEGADOR EQUALS .)
    FALSE           reduce using rule 37 (operador_igualdad -> NEGADOR EQUALS .)


state 107

    (46) condiciones_expr_if_else -> LPAREN condiciones_expr_if_else RPAREN .

    DPUNTOS         reduce using rule 46 (condiciones_expr_if_else -> LPAREN condiciones_expr_if_else RPAREN .)
    RPAREN          reduce using rule 46 (condiciones_expr_if_else -> LPAREN condiciones_expr_if_else RPAREN .)


state 108

    (62) operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge . variables_operaciones_algebraica RPAREN
    (61) operaciones_algebraica -> variables_operaciones_algebraica operador_alge . variables_operaciones_algebraica
    (64) variables_operaciones_algebraica -> . variable
    (65) variables_operaciones_algebraica -> . expr_funcion
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC

    ID              shift and go to state 42
    NUMBER          shift and go to state 20
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    variables_operaciones_algebraica shift and go to state 115
    variable                       shift and go to state 95
    expr_funcion                   shift and go to state 67
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23

state 109

    (49) condiciones -> operaciones_algebraica operador_igualdad variable .

    AND             reduce using rule 49 (condiciones -> operaciones_algebraica operador_igualdad variable .)
    OR              reduce using rule 49 (condiciones -> operaciones_algebraica operador_igualdad variable .)
    MAYOR           reduce using rule 49 (condiciones -> operaciones_algebraica operador_igualdad variable .)
    MENOR           reduce using rule 49 (condiciones -> operaciones_algebraica operador_igualdad variable .)
    DEQUALS         reduce using rule 49 (condiciones -> operaciones_algebraica operador_igualdad variable .)
    NEGADOR         reduce using rule 49 (condiciones -> operaciones_algebraica operador_igualdad variable .)
    DPUNTOS         reduce using rule 49 (condiciones -> operaciones_algebraica operador_igualdad variable .)
    RPAREN          reduce using rule 49 (condiciones -> operaciones_algebraica operador_igualdad variable .)


state 110

    (63) operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .

    MAYOR           reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MENOR           reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    DEQUALS         reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    NEGADOR         reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    PLUS            reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MINUS           reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    TIMES           reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    DIVIDE          reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MOD             reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    EXP             reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    ID              reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    DEF             reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    IF              reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    ELIF            reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    ELSE            reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    FOR             reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    RETURN          reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    NUMBER          reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    STRING          reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    TRUE            reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    FALSE           reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    $end            reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    RCORC           reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    COMA            reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    RPAREN          reduce using rule 63 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)


state 111

    (61) operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .

    MAYOR           reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MENOR           reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    DEQUALS         reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    NEGADOR         reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    PLUS            reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MINUS           reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    TIMES           reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    DIVIDE          reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MOD             reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    EXP             reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    ID              reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    DEF             reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    IF              reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    ELIF            reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    ELSE            reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    FOR             reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    RETURN          reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    NUMBER          reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    STRING          reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    TRUE            reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    FALSE           reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    $end            reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    RCORC           reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    COMA            reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    RPAREN          reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)


state 112

    (51) def_for -> FOR variable IN RANGE . LPAREN params_for RPAREN DPUNTOS

    LPAREN          shift and go to state 116


state 113

    (62) operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge . variables_operaciones_algebraica RPAREN
    (64) variables_operaciones_algebraica -> . variable
    (65) variables_operaciones_algebraica -> . expr_funcion
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC

    ID              shift and go to state 42
    NUMBER          shift and go to state 20
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    variables_operaciones_algebraica shift and go to state 117
    variable                       shift and go to state 95
    expr_funcion                   shift and go to state 67
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23

state 114

    (13) params -> params COMA variable .

    RPAREN          reduce using rule 13 (params -> params COMA variable .)
    COMA            reduce using rule 13 (params -> params COMA variable .)


state 115

    (62) operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica . RPAREN
    (61) operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .

    RPAREN          shift and go to state 118
    MAYOR           reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MENOR           reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    DEQUALS         reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    NEGADOR         reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    PLUS            reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MINUS           reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    TIMES           reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    DIVIDE          reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MOD             reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    EXP             reduce using rule 61 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)


state 116

    (51) def_for -> FOR variable IN RANGE LPAREN . params_for RPAREN DPUNTOS
    (52) params_for -> . variable_for
    (53) params_for -> . variable_for COMA variable_for
    (54) params_for -> . variable_for COMA variable_for COMA variable_for
    (55) variable_for -> . variable
    (56) variable_for -> . operaciones_algebraica
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (61) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (62) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (63) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC
    (64) variables_operaciones_algebraica -> . variable
    (65) variables_operaciones_algebraica -> . expr_funcion
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN

    ID              shift and go to state 64
    NUMBER          shift and go to state 20
    LPAREN          shift and go to state 51
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    variable                       shift and go to state 119
    params_for                     shift and go to state 120
    variable_for                   shift and go to state 121
    operaciones_algebraica         shift and go to state 122
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23
    variables_operaciones_algebraica shift and go to state 43
    expr_funcion                   shift and go to state 67

state 117

    (62) operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica . RPAREN

    RPAREN          shift and go to state 118


state 118

    (62) operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .

    MAYOR           reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    MENOR           reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    DEQUALS         reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    NEGADOR         reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    PLUS            reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    MINUS           reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    TIMES           reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    DIVIDE          reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    MOD             reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    EXP             reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    ID              reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    DEF             reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    IF              reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    ELIF            reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    ELSE            reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    FOR             reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    RETURN          reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    NUMBER          reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    STRING          reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    TRUE            reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    FALSE           reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    $end            reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    RCORC           reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    COMA            reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    RPAREN          reduce using rule 62 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)


state 119

    (55) variable_for -> variable .
    (64) variables_operaciones_algebraica -> variable .

    COMA            reduce using rule 55 (variable_for -> variable .)
    RPAREN          reduce using rule 55 (variable_for -> variable .)
    PLUS            reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    MINUS           reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    TIMES           reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    DIVIDE          reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    MOD             reduce using rule 64 (variables_operaciones_algebraica -> variable .)
    EXP             reduce using rule 64 (variables_operaciones_algebraica -> variable .)


state 120

    (51) def_for -> FOR variable IN RANGE LPAREN params_for . RPAREN DPUNTOS

    RPAREN          shift and go to state 123


state 121

    (52) params_for -> variable_for .
    (53) params_for -> variable_for . COMA variable_for
    (54) params_for -> variable_for . COMA variable_for COMA variable_for

    RPAREN          reduce using rule 52 (params_for -> variable_for .)
    COMA            shift and go to state 124


state 122

    (56) variable_for -> operaciones_algebraica .
    (63) operaciones_algebraica -> operaciones_algebraica . operador_alge variables_operaciones_algebraica
    (66) operador_alge -> . PLUS
    (67) operador_alge -> . MINUS
    (68) operador_alge -> . TIMES
    (69) operador_alge -> . DIVIDE
    (70) operador_alge -> . MOD
    (71) operador_alge -> . EXP

    COMA            reduce using rule 56 (variable_for -> operaciones_algebraica .)
    RPAREN          reduce using rule 56 (variable_for -> operaciones_algebraica .)
    PLUS            shift and go to state 85
    MINUS           shift and go to state 86
    TIMES           shift and go to state 87
    DIVIDE          shift and go to state 88
    MOD             shift and go to state 89
    EXP             shift and go to state 90

    operador_alge                  shift and go to state 84

state 123

    (51) def_for -> FOR variable IN RANGE LPAREN params_for RPAREN . DPUNTOS

    DPUNTOS         shift and go to state 125


state 124

    (53) params_for -> variable_for COMA . variable_for
    (54) params_for -> variable_for COMA . variable_for COMA variable_for
    (55) variable_for -> . variable
    (56) variable_for -> . operaciones_algebraica
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (61) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (62) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (63) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC
    (64) variables_operaciones_algebraica -> . variable
    (65) variables_operaciones_algebraica -> . expr_funcion
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN

    ID              shift and go to state 64
    NUMBER          shift and go to state 20
    LPAREN          shift and go to state 51
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    variable_for                   shift and go to state 126
    variable                       shift and go to state 119
    operaciones_algebraica         shift and go to state 122
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23
    variables_operaciones_algebraica shift and go to state 43
    expr_funcion                   shift and go to state 67

state 125

    (51) def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .

    ID              reduce using rule 51 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    DEF             reduce using rule 51 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    IF              reduce using rule 51 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    ELIF            reduce using rule 51 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    ELSE            reduce using rule 51 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    FOR             reduce using rule 51 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    RETURN          reduce using rule 51 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    NUMBER          reduce using rule 51 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    STRING          reduce using rule 51 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    TRUE            reduce using rule 51 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    FALSE           reduce using rule 51 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    $end            reduce using rule 51 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)


state 126

    (53) params_for -> variable_for COMA variable_for .
    (54) params_for -> variable_for COMA variable_for . COMA variable_for

    RPAREN          reduce using rule 53 (params_for -> variable_for COMA variable_for .)
    COMA            shift and go to state 127


state 127

    (54) params_for -> variable_for COMA variable_for COMA . variable_for
    (55) variable_for -> . variable
    (56) variable_for -> . operaciones_algebraica
    (15) variable -> . ID
    (16) variable -> . expr_str
    (17) variable -> . NUMBER
    (18) variable -> . expr_float
    (19) variable -> . bool
    (20) variable -> . lista
    (61) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (62) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (63) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (25) expr_str -> . STRING
    (26) expr_float -> . NUMBER PUNTO NUMBER
    (57) bool -> . TRUE
    (58) bool -> . FALSE
    (23) lista -> . ID LCORC variable RCORC
    (24) lista -> . ID LCORC operaciones_algebraica RCORC
    (64) variables_operaciones_algebraica -> . variable
    (65) variables_operaciones_algebraica -> . expr_funcion
    (21) expr_funcion -> . ID LPAREN params RPAREN
    (22) expr_funcion -> . ID LPAREN RPAREN

    ID              shift and go to state 64
    NUMBER          shift and go to state 20
    LPAREN          shift and go to state 51
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    variable_for                   shift and go to state 128
    variable                       shift and go to state 119
    operaciones_algebraica         shift and go to state 122
    expr_str                       shift and go to state 19
    expr_float                     shift and go to state 21
    bool                           shift and go to state 22
    lista                          shift and go to state 23
    variables_operaciones_algebraica shift and go to state 43
    expr_funcion                   shift and go to state 67

state 128

    (54) params_for -> variable_for COMA variable_for COMA variable_for .

    RPAREN          reduce using rule 54 (params_for -> variable_for COMA variable_for COMA variable_for .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for DEF in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 0 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 0 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 0 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 0 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 103 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 103 resolved as shift
WARNING: shift/reduce conflict for DEQUALS in state 103 resolved as shift
WARNING: shift/reduce conflict for NEGADOR in state 103 resolved as shift
