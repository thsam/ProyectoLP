Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> bloque_codigo
Rule 1     bloque_codigo -> empty
Rule 2     bloque_codigo -> linea_codigo empty
Rule 3     bloque_codigo -> bloque_codigo linea_codigo empty
Rule 4     linea_codigo -> expr_funcion
Rule 5     linea_codigo -> expr_def_funcion
Rule 6     linea_codigo -> expr_asign
Rule 7     linea_codigo -> expr_if_else
Rule 8     linea_codigo -> def_for
Rule 9     linea_codigo -> expr_return
Rule 10    linea_codigo -> call_method
Rule 11    expr_def_funcion -> DEF expr_funcion DPUNTOS
Rule 12    params -> variable
Rule 13    params -> params COMA params
Rule 14    params -> expr_funcion
Rule 15    params -> expr_asign
Rule 16    params -> operaciones_algebraica
Rule 17    variable -> ID
Rule 18    variable -> expr_str
Rule 19    variable -> NUMBER
Rule 20    variable -> expr_float
Rule 21    variable -> bool
Rule 22    variable -> lista
Rule 23    expr_funcion -> ID LPAREN params RPAREN
Rule 24    expr_funcion -> ID LPAREN RPAREN
Rule 25    expr_funcion -> LEN LPAREN params RPAREN
Rule 26    lista -> ID LCORC variable RCORC
Rule 27    lista -> ID LCORC operaciones_algebraica RCORC
Rule 28    lista -> LCORC params COMA params RCORC
Rule 29    expr_str -> STRING
Rule 30    expr_float -> NUMBER PUNTO NUMBER
Rule 31    expr_asign -> ID EQUALS variable
Rule 32    expr_asign -> ID EQUALS expr_funcion
Rule 33    expr_asign -> ID EQUALS operaciones_algebraica
Rule 34    expr_asign -> ID EQUALS LCORC RCORC
Rule 35    expr_asign -> ID EQUALS call_method
Rule 36    operador_igualdad -> MAYOR
Rule 37    operador_igualdad -> MENOR
Rule 38    operador_igualdad -> DEQUALS
Rule 39    operador_igualdad -> MAYOR EQUALS
Rule 40    operador_igualdad -> MENOR EQUALS
Rule 41    operador_igualdad -> NEGADOR EQUALS
Rule 42    expr_return -> RETURN variable
Rule 43    expr_return -> RETURN expr_funcion
Rule 44    expr_return -> RETURN operaciones_algebraica
Rule 45    expr_if_else -> IF condiciones_expr_if_else DPUNTOS
Rule 46    expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS
Rule 47    expr_if_else -> ELSE DPUNTOS
Rule 48    condiciones_expr_if_else -> condiciones
Rule 49    condiciones_expr_if_else -> condiciones and_or condiciones_expr_if_else
Rule 50    condiciones_expr_if_else -> LPAREN condiciones_expr_if_else RPAREN
Rule 51    condiciones -> variable
Rule 52    condiciones -> expr_funcion
Rule 53    condiciones -> operaciones_algebraica operador_igualdad variable
Rule 54    condiciones -> condiciones operador_igualdad condiciones
Rule 55    def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS
Rule 56    params_for -> variable_for
Rule 57    params_for -> variable_for COMA variable_for
Rule 58    params_for -> variable_for COMA variable_for COMA variable_for
Rule 59    variable_for -> variable
Rule 60    variable_for -> operaciones_algebraica
Rule 61    bool -> TRUE
Rule 62    bool -> FALSE
Rule 63    and_or -> AND
Rule 64    and_or -> OR
Rule 65    operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
Rule 66    operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
Rule 67    operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica
Rule 68    variables_operaciones_algebraica -> variable
Rule 69    variables_operaciones_algebraica -> expr_funcion
Rule 70    operador_alge -> PLUS
Rule 71    operador_alge -> MINUS
Rule 72    operador_alge -> TIMES
Rule 73    operador_alge -> DIVIDE
Rule 74    operador_alge -> MOD
Rule 75    operador_alge -> EXP
Rule 76    funcion_lista -> APPEND
Rule 77    funcion_lista -> INDEX
Rule 78    funcion_lista -> POP
Rule 79    call_method -> variable PUNTO expr_funcion
Rule 80    call_method -> call_method PUNTO expr_funcion
Rule 81    call_method -> variable PUNTO funcion_lista LPAREN params RPAREN
Rule 82    empty -> <empty>

Terminals, with rules where they appear

AND                  : 63
APPEND               : 76
COMA                 : 13 28 57 58 58
COMMENT              : 
DEF                  : 11
DEQUALS              : 38
DIVIDE               : 73
DPUNTOS              : 11 45 46 47 55
ELIF                 : 46
ELSE                 : 47
EQUALS               : 31 32 33 34 35 39 40 41
EXP                  : 75
FALSE                : 62
FOR                  : 55
ID                   : 17 23 24 26 27 31 32 33 34 35
IF                   : 45
IN                   : 55
INDEX                : 77
LCORC                : 26 27 28 34
LEN                  : 25
LPAREN               : 23 24 25 50 55 66 81
MAYOR                : 36 39
MENOR                : 37 40
MINUS                : 71
MOD                  : 74
NEGADOR              : 41
NUMBER               : 19 30 30
OR                   : 64
PLUS                 : 70
POP                  : 78
PUNTO                : 30 79 80 81
RANGE                : 55
RCORC                : 26 27 28 34
RETURN               : 42 43 44
RPAREN               : 23 24 25 50 55 66 81
STRING               : 29
TIMES                : 72
TRUE                 : 61
error                : 

Nonterminals, with rules where they appear

and_or               : 49
bloque_codigo        : 3 0
bool                 : 21
call_method          : 10 35 80
condiciones          : 48 49 54 54
condiciones_expr_if_else : 45 46 49 50
def_for              : 8
empty                : 1 2 3
expr_asign           : 6 15
expr_def_funcion     : 5
expr_float           : 20
expr_funcion         : 4 11 14 32 43 52 69 79 80
expr_if_else         : 7
expr_return          : 9
expr_str             : 18
funcion_lista        : 81
linea_codigo         : 2 3
lista                : 22
operaciones_algebraica : 16 27 33 44 53 60 67
operador_alge        : 65 66 67
operador_igualdad    : 53 54
params               : 13 13 23 25 28 28 81
params_for           : 55
variable             : 12 26 31 42 51 53 55 59 68 79 81
variable_for         : 56 57 57 58 58 58
variables_operaciones_algebraica : 65 65 66 66 67

Parsing method: LALR

state 0

    (0) S' -> . bloque_codigo
    (1) bloque_codigo -> . empty
    (2) bloque_codigo -> . linea_codigo empty
    (3) bloque_codigo -> . bloque_codigo linea_codigo empty
    (82) empty -> .
    (4) linea_codigo -> . expr_funcion
    (5) linea_codigo -> . expr_def_funcion
    (6) linea_codigo -> . expr_asign
    (7) linea_codigo -> . expr_if_else
    (8) linea_codigo -> . def_for
    (9) linea_codigo -> . expr_return
    (10) linea_codigo -> . call_method
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (11) expr_def_funcion -> . DEF expr_funcion DPUNTOS
    (31) expr_asign -> . ID EQUALS variable
    (32) expr_asign -> . ID EQUALS expr_funcion
    (33) expr_asign -> . ID EQUALS operaciones_algebraica
    (34) expr_asign -> . ID EQUALS LCORC RCORC
    (35) expr_asign -> . ID EQUALS call_method
    (45) expr_if_else -> . IF condiciones_expr_if_else DPUNTOS
    (46) expr_if_else -> . ELIF condiciones_expr_if_else DPUNTOS
    (47) expr_if_else -> . ELSE DPUNTOS
    (55) def_for -> . FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS
    (42) expr_return -> . RETURN variable
    (43) expr_return -> . RETURN expr_funcion
    (44) expr_return -> . RETURN operaciones_algebraica
    (79) call_method -> . variable PUNTO expr_funcion
    (80) call_method -> . call_method PUNTO expr_funcion
    (81) call_method -> . variable PUNTO funcion_lista LPAREN params RPAREN
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for LCORC resolved as shift
    $end            reduce using rule 82 (empty -> .)
    ID              shift and go to state 11
    LEN             shift and go to state 12
    DEF             shift and go to state 13
    IF              shift and go to state 16
    ELIF            shift and go to state 17
    ELSE            shift and go to state 18
    FOR             shift and go to state 19
    RETURN          shift and go to state 20
    NUMBER          shift and go to state 22
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

  ! ID              [ reduce using rule 82 (empty -> .) ]
  ! LEN             [ reduce using rule 82 (empty -> .) ]
  ! DEF             [ reduce using rule 82 (empty -> .) ]
  ! IF              [ reduce using rule 82 (empty -> .) ]
  ! ELIF            [ reduce using rule 82 (empty -> .) ]
  ! ELSE            [ reduce using rule 82 (empty -> .) ]
  ! FOR             [ reduce using rule 82 (empty -> .) ]
  ! RETURN          [ reduce using rule 82 (empty -> .) ]
  ! NUMBER          [ reduce using rule 82 (empty -> .) ]
  ! STRING          [ reduce using rule 82 (empty -> .) ]
  ! TRUE            [ reduce using rule 82 (empty -> .) ]
  ! FALSE           [ reduce using rule 82 (empty -> .) ]
  ! LCORC           [ reduce using rule 82 (empty -> .) ]

    bloque_codigo                  shift and go to state 1
    empty                          shift and go to state 2
    linea_codigo                   shift and go to state 3
    expr_funcion                   shift and go to state 4
    expr_def_funcion               shift and go to state 5
    expr_asign                     shift and go to state 6
    expr_if_else                   shift and go to state 7
    def_for                        shift and go to state 8
    expr_return                    shift and go to state 9
    call_method                    shift and go to state 10
    variable                       shift and go to state 14
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25

state 1

    (0) S' -> bloque_codigo .
    (3) bloque_codigo -> bloque_codigo . linea_codigo empty
    (4) linea_codigo -> . expr_funcion
    (5) linea_codigo -> . expr_def_funcion
    (6) linea_codigo -> . expr_asign
    (7) linea_codigo -> . expr_if_else
    (8) linea_codigo -> . def_for
    (9) linea_codigo -> . expr_return
    (10) linea_codigo -> . call_method
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (11) expr_def_funcion -> . DEF expr_funcion DPUNTOS
    (31) expr_asign -> . ID EQUALS variable
    (32) expr_asign -> . ID EQUALS expr_funcion
    (33) expr_asign -> . ID EQUALS operaciones_algebraica
    (34) expr_asign -> . ID EQUALS LCORC RCORC
    (35) expr_asign -> . ID EQUALS call_method
    (45) expr_if_else -> . IF condiciones_expr_if_else DPUNTOS
    (46) expr_if_else -> . ELIF condiciones_expr_if_else DPUNTOS
    (47) expr_if_else -> . ELSE DPUNTOS
    (55) def_for -> . FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS
    (42) expr_return -> . RETURN variable
    (43) expr_return -> . RETURN expr_funcion
    (44) expr_return -> . RETURN operaciones_algebraica
    (79) call_method -> . variable PUNTO expr_funcion
    (80) call_method -> . call_method PUNTO expr_funcion
    (81) call_method -> . variable PUNTO funcion_lista LPAREN params RPAREN
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC

    ID              shift and go to state 11
    LEN             shift and go to state 12
    DEF             shift and go to state 13
    IF              shift and go to state 16
    ELIF            shift and go to state 17
    ELSE            shift and go to state 18
    FOR             shift and go to state 19
    RETURN          shift and go to state 20
    NUMBER          shift and go to state 22
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    linea_codigo                   shift and go to state 29
    expr_funcion                   shift and go to state 4
    expr_def_funcion               shift and go to state 5
    expr_asign                     shift and go to state 6
    expr_if_else                   shift and go to state 7
    def_for                        shift and go to state 8
    expr_return                    shift and go to state 9
    call_method                    shift and go to state 10
    variable                       shift and go to state 14
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25

state 2

    (1) bloque_codigo -> empty .

    ID              reduce using rule 1 (bloque_codigo -> empty .)
    LEN             reduce using rule 1 (bloque_codigo -> empty .)
    DEF             reduce using rule 1 (bloque_codigo -> empty .)
    IF              reduce using rule 1 (bloque_codigo -> empty .)
    ELIF            reduce using rule 1 (bloque_codigo -> empty .)
    ELSE            reduce using rule 1 (bloque_codigo -> empty .)
    FOR             reduce using rule 1 (bloque_codigo -> empty .)
    RETURN          reduce using rule 1 (bloque_codigo -> empty .)
    NUMBER          reduce using rule 1 (bloque_codigo -> empty .)
    STRING          reduce using rule 1 (bloque_codigo -> empty .)
    TRUE            reduce using rule 1 (bloque_codigo -> empty .)
    FALSE           reduce using rule 1 (bloque_codigo -> empty .)
    LCORC           reduce using rule 1 (bloque_codigo -> empty .)
    $end            reduce using rule 1 (bloque_codigo -> empty .)


state 3

    (2) bloque_codigo -> linea_codigo . empty
    (82) empty -> .

    ID              reduce using rule 82 (empty -> .)
    LEN             reduce using rule 82 (empty -> .)
    DEF             reduce using rule 82 (empty -> .)
    IF              reduce using rule 82 (empty -> .)
    ELIF            reduce using rule 82 (empty -> .)
    ELSE            reduce using rule 82 (empty -> .)
    FOR             reduce using rule 82 (empty -> .)
    RETURN          reduce using rule 82 (empty -> .)
    NUMBER          reduce using rule 82 (empty -> .)
    STRING          reduce using rule 82 (empty -> .)
    TRUE            reduce using rule 82 (empty -> .)
    FALSE           reduce using rule 82 (empty -> .)
    LCORC           reduce using rule 82 (empty -> .)
    $end            reduce using rule 82 (empty -> .)

    empty                          shift and go to state 30

state 4

    (4) linea_codigo -> expr_funcion .

    ID              reduce using rule 4 (linea_codigo -> expr_funcion .)
    LEN             reduce using rule 4 (linea_codigo -> expr_funcion .)
    DEF             reduce using rule 4 (linea_codigo -> expr_funcion .)
    IF              reduce using rule 4 (linea_codigo -> expr_funcion .)
    ELIF            reduce using rule 4 (linea_codigo -> expr_funcion .)
    ELSE            reduce using rule 4 (linea_codigo -> expr_funcion .)
    FOR             reduce using rule 4 (linea_codigo -> expr_funcion .)
    RETURN          reduce using rule 4 (linea_codigo -> expr_funcion .)
    NUMBER          reduce using rule 4 (linea_codigo -> expr_funcion .)
    STRING          reduce using rule 4 (linea_codigo -> expr_funcion .)
    TRUE            reduce using rule 4 (linea_codigo -> expr_funcion .)
    FALSE           reduce using rule 4 (linea_codigo -> expr_funcion .)
    LCORC           reduce using rule 4 (linea_codigo -> expr_funcion .)
    $end            reduce using rule 4 (linea_codigo -> expr_funcion .)


state 5

    (5) linea_codigo -> expr_def_funcion .

    ID              reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    LEN             reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    DEF             reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    IF              reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    ELIF            reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    ELSE            reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    FOR             reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    RETURN          reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    NUMBER          reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    STRING          reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    TRUE            reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    FALSE           reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    LCORC           reduce using rule 5 (linea_codigo -> expr_def_funcion .)
    $end            reduce using rule 5 (linea_codigo -> expr_def_funcion .)


state 6

    (6) linea_codigo -> expr_asign .

    ID              reduce using rule 6 (linea_codigo -> expr_asign .)
    LEN             reduce using rule 6 (linea_codigo -> expr_asign .)
    DEF             reduce using rule 6 (linea_codigo -> expr_asign .)
    IF              reduce using rule 6 (linea_codigo -> expr_asign .)
    ELIF            reduce using rule 6 (linea_codigo -> expr_asign .)
    ELSE            reduce using rule 6 (linea_codigo -> expr_asign .)
    FOR             reduce using rule 6 (linea_codigo -> expr_asign .)
    RETURN          reduce using rule 6 (linea_codigo -> expr_asign .)
    NUMBER          reduce using rule 6 (linea_codigo -> expr_asign .)
    STRING          reduce using rule 6 (linea_codigo -> expr_asign .)
    TRUE            reduce using rule 6 (linea_codigo -> expr_asign .)
    FALSE           reduce using rule 6 (linea_codigo -> expr_asign .)
    LCORC           reduce using rule 6 (linea_codigo -> expr_asign .)
    $end            reduce using rule 6 (linea_codigo -> expr_asign .)


state 7

    (7) linea_codigo -> expr_if_else .

    ID              reduce using rule 7 (linea_codigo -> expr_if_else .)
    LEN             reduce using rule 7 (linea_codigo -> expr_if_else .)
    DEF             reduce using rule 7 (linea_codigo -> expr_if_else .)
    IF              reduce using rule 7 (linea_codigo -> expr_if_else .)
    ELIF            reduce using rule 7 (linea_codigo -> expr_if_else .)
    ELSE            reduce using rule 7 (linea_codigo -> expr_if_else .)
    FOR             reduce using rule 7 (linea_codigo -> expr_if_else .)
    RETURN          reduce using rule 7 (linea_codigo -> expr_if_else .)
    NUMBER          reduce using rule 7 (linea_codigo -> expr_if_else .)
    STRING          reduce using rule 7 (linea_codigo -> expr_if_else .)
    TRUE            reduce using rule 7 (linea_codigo -> expr_if_else .)
    FALSE           reduce using rule 7 (linea_codigo -> expr_if_else .)
    LCORC           reduce using rule 7 (linea_codigo -> expr_if_else .)
    $end            reduce using rule 7 (linea_codigo -> expr_if_else .)


state 8

    (8) linea_codigo -> def_for .

    ID              reduce using rule 8 (linea_codigo -> def_for .)
    LEN             reduce using rule 8 (linea_codigo -> def_for .)
    DEF             reduce using rule 8 (linea_codigo -> def_for .)
    IF              reduce using rule 8 (linea_codigo -> def_for .)
    ELIF            reduce using rule 8 (linea_codigo -> def_for .)
    ELSE            reduce using rule 8 (linea_codigo -> def_for .)
    FOR             reduce using rule 8 (linea_codigo -> def_for .)
    RETURN          reduce using rule 8 (linea_codigo -> def_for .)
    NUMBER          reduce using rule 8 (linea_codigo -> def_for .)
    STRING          reduce using rule 8 (linea_codigo -> def_for .)
    TRUE            reduce using rule 8 (linea_codigo -> def_for .)
    FALSE           reduce using rule 8 (linea_codigo -> def_for .)
    LCORC           reduce using rule 8 (linea_codigo -> def_for .)
    $end            reduce using rule 8 (linea_codigo -> def_for .)


state 9

    (9) linea_codigo -> expr_return .

    ID              reduce using rule 9 (linea_codigo -> expr_return .)
    LEN             reduce using rule 9 (linea_codigo -> expr_return .)
    DEF             reduce using rule 9 (linea_codigo -> expr_return .)
    IF              reduce using rule 9 (linea_codigo -> expr_return .)
    ELIF            reduce using rule 9 (linea_codigo -> expr_return .)
    ELSE            reduce using rule 9 (linea_codigo -> expr_return .)
    FOR             reduce using rule 9 (linea_codigo -> expr_return .)
    RETURN          reduce using rule 9 (linea_codigo -> expr_return .)
    NUMBER          reduce using rule 9 (linea_codigo -> expr_return .)
    STRING          reduce using rule 9 (linea_codigo -> expr_return .)
    TRUE            reduce using rule 9 (linea_codigo -> expr_return .)
    FALSE           reduce using rule 9 (linea_codigo -> expr_return .)
    LCORC           reduce using rule 9 (linea_codigo -> expr_return .)
    $end            reduce using rule 9 (linea_codigo -> expr_return .)


state 10

    (10) linea_codigo -> call_method .
    (80) call_method -> call_method . PUNTO expr_funcion

    ID              reduce using rule 10 (linea_codigo -> call_method .)
    LEN             reduce using rule 10 (linea_codigo -> call_method .)
    DEF             reduce using rule 10 (linea_codigo -> call_method .)
    IF              reduce using rule 10 (linea_codigo -> call_method .)
    ELIF            reduce using rule 10 (linea_codigo -> call_method .)
    ELSE            reduce using rule 10 (linea_codigo -> call_method .)
    FOR             reduce using rule 10 (linea_codigo -> call_method .)
    RETURN          reduce using rule 10 (linea_codigo -> call_method .)
    NUMBER          reduce using rule 10 (linea_codigo -> call_method .)
    STRING          reduce using rule 10 (linea_codigo -> call_method .)
    TRUE            reduce using rule 10 (linea_codigo -> call_method .)
    FALSE           reduce using rule 10 (linea_codigo -> call_method .)
    LCORC           reduce using rule 10 (linea_codigo -> call_method .)
    $end            reduce using rule 10 (linea_codigo -> call_method .)
    PUNTO           shift and go to state 31


state 11

    (23) expr_funcion -> ID . LPAREN params RPAREN
    (24) expr_funcion -> ID . LPAREN RPAREN
    (31) expr_asign -> ID . EQUALS variable
    (32) expr_asign -> ID . EQUALS expr_funcion
    (33) expr_asign -> ID . EQUALS operaciones_algebraica
    (34) expr_asign -> ID . EQUALS LCORC RCORC
    (35) expr_asign -> ID . EQUALS call_method
    (17) variable -> ID .
    (26) lista -> ID . LCORC variable RCORC
    (27) lista -> ID . LCORC operaciones_algebraica RCORC

    LPAREN          shift and go to state 32
    EQUALS          shift and go to state 33
    PUNTO           reduce using rule 17 (variable -> ID .)
    LCORC           shift and go to state 34


state 12

    (25) expr_funcion -> LEN . LPAREN params RPAREN

    LPAREN          shift and go to state 35


state 13

    (11) expr_def_funcion -> DEF . expr_funcion DPUNTOS
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN

    ID              shift and go to state 37
    LEN             shift and go to state 12

    expr_funcion                   shift and go to state 36

state 14

    (79) call_method -> variable . PUNTO expr_funcion
    (81) call_method -> variable . PUNTO funcion_lista LPAREN params RPAREN

    PUNTO           shift and go to state 38


state 15

    (28) lista -> LCORC . params COMA params RCORC
    (12) params -> . variable
    (13) params -> . params COMA params
    (14) params -> . expr_funcion
    (15) params -> . expr_asign
    (16) params -> . operaciones_algebraica
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (31) expr_asign -> . ID EQUALS variable
    (32) expr_asign -> . ID EQUALS expr_funcion
    (33) expr_asign -> . ID EQUALS operaciones_algebraica
    (34) expr_asign -> . ID EQUALS LCORC RCORC
    (35) expr_asign -> . ID EQUALS call_method
    (65) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (66) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (67) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion

    ID              shift and go to state 44
    NUMBER          shift and go to state 22
    LEN             shift and go to state 12
    LPAREN          shift and go to state 45
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    params                         shift and go to state 39
    variable                       shift and go to state 40
    expr_funcion                   shift and go to state 41
    expr_asign                     shift and go to state 42
    operaciones_algebraica         shift and go to state 43
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25
    variables_operaciones_algebraica shift and go to state 46

state 16

    (45) expr_if_else -> IF . condiciones_expr_if_else DPUNTOS
    (48) condiciones_expr_if_else -> . condiciones
    (49) condiciones_expr_if_else -> . condiciones and_or condiciones_expr_if_else
    (50) condiciones_expr_if_else -> . LPAREN condiciones_expr_if_else RPAREN
    (51) condiciones -> . variable
    (52) condiciones -> . expr_funcion
    (53) condiciones -> . operaciones_algebraica operador_igualdad variable
    (54) condiciones -> . condiciones operador_igualdad condiciones
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (65) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (66) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (67) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion

    LPAREN          shift and go to state 49
    ID              shift and go to state 53
    NUMBER          shift and go to state 22
    LEN             shift and go to state 12
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    condiciones_expr_if_else       shift and go to state 47
    condiciones                    shift and go to state 48
    variable                       shift and go to state 50
    expr_funcion                   shift and go to state 51
    operaciones_algebraica         shift and go to state 52
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25
    variables_operaciones_algebraica shift and go to state 46

state 17

    (46) expr_if_else -> ELIF . condiciones_expr_if_else DPUNTOS
    (48) condiciones_expr_if_else -> . condiciones
    (49) condiciones_expr_if_else -> . condiciones and_or condiciones_expr_if_else
    (50) condiciones_expr_if_else -> . LPAREN condiciones_expr_if_else RPAREN
    (51) condiciones -> . variable
    (52) condiciones -> . expr_funcion
    (53) condiciones -> . operaciones_algebraica operador_igualdad variable
    (54) condiciones -> . condiciones operador_igualdad condiciones
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (65) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (66) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (67) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion

    LPAREN          shift and go to state 49
    ID              shift and go to state 53
    NUMBER          shift and go to state 22
    LEN             shift and go to state 12
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    condiciones_expr_if_else       shift and go to state 54
    condiciones                    shift and go to state 48
    variable                       shift and go to state 50
    expr_funcion                   shift and go to state 51
    operaciones_algebraica         shift and go to state 52
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25
    variables_operaciones_algebraica shift and go to state 46

state 18

    (47) expr_if_else -> ELSE . DPUNTOS

    DPUNTOS         shift and go to state 55


state 19

    (55) def_for -> FOR . variable IN RANGE LPAREN params_for RPAREN DPUNTOS
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC

    ID              shift and go to state 57
    NUMBER          shift and go to state 22
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    variable                       shift and go to state 56
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25

state 20

    (42) expr_return -> RETURN . variable
    (43) expr_return -> RETURN . expr_funcion
    (44) expr_return -> RETURN . operaciones_algebraica
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (65) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (66) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (67) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion

    ID              shift and go to state 53
    NUMBER          shift and go to state 22
    LEN             shift and go to state 12
    LPAREN          shift and go to state 45
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    variable                       shift and go to state 58
    expr_funcion                   shift and go to state 59
    operaciones_algebraica         shift and go to state 60
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25
    variables_operaciones_algebraica shift and go to state 46

state 21

    (18) variable -> expr_str .

    PUNTO           reduce using rule 18 (variable -> expr_str .)
    COMA            reduce using rule 18 (variable -> expr_str .)
    PLUS            reduce using rule 18 (variable -> expr_str .)
    MINUS           reduce using rule 18 (variable -> expr_str .)
    TIMES           reduce using rule 18 (variable -> expr_str .)
    DIVIDE          reduce using rule 18 (variable -> expr_str .)
    MOD             reduce using rule 18 (variable -> expr_str .)
    EXP             reduce using rule 18 (variable -> expr_str .)
    AND             reduce using rule 18 (variable -> expr_str .)
    OR              reduce using rule 18 (variable -> expr_str .)
    MAYOR           reduce using rule 18 (variable -> expr_str .)
    MENOR           reduce using rule 18 (variable -> expr_str .)
    DEQUALS         reduce using rule 18 (variable -> expr_str .)
    NEGADOR         reduce using rule 18 (variable -> expr_str .)
    DPUNTOS         reduce using rule 18 (variable -> expr_str .)
    IN              reduce using rule 18 (variable -> expr_str .)
    ID              reduce using rule 18 (variable -> expr_str .)
    LEN             reduce using rule 18 (variable -> expr_str .)
    DEF             reduce using rule 18 (variable -> expr_str .)
    IF              reduce using rule 18 (variable -> expr_str .)
    ELIF            reduce using rule 18 (variable -> expr_str .)
    ELSE            reduce using rule 18 (variable -> expr_str .)
    FOR             reduce using rule 18 (variable -> expr_str .)
    RETURN          reduce using rule 18 (variable -> expr_str .)
    NUMBER          reduce using rule 18 (variable -> expr_str .)
    STRING          reduce using rule 18 (variable -> expr_str .)
    TRUE            reduce using rule 18 (variable -> expr_str .)
    FALSE           reduce using rule 18 (variable -> expr_str .)
    LCORC           reduce using rule 18 (variable -> expr_str .)
    $end            reduce using rule 18 (variable -> expr_str .)
    RPAREN          reduce using rule 18 (variable -> expr_str .)
    RCORC           reduce using rule 18 (variable -> expr_str .)


state 22

    (19) variable -> NUMBER .
    (30) expr_float -> NUMBER . PUNTO NUMBER

  ! shift/reduce conflict for PUNTO resolved as shift
    COMA            reduce using rule 19 (variable -> NUMBER .)
    PLUS            reduce using rule 19 (variable -> NUMBER .)
    MINUS           reduce using rule 19 (variable -> NUMBER .)
    TIMES           reduce using rule 19 (variable -> NUMBER .)
    DIVIDE          reduce using rule 19 (variable -> NUMBER .)
    MOD             reduce using rule 19 (variable -> NUMBER .)
    EXP             reduce using rule 19 (variable -> NUMBER .)
    AND             reduce using rule 19 (variable -> NUMBER .)
    OR              reduce using rule 19 (variable -> NUMBER .)
    MAYOR           reduce using rule 19 (variable -> NUMBER .)
    MENOR           reduce using rule 19 (variable -> NUMBER .)
    DEQUALS         reduce using rule 19 (variable -> NUMBER .)
    NEGADOR         reduce using rule 19 (variable -> NUMBER .)
    DPUNTOS         reduce using rule 19 (variable -> NUMBER .)
    IN              reduce using rule 19 (variable -> NUMBER .)
    ID              reduce using rule 19 (variable -> NUMBER .)
    LEN             reduce using rule 19 (variable -> NUMBER .)
    DEF             reduce using rule 19 (variable -> NUMBER .)
    IF              reduce using rule 19 (variable -> NUMBER .)
    ELIF            reduce using rule 19 (variable -> NUMBER .)
    ELSE            reduce using rule 19 (variable -> NUMBER .)
    FOR             reduce using rule 19 (variable -> NUMBER .)
    RETURN          reduce using rule 19 (variable -> NUMBER .)
    NUMBER          reduce using rule 19 (variable -> NUMBER .)
    STRING          reduce using rule 19 (variable -> NUMBER .)
    TRUE            reduce using rule 19 (variable -> NUMBER .)
    FALSE           reduce using rule 19 (variable -> NUMBER .)
    LCORC           reduce using rule 19 (variable -> NUMBER .)
    $end            reduce using rule 19 (variable -> NUMBER .)
    RPAREN          reduce using rule 19 (variable -> NUMBER .)
    RCORC           reduce using rule 19 (variable -> NUMBER .)
    PUNTO           shift and go to state 61

  ! PUNTO           [ reduce using rule 19 (variable -> NUMBER .) ]


state 23

    (20) variable -> expr_float .

    PUNTO           reduce using rule 20 (variable -> expr_float .)
    COMA            reduce using rule 20 (variable -> expr_float .)
    PLUS            reduce using rule 20 (variable -> expr_float .)
    MINUS           reduce using rule 20 (variable -> expr_float .)
    TIMES           reduce using rule 20 (variable -> expr_float .)
    DIVIDE          reduce using rule 20 (variable -> expr_float .)
    MOD             reduce using rule 20 (variable -> expr_float .)
    EXP             reduce using rule 20 (variable -> expr_float .)
    AND             reduce using rule 20 (variable -> expr_float .)
    OR              reduce using rule 20 (variable -> expr_float .)
    MAYOR           reduce using rule 20 (variable -> expr_float .)
    MENOR           reduce using rule 20 (variable -> expr_float .)
    DEQUALS         reduce using rule 20 (variable -> expr_float .)
    NEGADOR         reduce using rule 20 (variable -> expr_float .)
    DPUNTOS         reduce using rule 20 (variable -> expr_float .)
    IN              reduce using rule 20 (variable -> expr_float .)
    ID              reduce using rule 20 (variable -> expr_float .)
    LEN             reduce using rule 20 (variable -> expr_float .)
    DEF             reduce using rule 20 (variable -> expr_float .)
    IF              reduce using rule 20 (variable -> expr_float .)
    ELIF            reduce using rule 20 (variable -> expr_float .)
    ELSE            reduce using rule 20 (variable -> expr_float .)
    FOR             reduce using rule 20 (variable -> expr_float .)
    RETURN          reduce using rule 20 (variable -> expr_float .)
    NUMBER          reduce using rule 20 (variable -> expr_float .)
    STRING          reduce using rule 20 (variable -> expr_float .)
    TRUE            reduce using rule 20 (variable -> expr_float .)
    FALSE           reduce using rule 20 (variable -> expr_float .)
    LCORC           reduce using rule 20 (variable -> expr_float .)
    $end            reduce using rule 20 (variable -> expr_float .)
    RPAREN          reduce using rule 20 (variable -> expr_float .)
    RCORC           reduce using rule 20 (variable -> expr_float .)


state 24

    (21) variable -> bool .

    PUNTO           reduce using rule 21 (variable -> bool .)
    COMA            reduce using rule 21 (variable -> bool .)
    PLUS            reduce using rule 21 (variable -> bool .)
    MINUS           reduce using rule 21 (variable -> bool .)
    TIMES           reduce using rule 21 (variable -> bool .)
    DIVIDE          reduce using rule 21 (variable -> bool .)
    MOD             reduce using rule 21 (variable -> bool .)
    EXP             reduce using rule 21 (variable -> bool .)
    AND             reduce using rule 21 (variable -> bool .)
    OR              reduce using rule 21 (variable -> bool .)
    MAYOR           reduce using rule 21 (variable -> bool .)
    MENOR           reduce using rule 21 (variable -> bool .)
    DEQUALS         reduce using rule 21 (variable -> bool .)
    NEGADOR         reduce using rule 21 (variable -> bool .)
    DPUNTOS         reduce using rule 21 (variable -> bool .)
    IN              reduce using rule 21 (variable -> bool .)
    ID              reduce using rule 21 (variable -> bool .)
    LEN             reduce using rule 21 (variable -> bool .)
    DEF             reduce using rule 21 (variable -> bool .)
    IF              reduce using rule 21 (variable -> bool .)
    ELIF            reduce using rule 21 (variable -> bool .)
    ELSE            reduce using rule 21 (variable -> bool .)
    FOR             reduce using rule 21 (variable -> bool .)
    RETURN          reduce using rule 21 (variable -> bool .)
    NUMBER          reduce using rule 21 (variable -> bool .)
    STRING          reduce using rule 21 (variable -> bool .)
    TRUE            reduce using rule 21 (variable -> bool .)
    FALSE           reduce using rule 21 (variable -> bool .)
    LCORC           reduce using rule 21 (variable -> bool .)
    $end            reduce using rule 21 (variable -> bool .)
    RPAREN          reduce using rule 21 (variable -> bool .)
    RCORC           reduce using rule 21 (variable -> bool .)


state 25

    (22) variable -> lista .

    PUNTO           reduce using rule 22 (variable -> lista .)
    COMA            reduce using rule 22 (variable -> lista .)
    PLUS            reduce using rule 22 (variable -> lista .)
    MINUS           reduce using rule 22 (variable -> lista .)
    TIMES           reduce using rule 22 (variable -> lista .)
    DIVIDE          reduce using rule 22 (variable -> lista .)
    MOD             reduce using rule 22 (variable -> lista .)
    EXP             reduce using rule 22 (variable -> lista .)
    AND             reduce using rule 22 (variable -> lista .)
    OR              reduce using rule 22 (variable -> lista .)
    MAYOR           reduce using rule 22 (variable -> lista .)
    MENOR           reduce using rule 22 (variable -> lista .)
    DEQUALS         reduce using rule 22 (variable -> lista .)
    NEGADOR         reduce using rule 22 (variable -> lista .)
    DPUNTOS         reduce using rule 22 (variable -> lista .)
    IN              reduce using rule 22 (variable -> lista .)
    ID              reduce using rule 22 (variable -> lista .)
    LEN             reduce using rule 22 (variable -> lista .)
    DEF             reduce using rule 22 (variable -> lista .)
    IF              reduce using rule 22 (variable -> lista .)
    ELIF            reduce using rule 22 (variable -> lista .)
    ELSE            reduce using rule 22 (variable -> lista .)
    FOR             reduce using rule 22 (variable -> lista .)
    RETURN          reduce using rule 22 (variable -> lista .)
    NUMBER          reduce using rule 22 (variable -> lista .)
    STRING          reduce using rule 22 (variable -> lista .)
    TRUE            reduce using rule 22 (variable -> lista .)
    FALSE           reduce using rule 22 (variable -> lista .)
    LCORC           reduce using rule 22 (variable -> lista .)
    $end            reduce using rule 22 (variable -> lista .)
    RPAREN          reduce using rule 22 (variable -> lista .)
    RCORC           reduce using rule 22 (variable -> lista .)


state 26

    (29) expr_str -> STRING .

    PUNTO           reduce using rule 29 (expr_str -> STRING .)
    COMA            reduce using rule 29 (expr_str -> STRING .)
    PLUS            reduce using rule 29 (expr_str -> STRING .)
    MINUS           reduce using rule 29 (expr_str -> STRING .)
    TIMES           reduce using rule 29 (expr_str -> STRING .)
    DIVIDE          reduce using rule 29 (expr_str -> STRING .)
    MOD             reduce using rule 29 (expr_str -> STRING .)
    EXP             reduce using rule 29 (expr_str -> STRING .)
    AND             reduce using rule 29 (expr_str -> STRING .)
    OR              reduce using rule 29 (expr_str -> STRING .)
    MAYOR           reduce using rule 29 (expr_str -> STRING .)
    MENOR           reduce using rule 29 (expr_str -> STRING .)
    DEQUALS         reduce using rule 29 (expr_str -> STRING .)
    NEGADOR         reduce using rule 29 (expr_str -> STRING .)
    DPUNTOS         reduce using rule 29 (expr_str -> STRING .)
    IN              reduce using rule 29 (expr_str -> STRING .)
    ID              reduce using rule 29 (expr_str -> STRING .)
    LEN             reduce using rule 29 (expr_str -> STRING .)
    DEF             reduce using rule 29 (expr_str -> STRING .)
    IF              reduce using rule 29 (expr_str -> STRING .)
    ELIF            reduce using rule 29 (expr_str -> STRING .)
    ELSE            reduce using rule 29 (expr_str -> STRING .)
    FOR             reduce using rule 29 (expr_str -> STRING .)
    RETURN          reduce using rule 29 (expr_str -> STRING .)
    NUMBER          reduce using rule 29 (expr_str -> STRING .)
    STRING          reduce using rule 29 (expr_str -> STRING .)
    TRUE            reduce using rule 29 (expr_str -> STRING .)
    FALSE           reduce using rule 29 (expr_str -> STRING .)
    LCORC           reduce using rule 29 (expr_str -> STRING .)
    $end            reduce using rule 29 (expr_str -> STRING .)
    RPAREN          reduce using rule 29 (expr_str -> STRING .)
    RCORC           reduce using rule 29 (expr_str -> STRING .)


state 27

    (61) bool -> TRUE .

    PUNTO           reduce using rule 61 (bool -> TRUE .)
    COMA            reduce using rule 61 (bool -> TRUE .)
    PLUS            reduce using rule 61 (bool -> TRUE .)
    MINUS           reduce using rule 61 (bool -> TRUE .)
    TIMES           reduce using rule 61 (bool -> TRUE .)
    DIVIDE          reduce using rule 61 (bool -> TRUE .)
    MOD             reduce using rule 61 (bool -> TRUE .)
    EXP             reduce using rule 61 (bool -> TRUE .)
    AND             reduce using rule 61 (bool -> TRUE .)
    OR              reduce using rule 61 (bool -> TRUE .)
    MAYOR           reduce using rule 61 (bool -> TRUE .)
    MENOR           reduce using rule 61 (bool -> TRUE .)
    DEQUALS         reduce using rule 61 (bool -> TRUE .)
    NEGADOR         reduce using rule 61 (bool -> TRUE .)
    DPUNTOS         reduce using rule 61 (bool -> TRUE .)
    IN              reduce using rule 61 (bool -> TRUE .)
    ID              reduce using rule 61 (bool -> TRUE .)
    LEN             reduce using rule 61 (bool -> TRUE .)
    DEF             reduce using rule 61 (bool -> TRUE .)
    IF              reduce using rule 61 (bool -> TRUE .)
    ELIF            reduce using rule 61 (bool -> TRUE .)
    ELSE            reduce using rule 61 (bool -> TRUE .)
    FOR             reduce using rule 61 (bool -> TRUE .)
    RETURN          reduce using rule 61 (bool -> TRUE .)
    NUMBER          reduce using rule 61 (bool -> TRUE .)
    STRING          reduce using rule 61 (bool -> TRUE .)
    TRUE            reduce using rule 61 (bool -> TRUE .)
    FALSE           reduce using rule 61 (bool -> TRUE .)
    LCORC           reduce using rule 61 (bool -> TRUE .)
    $end            reduce using rule 61 (bool -> TRUE .)
    RPAREN          reduce using rule 61 (bool -> TRUE .)
    RCORC           reduce using rule 61 (bool -> TRUE .)


state 28

    (62) bool -> FALSE .

    PUNTO           reduce using rule 62 (bool -> FALSE .)
    COMA            reduce using rule 62 (bool -> FALSE .)
    PLUS            reduce using rule 62 (bool -> FALSE .)
    MINUS           reduce using rule 62 (bool -> FALSE .)
    TIMES           reduce using rule 62 (bool -> FALSE .)
    DIVIDE          reduce using rule 62 (bool -> FALSE .)
    MOD             reduce using rule 62 (bool -> FALSE .)
    EXP             reduce using rule 62 (bool -> FALSE .)
    AND             reduce using rule 62 (bool -> FALSE .)
    OR              reduce using rule 62 (bool -> FALSE .)
    MAYOR           reduce using rule 62 (bool -> FALSE .)
    MENOR           reduce using rule 62 (bool -> FALSE .)
    DEQUALS         reduce using rule 62 (bool -> FALSE .)
    NEGADOR         reduce using rule 62 (bool -> FALSE .)
    DPUNTOS         reduce using rule 62 (bool -> FALSE .)
    IN              reduce using rule 62 (bool -> FALSE .)
    ID              reduce using rule 62 (bool -> FALSE .)
    LEN             reduce using rule 62 (bool -> FALSE .)
    DEF             reduce using rule 62 (bool -> FALSE .)
    IF              reduce using rule 62 (bool -> FALSE .)
    ELIF            reduce using rule 62 (bool -> FALSE .)
    ELSE            reduce using rule 62 (bool -> FALSE .)
    FOR             reduce using rule 62 (bool -> FALSE .)
    RETURN          reduce using rule 62 (bool -> FALSE .)
    NUMBER          reduce using rule 62 (bool -> FALSE .)
    STRING          reduce using rule 62 (bool -> FALSE .)
    TRUE            reduce using rule 62 (bool -> FALSE .)
    FALSE           reduce using rule 62 (bool -> FALSE .)
    LCORC           reduce using rule 62 (bool -> FALSE .)
    $end            reduce using rule 62 (bool -> FALSE .)
    RPAREN          reduce using rule 62 (bool -> FALSE .)
    RCORC           reduce using rule 62 (bool -> FALSE .)


state 29

    (3) bloque_codigo -> bloque_codigo linea_codigo . empty
    (82) empty -> .

    ID              reduce using rule 82 (empty -> .)
    LEN             reduce using rule 82 (empty -> .)
    DEF             reduce using rule 82 (empty -> .)
    IF              reduce using rule 82 (empty -> .)
    ELIF            reduce using rule 82 (empty -> .)
    ELSE            reduce using rule 82 (empty -> .)
    FOR             reduce using rule 82 (empty -> .)
    RETURN          reduce using rule 82 (empty -> .)
    NUMBER          reduce using rule 82 (empty -> .)
    STRING          reduce using rule 82 (empty -> .)
    TRUE            reduce using rule 82 (empty -> .)
    FALSE           reduce using rule 82 (empty -> .)
    LCORC           reduce using rule 82 (empty -> .)
    $end            reduce using rule 82 (empty -> .)

    empty                          shift and go to state 62

state 30

    (2) bloque_codigo -> linea_codigo empty .

    ID              reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    LEN             reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    DEF             reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    IF              reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    ELIF            reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    ELSE            reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    FOR             reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    RETURN          reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    NUMBER          reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    STRING          reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    TRUE            reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    FALSE           reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    LCORC           reduce using rule 2 (bloque_codigo -> linea_codigo empty .)
    $end            reduce using rule 2 (bloque_codigo -> linea_codigo empty .)


state 31

    (80) call_method -> call_method PUNTO . expr_funcion
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN

    ID              shift and go to state 37
    LEN             shift and go to state 12

    expr_funcion                   shift and go to state 63

state 32

    (23) expr_funcion -> ID LPAREN . params RPAREN
    (24) expr_funcion -> ID LPAREN . RPAREN
    (12) params -> . variable
    (13) params -> . params COMA params
    (14) params -> . expr_funcion
    (15) params -> . expr_asign
    (16) params -> . operaciones_algebraica
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (31) expr_asign -> . ID EQUALS variable
    (32) expr_asign -> . ID EQUALS expr_funcion
    (33) expr_asign -> . ID EQUALS operaciones_algebraica
    (34) expr_asign -> . ID EQUALS LCORC RCORC
    (35) expr_asign -> . ID EQUALS call_method
    (65) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (66) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (67) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion

    RPAREN          shift and go to state 65
    ID              shift and go to state 44
    NUMBER          shift and go to state 22
    LEN             shift and go to state 12
    LPAREN          shift and go to state 45
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    params                         shift and go to state 64
    variable                       shift and go to state 40
    expr_funcion                   shift and go to state 41
    expr_asign                     shift and go to state 42
    operaciones_algebraica         shift and go to state 43
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25
    variables_operaciones_algebraica shift and go to state 46

state 33

    (31) expr_asign -> ID EQUALS . variable
    (32) expr_asign -> ID EQUALS . expr_funcion
    (33) expr_asign -> ID EQUALS . operaciones_algebraica
    (34) expr_asign -> ID EQUALS . LCORC RCORC
    (35) expr_asign -> ID EQUALS . call_method
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (65) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (66) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (67) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (79) call_method -> . variable PUNTO expr_funcion
    (80) call_method -> . call_method PUNTO expr_funcion
    (81) call_method -> . variable PUNTO funcion_lista LPAREN params RPAREN
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion

    LCORC           shift and go to state 69
    ID              shift and go to state 53
    NUMBER          shift and go to state 22
    LEN             shift and go to state 12
    LPAREN          shift and go to state 45
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    variable                       shift and go to state 66
    expr_funcion                   shift and go to state 67
    operaciones_algebraica         shift and go to state 68
    call_method                    shift and go to state 70
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25
    variables_operaciones_algebraica shift and go to state 46

state 34

    (26) lista -> ID LCORC . variable RCORC
    (27) lista -> ID LCORC . operaciones_algebraica RCORC
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (65) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (66) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (67) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN

    ID              shift and go to state 71
    NUMBER          shift and go to state 22
    LPAREN          shift and go to state 45
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15
    LEN             shift and go to state 12

    variable                       shift and go to state 72
    operaciones_algebraica         shift and go to state 73
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25
    variables_operaciones_algebraica shift and go to state 46
    expr_funcion                   shift and go to state 74

state 35

    (25) expr_funcion -> LEN LPAREN . params RPAREN
    (12) params -> . variable
    (13) params -> . params COMA params
    (14) params -> . expr_funcion
    (15) params -> . expr_asign
    (16) params -> . operaciones_algebraica
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (31) expr_asign -> . ID EQUALS variable
    (32) expr_asign -> . ID EQUALS expr_funcion
    (33) expr_asign -> . ID EQUALS operaciones_algebraica
    (34) expr_asign -> . ID EQUALS LCORC RCORC
    (35) expr_asign -> . ID EQUALS call_method
    (65) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (66) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (67) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion

    ID              shift and go to state 44
    NUMBER          shift and go to state 22
    LEN             shift and go to state 12
    LPAREN          shift and go to state 45
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    params                         shift and go to state 75
    variable                       shift and go to state 40
    expr_funcion                   shift and go to state 41
    expr_asign                     shift and go to state 42
    operaciones_algebraica         shift and go to state 43
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25
    variables_operaciones_algebraica shift and go to state 46

state 36

    (11) expr_def_funcion -> DEF expr_funcion . DPUNTOS

    DPUNTOS         shift and go to state 76


state 37

    (23) expr_funcion -> ID . LPAREN params RPAREN
    (24) expr_funcion -> ID . LPAREN RPAREN

    LPAREN          shift and go to state 32


state 38

    (79) call_method -> variable PUNTO . expr_funcion
    (81) call_method -> variable PUNTO . funcion_lista LPAREN params RPAREN
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (76) funcion_lista -> . APPEND
    (77) funcion_lista -> . INDEX
    (78) funcion_lista -> . POP

    ID              shift and go to state 37
    LEN             shift and go to state 12
    APPEND          shift and go to state 79
    INDEX           shift and go to state 80
    POP             shift and go to state 81

    expr_funcion                   shift and go to state 77
    funcion_lista                  shift and go to state 78

state 39

    (28) lista -> LCORC params . COMA params RCORC
    (13) params -> params . COMA params

    COMA            shift and go to state 82


state 40

    (12) params -> variable .
    (68) variables_operaciones_algebraica -> variable .

    COMA            reduce using rule 12 (params -> variable .)
    RPAREN          reduce using rule 12 (params -> variable .)
    RCORC           reduce using rule 12 (params -> variable .)
    PLUS            reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    MINUS           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    TIMES           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    DIVIDE          reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    MOD             reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    EXP             reduce using rule 68 (variables_operaciones_algebraica -> variable .)


state 41

    (14) params -> expr_funcion .
    (69) variables_operaciones_algebraica -> expr_funcion .

    COMA            reduce using rule 14 (params -> expr_funcion .)
    RPAREN          reduce using rule 14 (params -> expr_funcion .)
    RCORC           reduce using rule 14 (params -> expr_funcion .)
    PLUS            reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    MINUS           reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    TIMES           reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    DIVIDE          reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    MOD             reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    EXP             reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)


state 42

    (15) params -> expr_asign .

    COMA            reduce using rule 15 (params -> expr_asign .)
    RPAREN          reduce using rule 15 (params -> expr_asign .)
    RCORC           reduce using rule 15 (params -> expr_asign .)


state 43

    (16) params -> operaciones_algebraica .
    (67) operaciones_algebraica -> operaciones_algebraica . operador_alge variables_operaciones_algebraica
    (70) operador_alge -> . PLUS
    (71) operador_alge -> . MINUS
    (72) operador_alge -> . TIMES
    (73) operador_alge -> . DIVIDE
    (74) operador_alge -> . MOD
    (75) operador_alge -> . EXP

    COMA            reduce using rule 16 (params -> operaciones_algebraica .)
    RPAREN          reduce using rule 16 (params -> operaciones_algebraica .)
    RCORC           reduce using rule 16 (params -> operaciones_algebraica .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    TIMES           shift and go to state 86
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 88
    EXP             shift and go to state 89

    operador_alge                  shift and go to state 83

state 44

    (17) variable -> ID .
    (23) expr_funcion -> ID . LPAREN params RPAREN
    (24) expr_funcion -> ID . LPAREN RPAREN
    (31) expr_asign -> ID . EQUALS variable
    (32) expr_asign -> ID . EQUALS expr_funcion
    (33) expr_asign -> ID . EQUALS operaciones_algebraica
    (34) expr_asign -> ID . EQUALS LCORC RCORC
    (35) expr_asign -> ID . EQUALS call_method
    (26) lista -> ID . LCORC variable RCORC
    (27) lista -> ID . LCORC operaciones_algebraica RCORC

    COMA            reduce using rule 17 (variable -> ID .)
    PLUS            reduce using rule 17 (variable -> ID .)
    MINUS           reduce using rule 17 (variable -> ID .)
    TIMES           reduce using rule 17 (variable -> ID .)
    DIVIDE          reduce using rule 17 (variable -> ID .)
    MOD             reduce using rule 17 (variable -> ID .)
    EXP             reduce using rule 17 (variable -> ID .)
    RPAREN          reduce using rule 17 (variable -> ID .)
    RCORC           reduce using rule 17 (variable -> ID .)
    LPAREN          shift and go to state 32
    EQUALS          shift and go to state 33
    LCORC           shift and go to state 34


state 45

    (66) operaciones_algebraica -> LPAREN . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC

    ID              shift and go to state 53
    NUMBER          shift and go to state 22
    LEN             shift and go to state 12
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    variables_operaciones_algebraica shift and go to state 90
    variable                       shift and go to state 91
    expr_funcion                   shift and go to state 74
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25

state 46

    (65) operaciones_algebraica -> variables_operaciones_algebraica . operador_alge variables_operaciones_algebraica
    (70) operador_alge -> . PLUS
    (71) operador_alge -> . MINUS
    (72) operador_alge -> . TIMES
    (73) operador_alge -> . DIVIDE
    (74) operador_alge -> . MOD
    (75) operador_alge -> . EXP

    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    TIMES           shift and go to state 86
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 88
    EXP             shift and go to state 89

    operador_alge                  shift and go to state 92

state 47

    (45) expr_if_else -> IF condiciones_expr_if_else . DPUNTOS

    DPUNTOS         shift and go to state 93


state 48

    (48) condiciones_expr_if_else -> condiciones .
    (49) condiciones_expr_if_else -> condiciones . and_or condiciones_expr_if_else
    (54) condiciones -> condiciones . operador_igualdad condiciones
    (63) and_or -> . AND
    (64) and_or -> . OR
    (36) operador_igualdad -> . MAYOR
    (37) operador_igualdad -> . MENOR
    (38) operador_igualdad -> . DEQUALS
    (39) operador_igualdad -> . MAYOR EQUALS
    (40) operador_igualdad -> . MENOR EQUALS
    (41) operador_igualdad -> . NEGADOR EQUALS

    DPUNTOS         reduce using rule 48 (condiciones_expr_if_else -> condiciones .)
    RPAREN          reduce using rule 48 (condiciones_expr_if_else -> condiciones .)
    AND             shift and go to state 96
    OR              shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    DEQUALS         shift and go to state 100
    NEGADOR         shift and go to state 101

    and_or                         shift and go to state 94
    operador_igualdad              shift and go to state 95

state 49

    (50) condiciones_expr_if_else -> LPAREN . condiciones_expr_if_else RPAREN
    (66) operaciones_algebraica -> LPAREN . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (48) condiciones_expr_if_else -> . condiciones
    (49) condiciones_expr_if_else -> . condiciones and_or condiciones_expr_if_else
    (50) condiciones_expr_if_else -> . LPAREN condiciones_expr_if_else RPAREN
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion
    (51) condiciones -> . variable
    (52) condiciones -> . expr_funcion
    (53) condiciones -> . operaciones_algebraica operador_igualdad variable
    (54) condiciones -> . condiciones operador_igualdad condiciones
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (65) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (66) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (67) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC

    LPAREN          shift and go to state 49
    ID              shift and go to state 53
    NUMBER          shift and go to state 22
    LEN             shift and go to state 12
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    condiciones_expr_if_else       shift and go to state 102
    variables_operaciones_algebraica shift and go to state 103
    condiciones                    shift and go to state 48
    variable                       shift and go to state 104
    expr_funcion                   shift and go to state 105
    operaciones_algebraica         shift and go to state 52
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25

state 50

    (51) condiciones -> variable .
    (68) variables_operaciones_algebraica -> variable .

    AND             reduce using rule 51 (condiciones -> variable .)
    OR              reduce using rule 51 (condiciones -> variable .)
    MAYOR           reduce using rule 51 (condiciones -> variable .)
    MENOR           reduce using rule 51 (condiciones -> variable .)
    DEQUALS         reduce using rule 51 (condiciones -> variable .)
    NEGADOR         reduce using rule 51 (condiciones -> variable .)
    DPUNTOS         reduce using rule 51 (condiciones -> variable .)
    RPAREN          reduce using rule 51 (condiciones -> variable .)
    PLUS            reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    MINUS           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    TIMES           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    DIVIDE          reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    MOD             reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    EXP             reduce using rule 68 (variables_operaciones_algebraica -> variable .)


state 51

    (52) condiciones -> expr_funcion .
    (69) variables_operaciones_algebraica -> expr_funcion .

    AND             reduce using rule 52 (condiciones -> expr_funcion .)
    OR              reduce using rule 52 (condiciones -> expr_funcion .)
    MAYOR           reduce using rule 52 (condiciones -> expr_funcion .)
    MENOR           reduce using rule 52 (condiciones -> expr_funcion .)
    DEQUALS         reduce using rule 52 (condiciones -> expr_funcion .)
    NEGADOR         reduce using rule 52 (condiciones -> expr_funcion .)
    DPUNTOS         reduce using rule 52 (condiciones -> expr_funcion .)
    RPAREN          reduce using rule 52 (condiciones -> expr_funcion .)
    PLUS            reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    MINUS           reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    TIMES           reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    DIVIDE          reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    MOD             reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    EXP             reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)


state 52

    (53) condiciones -> operaciones_algebraica . operador_igualdad variable
    (67) operaciones_algebraica -> operaciones_algebraica . operador_alge variables_operaciones_algebraica
    (36) operador_igualdad -> . MAYOR
    (37) operador_igualdad -> . MENOR
    (38) operador_igualdad -> . DEQUALS
    (39) operador_igualdad -> . MAYOR EQUALS
    (40) operador_igualdad -> . MENOR EQUALS
    (41) operador_igualdad -> . NEGADOR EQUALS
    (70) operador_alge -> . PLUS
    (71) operador_alge -> . MINUS
    (72) operador_alge -> . TIMES
    (73) operador_alge -> . DIVIDE
    (74) operador_alge -> . MOD
    (75) operador_alge -> . EXP

    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    DEQUALS         shift and go to state 100
    NEGADOR         shift and go to state 101
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    TIMES           shift and go to state 86
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 88
    EXP             shift and go to state 89

    operador_igualdad              shift and go to state 106
    operador_alge                  shift and go to state 83

state 53

    (17) variable -> ID .
    (23) expr_funcion -> ID . LPAREN params RPAREN
    (24) expr_funcion -> ID . LPAREN RPAREN
    (26) lista -> ID . LCORC variable RCORC
    (27) lista -> ID . LCORC operaciones_algebraica RCORC

  ! shift/reduce conflict for LCORC resolved as shift
    AND             reduce using rule 17 (variable -> ID .)
    OR              reduce using rule 17 (variable -> ID .)
    MAYOR           reduce using rule 17 (variable -> ID .)
    MENOR           reduce using rule 17 (variable -> ID .)
    DEQUALS         reduce using rule 17 (variable -> ID .)
    NEGADOR         reduce using rule 17 (variable -> ID .)
    DPUNTOS         reduce using rule 17 (variable -> ID .)
    PLUS            reduce using rule 17 (variable -> ID .)
    MINUS           reduce using rule 17 (variable -> ID .)
    TIMES           reduce using rule 17 (variable -> ID .)
    DIVIDE          reduce using rule 17 (variable -> ID .)
    MOD             reduce using rule 17 (variable -> ID .)
    EXP             reduce using rule 17 (variable -> ID .)
    ID              reduce using rule 17 (variable -> ID .)
    LEN             reduce using rule 17 (variable -> ID .)
    DEF             reduce using rule 17 (variable -> ID .)
    IF              reduce using rule 17 (variable -> ID .)
    ELIF            reduce using rule 17 (variable -> ID .)
    ELSE            reduce using rule 17 (variable -> ID .)
    FOR             reduce using rule 17 (variable -> ID .)
    RETURN          reduce using rule 17 (variable -> ID .)
    NUMBER          reduce using rule 17 (variable -> ID .)
    STRING          reduce using rule 17 (variable -> ID .)
    TRUE            reduce using rule 17 (variable -> ID .)
    FALSE           reduce using rule 17 (variable -> ID .)
    $end            reduce using rule 17 (variable -> ID .)
    PUNTO           reduce using rule 17 (variable -> ID .)
    COMA            reduce using rule 17 (variable -> ID .)
    RPAREN          reduce using rule 17 (variable -> ID .)
    RCORC           reduce using rule 17 (variable -> ID .)
    LPAREN          shift and go to state 32
    LCORC           shift and go to state 34

  ! LCORC           [ reduce using rule 17 (variable -> ID .) ]


state 54

    (46) expr_if_else -> ELIF condiciones_expr_if_else . DPUNTOS

    DPUNTOS         shift and go to state 107


state 55

    (47) expr_if_else -> ELSE DPUNTOS .

    ID              reduce using rule 47 (expr_if_else -> ELSE DPUNTOS .)
    LEN             reduce using rule 47 (expr_if_else -> ELSE DPUNTOS .)
    DEF             reduce using rule 47 (expr_if_else -> ELSE DPUNTOS .)
    IF              reduce using rule 47 (expr_if_else -> ELSE DPUNTOS .)
    ELIF            reduce using rule 47 (expr_if_else -> ELSE DPUNTOS .)
    ELSE            reduce using rule 47 (expr_if_else -> ELSE DPUNTOS .)
    FOR             reduce using rule 47 (expr_if_else -> ELSE DPUNTOS .)
    RETURN          reduce using rule 47 (expr_if_else -> ELSE DPUNTOS .)
    NUMBER          reduce using rule 47 (expr_if_else -> ELSE DPUNTOS .)
    STRING          reduce using rule 47 (expr_if_else -> ELSE DPUNTOS .)
    TRUE            reduce using rule 47 (expr_if_else -> ELSE DPUNTOS .)
    FALSE           reduce using rule 47 (expr_if_else -> ELSE DPUNTOS .)
    LCORC           reduce using rule 47 (expr_if_else -> ELSE DPUNTOS .)
    $end            reduce using rule 47 (expr_if_else -> ELSE DPUNTOS .)


state 56

    (55) def_for -> FOR variable . IN RANGE LPAREN params_for RPAREN DPUNTOS

    IN              shift and go to state 108


state 57

    (17) variable -> ID .
    (26) lista -> ID . LCORC variable RCORC
    (27) lista -> ID . LCORC operaciones_algebraica RCORC

    IN              reduce using rule 17 (variable -> ID .)
    AND             reduce using rule 17 (variable -> ID .)
    OR              reduce using rule 17 (variable -> ID .)
    MAYOR           reduce using rule 17 (variable -> ID .)
    MENOR           reduce using rule 17 (variable -> ID .)
    DEQUALS         reduce using rule 17 (variable -> ID .)
    NEGADOR         reduce using rule 17 (variable -> ID .)
    DPUNTOS         reduce using rule 17 (variable -> ID .)
    RPAREN          reduce using rule 17 (variable -> ID .)
    LCORC           shift and go to state 34


state 58

    (42) expr_return -> RETURN variable .
    (68) variables_operaciones_algebraica -> variable .

    ID              reduce using rule 42 (expr_return -> RETURN variable .)
    LEN             reduce using rule 42 (expr_return -> RETURN variable .)
    DEF             reduce using rule 42 (expr_return -> RETURN variable .)
    IF              reduce using rule 42 (expr_return -> RETURN variable .)
    ELIF            reduce using rule 42 (expr_return -> RETURN variable .)
    ELSE            reduce using rule 42 (expr_return -> RETURN variable .)
    FOR             reduce using rule 42 (expr_return -> RETURN variable .)
    RETURN          reduce using rule 42 (expr_return -> RETURN variable .)
    NUMBER          reduce using rule 42 (expr_return -> RETURN variable .)
    STRING          reduce using rule 42 (expr_return -> RETURN variable .)
    TRUE            reduce using rule 42 (expr_return -> RETURN variable .)
    FALSE           reduce using rule 42 (expr_return -> RETURN variable .)
    LCORC           reduce using rule 42 (expr_return -> RETURN variable .)
    $end            reduce using rule 42 (expr_return -> RETURN variable .)
    PLUS            reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    MINUS           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    TIMES           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    DIVIDE          reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    MOD             reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    EXP             reduce using rule 68 (variables_operaciones_algebraica -> variable .)


state 59

    (43) expr_return -> RETURN expr_funcion .
    (69) variables_operaciones_algebraica -> expr_funcion .

    ID              reduce using rule 43 (expr_return -> RETURN expr_funcion .)
    LEN             reduce using rule 43 (expr_return -> RETURN expr_funcion .)
    DEF             reduce using rule 43 (expr_return -> RETURN expr_funcion .)
    IF              reduce using rule 43 (expr_return -> RETURN expr_funcion .)
    ELIF            reduce using rule 43 (expr_return -> RETURN expr_funcion .)
    ELSE            reduce using rule 43 (expr_return -> RETURN expr_funcion .)
    FOR             reduce using rule 43 (expr_return -> RETURN expr_funcion .)
    RETURN          reduce using rule 43 (expr_return -> RETURN expr_funcion .)
    NUMBER          reduce using rule 43 (expr_return -> RETURN expr_funcion .)
    STRING          reduce using rule 43 (expr_return -> RETURN expr_funcion .)
    TRUE            reduce using rule 43 (expr_return -> RETURN expr_funcion .)
    FALSE           reduce using rule 43 (expr_return -> RETURN expr_funcion .)
    LCORC           reduce using rule 43 (expr_return -> RETURN expr_funcion .)
    $end            reduce using rule 43 (expr_return -> RETURN expr_funcion .)
    PLUS            reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    MINUS           reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    TIMES           reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    DIVIDE          reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    MOD             reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    EXP             reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)


state 60

    (44) expr_return -> RETURN operaciones_algebraica .
    (67) operaciones_algebraica -> operaciones_algebraica . operador_alge variables_operaciones_algebraica
    (70) operador_alge -> . PLUS
    (71) operador_alge -> . MINUS
    (72) operador_alge -> . TIMES
    (73) operador_alge -> . DIVIDE
    (74) operador_alge -> . MOD
    (75) operador_alge -> . EXP

    ID              reduce using rule 44 (expr_return -> RETURN operaciones_algebraica .)
    LEN             reduce using rule 44 (expr_return -> RETURN operaciones_algebraica .)
    DEF             reduce using rule 44 (expr_return -> RETURN operaciones_algebraica .)
    IF              reduce using rule 44 (expr_return -> RETURN operaciones_algebraica .)
    ELIF            reduce using rule 44 (expr_return -> RETURN operaciones_algebraica .)
    ELSE            reduce using rule 44 (expr_return -> RETURN operaciones_algebraica .)
    FOR             reduce using rule 44 (expr_return -> RETURN operaciones_algebraica .)
    RETURN          reduce using rule 44 (expr_return -> RETURN operaciones_algebraica .)
    NUMBER          reduce using rule 44 (expr_return -> RETURN operaciones_algebraica .)
    STRING          reduce using rule 44 (expr_return -> RETURN operaciones_algebraica .)
    TRUE            reduce using rule 44 (expr_return -> RETURN operaciones_algebraica .)
    FALSE           reduce using rule 44 (expr_return -> RETURN operaciones_algebraica .)
    LCORC           reduce using rule 44 (expr_return -> RETURN operaciones_algebraica .)
    $end            reduce using rule 44 (expr_return -> RETURN operaciones_algebraica .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    TIMES           shift and go to state 86
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 88
    EXP             shift and go to state 89

    operador_alge                  shift and go to state 83

state 61

    (30) expr_float -> NUMBER PUNTO . NUMBER

    NUMBER          shift and go to state 109


state 62

    (3) bloque_codigo -> bloque_codigo linea_codigo empty .

    ID              reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    LEN             reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    DEF             reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    IF              reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    ELIF            reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    ELSE            reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    FOR             reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    RETURN          reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    NUMBER          reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    STRING          reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    TRUE            reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    FALSE           reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    LCORC           reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)
    $end            reduce using rule 3 (bloque_codigo -> bloque_codigo linea_codigo empty .)


state 63

    (80) call_method -> call_method PUNTO expr_funcion .

    PUNTO           reduce using rule 80 (call_method -> call_method PUNTO expr_funcion .)
    ID              reduce using rule 80 (call_method -> call_method PUNTO expr_funcion .)
    LEN             reduce using rule 80 (call_method -> call_method PUNTO expr_funcion .)
    DEF             reduce using rule 80 (call_method -> call_method PUNTO expr_funcion .)
    IF              reduce using rule 80 (call_method -> call_method PUNTO expr_funcion .)
    ELIF            reduce using rule 80 (call_method -> call_method PUNTO expr_funcion .)
    ELSE            reduce using rule 80 (call_method -> call_method PUNTO expr_funcion .)
    FOR             reduce using rule 80 (call_method -> call_method PUNTO expr_funcion .)
    RETURN          reduce using rule 80 (call_method -> call_method PUNTO expr_funcion .)
    NUMBER          reduce using rule 80 (call_method -> call_method PUNTO expr_funcion .)
    STRING          reduce using rule 80 (call_method -> call_method PUNTO expr_funcion .)
    TRUE            reduce using rule 80 (call_method -> call_method PUNTO expr_funcion .)
    FALSE           reduce using rule 80 (call_method -> call_method PUNTO expr_funcion .)
    LCORC           reduce using rule 80 (call_method -> call_method PUNTO expr_funcion .)
    $end            reduce using rule 80 (call_method -> call_method PUNTO expr_funcion .)
    COMA            reduce using rule 80 (call_method -> call_method PUNTO expr_funcion .)
    RPAREN          reduce using rule 80 (call_method -> call_method PUNTO expr_funcion .)
    RCORC           reduce using rule 80 (call_method -> call_method PUNTO expr_funcion .)


state 64

    (23) expr_funcion -> ID LPAREN params . RPAREN
    (13) params -> params . COMA params

    RPAREN          shift and go to state 110
    COMA            shift and go to state 111


state 65

    (24) expr_funcion -> ID LPAREN RPAREN .

    ID              reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    LEN             reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    DEF             reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    IF              reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    ELIF            reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    ELSE            reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    FOR             reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    RETURN          reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    NUMBER          reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    STRING          reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    TRUE            reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    FALSE           reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    LCORC           reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    $end            reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    DPUNTOS         reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    COMA            reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    MOD             reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    EXP             reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    AND             reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    OR              reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    MAYOR           reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    MENOR           reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    DEQUALS         reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    NEGADOR         reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    PUNTO           reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)
    RCORC           reduce using rule 24 (expr_funcion -> ID LPAREN RPAREN .)


state 66

    (31) expr_asign -> ID EQUALS variable .
    (79) call_method -> variable . PUNTO expr_funcion
    (81) call_method -> variable . PUNTO funcion_lista LPAREN params RPAREN
    (68) variables_operaciones_algebraica -> variable .

    ID              reduce using rule 31 (expr_asign -> ID EQUALS variable .)
    LEN             reduce using rule 31 (expr_asign -> ID EQUALS variable .)
    DEF             reduce using rule 31 (expr_asign -> ID EQUALS variable .)
    IF              reduce using rule 31 (expr_asign -> ID EQUALS variable .)
    ELIF            reduce using rule 31 (expr_asign -> ID EQUALS variable .)
    ELSE            reduce using rule 31 (expr_asign -> ID EQUALS variable .)
    FOR             reduce using rule 31 (expr_asign -> ID EQUALS variable .)
    RETURN          reduce using rule 31 (expr_asign -> ID EQUALS variable .)
    NUMBER          reduce using rule 31 (expr_asign -> ID EQUALS variable .)
    STRING          reduce using rule 31 (expr_asign -> ID EQUALS variable .)
    TRUE            reduce using rule 31 (expr_asign -> ID EQUALS variable .)
    FALSE           reduce using rule 31 (expr_asign -> ID EQUALS variable .)
    LCORC           reduce using rule 31 (expr_asign -> ID EQUALS variable .)
    $end            reduce using rule 31 (expr_asign -> ID EQUALS variable .)
    COMA            reduce using rule 31 (expr_asign -> ID EQUALS variable .)
    RPAREN          reduce using rule 31 (expr_asign -> ID EQUALS variable .)
    RCORC           reduce using rule 31 (expr_asign -> ID EQUALS variable .)
    PUNTO           shift and go to state 38
    PLUS            reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    MINUS           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    TIMES           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    DIVIDE          reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    MOD             reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    EXP             reduce using rule 68 (variables_operaciones_algebraica -> variable .)


state 67

    (32) expr_asign -> ID EQUALS expr_funcion .
    (69) variables_operaciones_algebraica -> expr_funcion .

    ID              reduce using rule 32 (expr_asign -> ID EQUALS expr_funcion .)
    LEN             reduce using rule 32 (expr_asign -> ID EQUALS expr_funcion .)
    DEF             reduce using rule 32 (expr_asign -> ID EQUALS expr_funcion .)
    IF              reduce using rule 32 (expr_asign -> ID EQUALS expr_funcion .)
    ELIF            reduce using rule 32 (expr_asign -> ID EQUALS expr_funcion .)
    ELSE            reduce using rule 32 (expr_asign -> ID EQUALS expr_funcion .)
    FOR             reduce using rule 32 (expr_asign -> ID EQUALS expr_funcion .)
    RETURN          reduce using rule 32 (expr_asign -> ID EQUALS expr_funcion .)
    NUMBER          reduce using rule 32 (expr_asign -> ID EQUALS expr_funcion .)
    STRING          reduce using rule 32 (expr_asign -> ID EQUALS expr_funcion .)
    TRUE            reduce using rule 32 (expr_asign -> ID EQUALS expr_funcion .)
    FALSE           reduce using rule 32 (expr_asign -> ID EQUALS expr_funcion .)
    LCORC           reduce using rule 32 (expr_asign -> ID EQUALS expr_funcion .)
    $end            reduce using rule 32 (expr_asign -> ID EQUALS expr_funcion .)
    COMA            reduce using rule 32 (expr_asign -> ID EQUALS expr_funcion .)
    RPAREN          reduce using rule 32 (expr_asign -> ID EQUALS expr_funcion .)
    RCORC           reduce using rule 32 (expr_asign -> ID EQUALS expr_funcion .)
    PLUS            reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    MINUS           reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    TIMES           reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    DIVIDE          reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    MOD             reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    EXP             reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)


state 68

    (33) expr_asign -> ID EQUALS operaciones_algebraica .
    (67) operaciones_algebraica -> operaciones_algebraica . operador_alge variables_operaciones_algebraica
    (70) operador_alge -> . PLUS
    (71) operador_alge -> . MINUS
    (72) operador_alge -> . TIMES
    (73) operador_alge -> . DIVIDE
    (74) operador_alge -> . MOD
    (75) operador_alge -> . EXP

    ID              reduce using rule 33 (expr_asign -> ID EQUALS operaciones_algebraica .)
    LEN             reduce using rule 33 (expr_asign -> ID EQUALS operaciones_algebraica .)
    DEF             reduce using rule 33 (expr_asign -> ID EQUALS operaciones_algebraica .)
    IF              reduce using rule 33 (expr_asign -> ID EQUALS operaciones_algebraica .)
    ELIF            reduce using rule 33 (expr_asign -> ID EQUALS operaciones_algebraica .)
    ELSE            reduce using rule 33 (expr_asign -> ID EQUALS operaciones_algebraica .)
    FOR             reduce using rule 33 (expr_asign -> ID EQUALS operaciones_algebraica .)
    RETURN          reduce using rule 33 (expr_asign -> ID EQUALS operaciones_algebraica .)
    NUMBER          reduce using rule 33 (expr_asign -> ID EQUALS operaciones_algebraica .)
    STRING          reduce using rule 33 (expr_asign -> ID EQUALS operaciones_algebraica .)
    TRUE            reduce using rule 33 (expr_asign -> ID EQUALS operaciones_algebraica .)
    FALSE           reduce using rule 33 (expr_asign -> ID EQUALS operaciones_algebraica .)
    LCORC           reduce using rule 33 (expr_asign -> ID EQUALS operaciones_algebraica .)
    $end            reduce using rule 33 (expr_asign -> ID EQUALS operaciones_algebraica .)
    COMA            reduce using rule 33 (expr_asign -> ID EQUALS operaciones_algebraica .)
    RPAREN          reduce using rule 33 (expr_asign -> ID EQUALS operaciones_algebraica .)
    RCORC           reduce using rule 33 (expr_asign -> ID EQUALS operaciones_algebraica .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    TIMES           shift and go to state 86
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 88
    EXP             shift and go to state 89

    operador_alge                  shift and go to state 83

state 69

    (34) expr_asign -> ID EQUALS LCORC . RCORC
    (28) lista -> LCORC . params COMA params RCORC
    (12) params -> . variable
    (13) params -> . params COMA params
    (14) params -> . expr_funcion
    (15) params -> . expr_asign
    (16) params -> . operaciones_algebraica
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (31) expr_asign -> . ID EQUALS variable
    (32) expr_asign -> . ID EQUALS expr_funcion
    (33) expr_asign -> . ID EQUALS operaciones_algebraica
    (34) expr_asign -> . ID EQUALS LCORC RCORC
    (35) expr_asign -> . ID EQUALS call_method
    (65) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (66) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (67) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion

    RCORC           shift and go to state 112
    ID              shift and go to state 44
    NUMBER          shift and go to state 22
    LEN             shift and go to state 12
    LPAREN          shift and go to state 45
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    params                         shift and go to state 39
    variable                       shift and go to state 40
    expr_funcion                   shift and go to state 41
    expr_asign                     shift and go to state 42
    operaciones_algebraica         shift and go to state 43
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25
    variables_operaciones_algebraica shift and go to state 46

state 70

    (35) expr_asign -> ID EQUALS call_method .
    (80) call_method -> call_method . PUNTO expr_funcion

    ID              reduce using rule 35 (expr_asign -> ID EQUALS call_method .)
    LEN             reduce using rule 35 (expr_asign -> ID EQUALS call_method .)
    DEF             reduce using rule 35 (expr_asign -> ID EQUALS call_method .)
    IF              reduce using rule 35 (expr_asign -> ID EQUALS call_method .)
    ELIF            reduce using rule 35 (expr_asign -> ID EQUALS call_method .)
    ELSE            reduce using rule 35 (expr_asign -> ID EQUALS call_method .)
    FOR             reduce using rule 35 (expr_asign -> ID EQUALS call_method .)
    RETURN          reduce using rule 35 (expr_asign -> ID EQUALS call_method .)
    NUMBER          reduce using rule 35 (expr_asign -> ID EQUALS call_method .)
    STRING          reduce using rule 35 (expr_asign -> ID EQUALS call_method .)
    TRUE            reduce using rule 35 (expr_asign -> ID EQUALS call_method .)
    FALSE           reduce using rule 35 (expr_asign -> ID EQUALS call_method .)
    LCORC           reduce using rule 35 (expr_asign -> ID EQUALS call_method .)
    $end            reduce using rule 35 (expr_asign -> ID EQUALS call_method .)
    COMA            reduce using rule 35 (expr_asign -> ID EQUALS call_method .)
    RPAREN          reduce using rule 35 (expr_asign -> ID EQUALS call_method .)
    RCORC           reduce using rule 35 (expr_asign -> ID EQUALS call_method .)
    PUNTO           shift and go to state 31


state 71

    (17) variable -> ID .
    (26) lista -> ID . LCORC variable RCORC
    (27) lista -> ID . LCORC operaciones_algebraica RCORC
    (23) expr_funcion -> ID . LPAREN params RPAREN
    (24) expr_funcion -> ID . LPAREN RPAREN

    RCORC           reduce using rule 17 (variable -> ID .)
    PLUS            reduce using rule 17 (variable -> ID .)
    MINUS           reduce using rule 17 (variable -> ID .)
    TIMES           reduce using rule 17 (variable -> ID .)
    DIVIDE          reduce using rule 17 (variable -> ID .)
    MOD             reduce using rule 17 (variable -> ID .)
    EXP             reduce using rule 17 (variable -> ID .)
    COMA            reduce using rule 17 (variable -> ID .)
    RPAREN          reduce using rule 17 (variable -> ID .)
    LCORC           shift and go to state 34
    LPAREN          shift and go to state 32


state 72

    (26) lista -> ID LCORC variable . RCORC
    (68) variables_operaciones_algebraica -> variable .

    RCORC           shift and go to state 113
    PLUS            reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    MINUS           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    TIMES           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    DIVIDE          reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    MOD             reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    EXP             reduce using rule 68 (variables_operaciones_algebraica -> variable .)


state 73

    (27) lista -> ID LCORC operaciones_algebraica . RCORC
    (67) operaciones_algebraica -> operaciones_algebraica . operador_alge variables_operaciones_algebraica
    (70) operador_alge -> . PLUS
    (71) operador_alge -> . MINUS
    (72) operador_alge -> . TIMES
    (73) operador_alge -> . DIVIDE
    (74) operador_alge -> . MOD
    (75) operador_alge -> . EXP

    RCORC           shift and go to state 114
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    TIMES           shift and go to state 86
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 88
    EXP             shift and go to state 89

    operador_alge                  shift and go to state 83

state 74

    (69) variables_operaciones_algebraica -> expr_funcion .

    PLUS            reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    MINUS           reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    TIMES           reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    DIVIDE          reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    MOD             reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    EXP             reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    COMA            reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    MAYOR           reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    MENOR           reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    DEQUALS         reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    NEGADOR         reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    ID              reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    LEN             reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    DEF             reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    IF              reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    ELIF            reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    ELSE            reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    FOR             reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    RETURN          reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    NUMBER          reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    STRING          reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    TRUE            reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    FALSE           reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    LCORC           reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    $end            reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    RPAREN          reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    RCORC           reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)


state 75

    (25) expr_funcion -> LEN LPAREN params . RPAREN
    (13) params -> params . COMA params

    RPAREN          shift and go to state 115
    COMA            shift and go to state 111


state 76

    (11) expr_def_funcion -> DEF expr_funcion DPUNTOS .

    ID              reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    LEN             reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    DEF             reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    IF              reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    ELIF            reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    ELSE            reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    FOR             reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    RETURN          reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    NUMBER          reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    STRING          reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    TRUE            reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    FALSE           reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    LCORC           reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)
    $end            reduce using rule 11 (expr_def_funcion -> DEF expr_funcion DPUNTOS .)


state 77

    (79) call_method -> variable PUNTO expr_funcion .

    PUNTO           reduce using rule 79 (call_method -> variable PUNTO expr_funcion .)
    ID              reduce using rule 79 (call_method -> variable PUNTO expr_funcion .)
    LEN             reduce using rule 79 (call_method -> variable PUNTO expr_funcion .)
    DEF             reduce using rule 79 (call_method -> variable PUNTO expr_funcion .)
    IF              reduce using rule 79 (call_method -> variable PUNTO expr_funcion .)
    ELIF            reduce using rule 79 (call_method -> variable PUNTO expr_funcion .)
    ELSE            reduce using rule 79 (call_method -> variable PUNTO expr_funcion .)
    FOR             reduce using rule 79 (call_method -> variable PUNTO expr_funcion .)
    RETURN          reduce using rule 79 (call_method -> variable PUNTO expr_funcion .)
    NUMBER          reduce using rule 79 (call_method -> variable PUNTO expr_funcion .)
    STRING          reduce using rule 79 (call_method -> variable PUNTO expr_funcion .)
    TRUE            reduce using rule 79 (call_method -> variable PUNTO expr_funcion .)
    FALSE           reduce using rule 79 (call_method -> variable PUNTO expr_funcion .)
    LCORC           reduce using rule 79 (call_method -> variable PUNTO expr_funcion .)
    $end            reduce using rule 79 (call_method -> variable PUNTO expr_funcion .)
    COMA            reduce using rule 79 (call_method -> variable PUNTO expr_funcion .)
    RPAREN          reduce using rule 79 (call_method -> variable PUNTO expr_funcion .)
    RCORC           reduce using rule 79 (call_method -> variable PUNTO expr_funcion .)


state 78

    (81) call_method -> variable PUNTO funcion_lista . LPAREN params RPAREN

    LPAREN          shift and go to state 116


state 79

    (76) funcion_lista -> APPEND .

    LPAREN          reduce using rule 76 (funcion_lista -> APPEND .)


state 80

    (77) funcion_lista -> INDEX .

    LPAREN          reduce using rule 77 (funcion_lista -> INDEX .)


state 81

    (78) funcion_lista -> POP .

    LPAREN          reduce using rule 78 (funcion_lista -> POP .)


state 82

    (28) lista -> LCORC params COMA . params RCORC
    (13) params -> params COMA . params
    (12) params -> . variable
    (13) params -> . params COMA params
    (14) params -> . expr_funcion
    (15) params -> . expr_asign
    (16) params -> . operaciones_algebraica
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (31) expr_asign -> . ID EQUALS variable
    (32) expr_asign -> . ID EQUALS expr_funcion
    (33) expr_asign -> . ID EQUALS operaciones_algebraica
    (34) expr_asign -> . ID EQUALS LCORC RCORC
    (35) expr_asign -> . ID EQUALS call_method
    (65) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (66) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (67) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion

    ID              shift and go to state 44
    NUMBER          shift and go to state 22
    LEN             shift and go to state 12
    LPAREN          shift and go to state 45
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    params                         shift and go to state 117
    variable                       shift and go to state 40
    expr_funcion                   shift and go to state 41
    expr_asign                     shift and go to state 42
    operaciones_algebraica         shift and go to state 43
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25
    variables_operaciones_algebraica shift and go to state 46

state 83

    (67) operaciones_algebraica -> operaciones_algebraica operador_alge . variables_operaciones_algebraica
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC

    ID              shift and go to state 53
    NUMBER          shift and go to state 22
    LEN             shift and go to state 12
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    variables_operaciones_algebraica shift and go to state 118
    variable                       shift and go to state 91
    expr_funcion                   shift and go to state 74
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25

state 84

    (70) operador_alge -> PLUS .

    ID              reduce using rule 70 (operador_alge -> PLUS .)
    NUMBER          reduce using rule 70 (operador_alge -> PLUS .)
    LEN             reduce using rule 70 (operador_alge -> PLUS .)
    STRING          reduce using rule 70 (operador_alge -> PLUS .)
    TRUE            reduce using rule 70 (operador_alge -> PLUS .)
    FALSE           reduce using rule 70 (operador_alge -> PLUS .)
    LCORC           reduce using rule 70 (operador_alge -> PLUS .)


state 85

    (71) operador_alge -> MINUS .

    ID              reduce using rule 71 (operador_alge -> MINUS .)
    NUMBER          reduce using rule 71 (operador_alge -> MINUS .)
    LEN             reduce using rule 71 (operador_alge -> MINUS .)
    STRING          reduce using rule 71 (operador_alge -> MINUS .)
    TRUE            reduce using rule 71 (operador_alge -> MINUS .)
    FALSE           reduce using rule 71 (operador_alge -> MINUS .)
    LCORC           reduce using rule 71 (operador_alge -> MINUS .)


state 86

    (72) operador_alge -> TIMES .

    ID              reduce using rule 72 (operador_alge -> TIMES .)
    NUMBER          reduce using rule 72 (operador_alge -> TIMES .)
    LEN             reduce using rule 72 (operador_alge -> TIMES .)
    STRING          reduce using rule 72 (operador_alge -> TIMES .)
    TRUE            reduce using rule 72 (operador_alge -> TIMES .)
    FALSE           reduce using rule 72 (operador_alge -> TIMES .)
    LCORC           reduce using rule 72 (operador_alge -> TIMES .)


state 87

    (73) operador_alge -> DIVIDE .

    ID              reduce using rule 73 (operador_alge -> DIVIDE .)
    NUMBER          reduce using rule 73 (operador_alge -> DIVIDE .)
    LEN             reduce using rule 73 (operador_alge -> DIVIDE .)
    STRING          reduce using rule 73 (operador_alge -> DIVIDE .)
    TRUE            reduce using rule 73 (operador_alge -> DIVIDE .)
    FALSE           reduce using rule 73 (operador_alge -> DIVIDE .)
    LCORC           reduce using rule 73 (operador_alge -> DIVIDE .)


state 88

    (74) operador_alge -> MOD .

    ID              reduce using rule 74 (operador_alge -> MOD .)
    NUMBER          reduce using rule 74 (operador_alge -> MOD .)
    LEN             reduce using rule 74 (operador_alge -> MOD .)
    STRING          reduce using rule 74 (operador_alge -> MOD .)
    TRUE            reduce using rule 74 (operador_alge -> MOD .)
    FALSE           reduce using rule 74 (operador_alge -> MOD .)
    LCORC           reduce using rule 74 (operador_alge -> MOD .)


state 89

    (75) operador_alge -> EXP .

    ID              reduce using rule 75 (operador_alge -> EXP .)
    NUMBER          reduce using rule 75 (operador_alge -> EXP .)
    LEN             reduce using rule 75 (operador_alge -> EXP .)
    STRING          reduce using rule 75 (operador_alge -> EXP .)
    TRUE            reduce using rule 75 (operador_alge -> EXP .)
    FALSE           reduce using rule 75 (operador_alge -> EXP .)
    LCORC           reduce using rule 75 (operador_alge -> EXP .)


state 90

    (66) operaciones_algebraica -> LPAREN variables_operaciones_algebraica . operador_alge variables_operaciones_algebraica RPAREN
    (70) operador_alge -> . PLUS
    (71) operador_alge -> . MINUS
    (72) operador_alge -> . TIMES
    (73) operador_alge -> . DIVIDE
    (74) operador_alge -> . MOD
    (75) operador_alge -> . EXP

    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    TIMES           shift and go to state 86
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 88
    EXP             shift and go to state 89

    operador_alge                  shift and go to state 119

state 91

    (68) variables_operaciones_algebraica -> variable .

    PLUS            reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    MINUS           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    TIMES           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    DIVIDE          reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    MOD             reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    EXP             reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    COMA            reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    MAYOR           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    MENOR           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    DEQUALS         reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    NEGADOR         reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    ID              reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    LEN             reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    DEF             reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    IF              reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    ELIF            reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    ELSE            reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    FOR             reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    RETURN          reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    NUMBER          reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    STRING          reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    TRUE            reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    FALSE           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    LCORC           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    $end            reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    RPAREN          reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    RCORC           reduce using rule 68 (variables_operaciones_algebraica -> variable .)


state 92

    (65) operaciones_algebraica -> variables_operaciones_algebraica operador_alge . variables_operaciones_algebraica
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC

    ID              shift and go to state 53
    NUMBER          shift and go to state 22
    LEN             shift and go to state 12
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    variables_operaciones_algebraica shift and go to state 120
    variable                       shift and go to state 91
    expr_funcion                   shift and go to state 74
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25

state 93

    (45) expr_if_else -> IF condiciones_expr_if_else DPUNTOS .

    ID              reduce using rule 45 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    LEN             reduce using rule 45 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    DEF             reduce using rule 45 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    IF              reduce using rule 45 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    ELIF            reduce using rule 45 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    ELSE            reduce using rule 45 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    FOR             reduce using rule 45 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    RETURN          reduce using rule 45 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    NUMBER          reduce using rule 45 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    STRING          reduce using rule 45 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    TRUE            reduce using rule 45 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    FALSE           reduce using rule 45 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    LCORC           reduce using rule 45 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)
    $end            reduce using rule 45 (expr_if_else -> IF condiciones_expr_if_else DPUNTOS .)


state 94

    (49) condiciones_expr_if_else -> condiciones and_or . condiciones_expr_if_else
    (48) condiciones_expr_if_else -> . condiciones
    (49) condiciones_expr_if_else -> . condiciones and_or condiciones_expr_if_else
    (50) condiciones_expr_if_else -> . LPAREN condiciones_expr_if_else RPAREN
    (51) condiciones -> . variable
    (52) condiciones -> . expr_funcion
    (53) condiciones -> . operaciones_algebraica operador_igualdad variable
    (54) condiciones -> . condiciones operador_igualdad condiciones
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (65) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (66) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (67) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion

    LPAREN          shift and go to state 49
    ID              shift and go to state 53
    NUMBER          shift and go to state 22
    LEN             shift and go to state 12
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    condiciones                    shift and go to state 48
    condiciones_expr_if_else       shift and go to state 121
    variable                       shift and go to state 50
    expr_funcion                   shift and go to state 51
    operaciones_algebraica         shift and go to state 52
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25
    variables_operaciones_algebraica shift and go to state 46

state 95

    (54) condiciones -> condiciones operador_igualdad . condiciones
    (51) condiciones -> . variable
    (52) condiciones -> . expr_funcion
    (53) condiciones -> . operaciones_algebraica operador_igualdad variable
    (54) condiciones -> . condiciones operador_igualdad condiciones
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (65) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (66) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (67) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion

    ID              shift and go to state 53
    NUMBER          shift and go to state 22
    LEN             shift and go to state 12
    LPAREN          shift and go to state 45
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    condiciones                    shift and go to state 122
    variable                       shift and go to state 50
    expr_funcion                   shift and go to state 51
    operaciones_algebraica         shift and go to state 52
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25
    variables_operaciones_algebraica shift and go to state 46

state 96

    (63) and_or -> AND .

    LPAREN          reduce using rule 63 (and_or -> AND .)
    ID              reduce using rule 63 (and_or -> AND .)
    NUMBER          reduce using rule 63 (and_or -> AND .)
    LEN             reduce using rule 63 (and_or -> AND .)
    STRING          reduce using rule 63 (and_or -> AND .)
    TRUE            reduce using rule 63 (and_or -> AND .)
    FALSE           reduce using rule 63 (and_or -> AND .)
    LCORC           reduce using rule 63 (and_or -> AND .)


state 97

    (64) and_or -> OR .

    LPAREN          reduce using rule 64 (and_or -> OR .)
    ID              reduce using rule 64 (and_or -> OR .)
    NUMBER          reduce using rule 64 (and_or -> OR .)
    LEN             reduce using rule 64 (and_or -> OR .)
    STRING          reduce using rule 64 (and_or -> OR .)
    TRUE            reduce using rule 64 (and_or -> OR .)
    FALSE           reduce using rule 64 (and_or -> OR .)
    LCORC           reduce using rule 64 (and_or -> OR .)


state 98

    (36) operador_igualdad -> MAYOR .
    (39) operador_igualdad -> MAYOR . EQUALS

    ID              reduce using rule 36 (operador_igualdad -> MAYOR .)
    NUMBER          reduce using rule 36 (operador_igualdad -> MAYOR .)
    LEN             reduce using rule 36 (operador_igualdad -> MAYOR .)
    LPAREN          reduce using rule 36 (operador_igualdad -> MAYOR .)
    STRING          reduce using rule 36 (operador_igualdad -> MAYOR .)
    TRUE            reduce using rule 36 (operador_igualdad -> MAYOR .)
    FALSE           reduce using rule 36 (operador_igualdad -> MAYOR .)
    LCORC           reduce using rule 36 (operador_igualdad -> MAYOR .)
    EQUALS          shift and go to state 123


state 99

    (37) operador_igualdad -> MENOR .
    (40) operador_igualdad -> MENOR . EQUALS

    ID              reduce using rule 37 (operador_igualdad -> MENOR .)
    NUMBER          reduce using rule 37 (operador_igualdad -> MENOR .)
    LEN             reduce using rule 37 (operador_igualdad -> MENOR .)
    LPAREN          reduce using rule 37 (operador_igualdad -> MENOR .)
    STRING          reduce using rule 37 (operador_igualdad -> MENOR .)
    TRUE            reduce using rule 37 (operador_igualdad -> MENOR .)
    FALSE           reduce using rule 37 (operador_igualdad -> MENOR .)
    LCORC           reduce using rule 37 (operador_igualdad -> MENOR .)
    EQUALS          shift and go to state 124


state 100

    (38) operador_igualdad -> DEQUALS .

    ID              reduce using rule 38 (operador_igualdad -> DEQUALS .)
    NUMBER          reduce using rule 38 (operador_igualdad -> DEQUALS .)
    LEN             reduce using rule 38 (operador_igualdad -> DEQUALS .)
    LPAREN          reduce using rule 38 (operador_igualdad -> DEQUALS .)
    STRING          reduce using rule 38 (operador_igualdad -> DEQUALS .)
    TRUE            reduce using rule 38 (operador_igualdad -> DEQUALS .)
    FALSE           reduce using rule 38 (operador_igualdad -> DEQUALS .)
    LCORC           reduce using rule 38 (operador_igualdad -> DEQUALS .)


state 101

    (41) operador_igualdad -> NEGADOR . EQUALS

    EQUALS          shift and go to state 125


state 102

    (50) condiciones_expr_if_else -> LPAREN condiciones_expr_if_else . RPAREN

    RPAREN          shift and go to state 126


state 103

    (66) operaciones_algebraica -> LPAREN variables_operaciones_algebraica . operador_alge variables_operaciones_algebraica RPAREN
    (65) operaciones_algebraica -> variables_operaciones_algebraica . operador_alge variables_operaciones_algebraica
    (70) operador_alge -> . PLUS
    (71) operador_alge -> . MINUS
    (72) operador_alge -> . TIMES
    (73) operador_alge -> . DIVIDE
    (74) operador_alge -> . MOD
    (75) operador_alge -> . EXP

    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    TIMES           shift and go to state 86
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 88
    EXP             shift and go to state 89

    operador_alge                  shift and go to state 127

state 104

    (68) variables_operaciones_algebraica -> variable .
    (51) condiciones -> variable .

    PLUS            reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    MINUS           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    TIMES           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    DIVIDE          reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    MOD             reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    EXP             reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    AND             reduce using rule 51 (condiciones -> variable .)
    OR              reduce using rule 51 (condiciones -> variable .)
    MAYOR           reduce using rule 51 (condiciones -> variable .)
    MENOR           reduce using rule 51 (condiciones -> variable .)
    DEQUALS         reduce using rule 51 (condiciones -> variable .)
    NEGADOR         reduce using rule 51 (condiciones -> variable .)
    RPAREN          reduce using rule 51 (condiciones -> variable .)


state 105

    (69) variables_operaciones_algebraica -> expr_funcion .
    (52) condiciones -> expr_funcion .

    PLUS            reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    MINUS           reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    TIMES           reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    DIVIDE          reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    MOD             reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    EXP             reduce using rule 69 (variables_operaciones_algebraica -> expr_funcion .)
    AND             reduce using rule 52 (condiciones -> expr_funcion .)
    OR              reduce using rule 52 (condiciones -> expr_funcion .)
    MAYOR           reduce using rule 52 (condiciones -> expr_funcion .)
    MENOR           reduce using rule 52 (condiciones -> expr_funcion .)
    DEQUALS         reduce using rule 52 (condiciones -> expr_funcion .)
    NEGADOR         reduce using rule 52 (condiciones -> expr_funcion .)
    RPAREN          reduce using rule 52 (condiciones -> expr_funcion .)


state 106

    (53) condiciones -> operaciones_algebraica operador_igualdad . variable
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC

    ID              shift and go to state 57
    NUMBER          shift and go to state 22
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    variable                       shift and go to state 128
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25

state 107

    (46) expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .

    ID              reduce using rule 46 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    LEN             reduce using rule 46 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    DEF             reduce using rule 46 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    IF              reduce using rule 46 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    ELIF            reduce using rule 46 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    ELSE            reduce using rule 46 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    FOR             reduce using rule 46 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    RETURN          reduce using rule 46 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    NUMBER          reduce using rule 46 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    STRING          reduce using rule 46 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    TRUE            reduce using rule 46 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    FALSE           reduce using rule 46 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    LCORC           reduce using rule 46 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)
    $end            reduce using rule 46 (expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS .)


state 108

    (55) def_for -> FOR variable IN . RANGE LPAREN params_for RPAREN DPUNTOS

    RANGE           shift and go to state 129


state 109

    (30) expr_float -> NUMBER PUNTO NUMBER .

    PUNTO           reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    COMA            reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    PLUS            reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    MINUS           reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    TIMES           reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    DIVIDE          reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    MOD             reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    EXP             reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    AND             reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    OR              reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    MAYOR           reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    MENOR           reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    DEQUALS         reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    NEGADOR         reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    DPUNTOS         reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    IN              reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    ID              reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    LEN             reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    DEF             reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    IF              reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    ELIF            reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    ELSE            reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    FOR             reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    RETURN          reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    NUMBER          reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    STRING          reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    TRUE            reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    FALSE           reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    LCORC           reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    $end            reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    RPAREN          reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)
    RCORC           reduce using rule 30 (expr_float -> NUMBER PUNTO NUMBER .)


state 110

    (23) expr_funcion -> ID LPAREN params RPAREN .

    ID              reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    LEN             reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    DEF             reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    IF              reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    ELIF            reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    ELSE            reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    FOR             reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    RETURN          reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    NUMBER          reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    STRING          reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    TRUE            reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    FALSE           reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    LCORC           reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    $end            reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    DPUNTOS         reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    COMA            reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    PLUS            reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    MINUS           reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    TIMES           reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    DIVIDE          reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    MOD             reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    EXP             reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    AND             reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    OR              reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    MAYOR           reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    MENOR           reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    DEQUALS         reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    NEGADOR         reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    PUNTO           reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    RPAREN          reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)
    RCORC           reduce using rule 23 (expr_funcion -> ID LPAREN params RPAREN .)


state 111

    (13) params -> params COMA . params
    (12) params -> . variable
    (13) params -> . params COMA params
    (14) params -> . expr_funcion
    (15) params -> . expr_asign
    (16) params -> . operaciones_algebraica
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (31) expr_asign -> . ID EQUALS variable
    (32) expr_asign -> . ID EQUALS expr_funcion
    (33) expr_asign -> . ID EQUALS operaciones_algebraica
    (34) expr_asign -> . ID EQUALS LCORC RCORC
    (35) expr_asign -> . ID EQUALS call_method
    (65) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (66) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (67) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion

    ID              shift and go to state 44
    NUMBER          shift and go to state 22
    LEN             shift and go to state 12
    LPAREN          shift and go to state 45
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    params                         shift and go to state 130
    variable                       shift and go to state 40
    expr_funcion                   shift and go to state 41
    expr_asign                     shift and go to state 42
    operaciones_algebraica         shift and go to state 43
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25
    variables_operaciones_algebraica shift and go to state 46

state 112

    (34) expr_asign -> ID EQUALS LCORC RCORC .

    ID              reduce using rule 34 (expr_asign -> ID EQUALS LCORC RCORC .)
    LEN             reduce using rule 34 (expr_asign -> ID EQUALS LCORC RCORC .)
    DEF             reduce using rule 34 (expr_asign -> ID EQUALS LCORC RCORC .)
    IF              reduce using rule 34 (expr_asign -> ID EQUALS LCORC RCORC .)
    ELIF            reduce using rule 34 (expr_asign -> ID EQUALS LCORC RCORC .)
    ELSE            reduce using rule 34 (expr_asign -> ID EQUALS LCORC RCORC .)
    FOR             reduce using rule 34 (expr_asign -> ID EQUALS LCORC RCORC .)
    RETURN          reduce using rule 34 (expr_asign -> ID EQUALS LCORC RCORC .)
    NUMBER          reduce using rule 34 (expr_asign -> ID EQUALS LCORC RCORC .)
    STRING          reduce using rule 34 (expr_asign -> ID EQUALS LCORC RCORC .)
    TRUE            reduce using rule 34 (expr_asign -> ID EQUALS LCORC RCORC .)
    FALSE           reduce using rule 34 (expr_asign -> ID EQUALS LCORC RCORC .)
    LCORC           reduce using rule 34 (expr_asign -> ID EQUALS LCORC RCORC .)
    $end            reduce using rule 34 (expr_asign -> ID EQUALS LCORC RCORC .)
    COMA            reduce using rule 34 (expr_asign -> ID EQUALS LCORC RCORC .)
    RPAREN          reduce using rule 34 (expr_asign -> ID EQUALS LCORC RCORC .)
    RCORC           reduce using rule 34 (expr_asign -> ID EQUALS LCORC RCORC .)


state 113

    (26) lista -> ID LCORC variable RCORC .

    PUNTO           reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    COMA            reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    PLUS            reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    MINUS           reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    TIMES           reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    DIVIDE          reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    MOD             reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    EXP             reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    AND             reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    OR              reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    MAYOR           reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    MENOR           reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    DEQUALS         reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    NEGADOR         reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    DPUNTOS         reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    IN              reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    ID              reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    LEN             reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    DEF             reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    IF              reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    ELIF            reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    ELSE            reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    FOR             reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    RETURN          reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    NUMBER          reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    STRING          reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    TRUE            reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    FALSE           reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    LCORC           reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    $end            reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    RPAREN          reduce using rule 26 (lista -> ID LCORC variable RCORC .)
    RCORC           reduce using rule 26 (lista -> ID LCORC variable RCORC .)


state 114

    (27) lista -> ID LCORC operaciones_algebraica RCORC .

    PUNTO           reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    COMA            reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    PLUS            reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    MINUS           reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    TIMES           reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    DIVIDE          reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    MOD             reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    EXP             reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    AND             reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    OR              reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    MAYOR           reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    MENOR           reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    DEQUALS         reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    NEGADOR         reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    DPUNTOS         reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    IN              reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    ID              reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    LEN             reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    DEF             reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    IF              reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    ELIF            reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    ELSE            reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    FOR             reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    RETURN          reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    NUMBER          reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    STRING          reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    TRUE            reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    FALSE           reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    LCORC           reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    $end            reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    RPAREN          reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)
    RCORC           reduce using rule 27 (lista -> ID LCORC operaciones_algebraica RCORC .)


state 115

    (25) expr_funcion -> LEN LPAREN params RPAREN .

    ID              reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    LEN             reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    DEF             reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    IF              reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    ELIF            reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    ELSE            reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    FOR             reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    RETURN          reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    NUMBER          reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    STRING          reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    TRUE            reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    FALSE           reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    LCORC           reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    $end            reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    DPUNTOS         reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    COMA            reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    PLUS            reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    MINUS           reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    TIMES           reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    DIVIDE          reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    MOD             reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    EXP             reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    AND             reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    OR              reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    MAYOR           reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    MENOR           reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    DEQUALS         reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    NEGADOR         reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    PUNTO           reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    RPAREN          reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)
    RCORC           reduce using rule 25 (expr_funcion -> LEN LPAREN params RPAREN .)


state 116

    (81) call_method -> variable PUNTO funcion_lista LPAREN . params RPAREN
    (12) params -> . variable
    (13) params -> . params COMA params
    (14) params -> . expr_funcion
    (15) params -> . expr_asign
    (16) params -> . operaciones_algebraica
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (31) expr_asign -> . ID EQUALS variable
    (32) expr_asign -> . ID EQUALS expr_funcion
    (33) expr_asign -> . ID EQUALS operaciones_algebraica
    (34) expr_asign -> . ID EQUALS LCORC RCORC
    (35) expr_asign -> . ID EQUALS call_method
    (65) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (66) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (67) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion

    ID              shift and go to state 44
    NUMBER          shift and go to state 22
    LEN             shift and go to state 12
    LPAREN          shift and go to state 45
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    variable                       shift and go to state 40
    params                         shift and go to state 131
    expr_funcion                   shift and go to state 41
    expr_asign                     shift and go to state 42
    operaciones_algebraica         shift and go to state 43
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25
    variables_operaciones_algebraica shift and go to state 46

state 117

    (28) lista -> LCORC params COMA params . RCORC
    (13) params -> params COMA params .
    (13) params -> params . COMA params

  ! shift/reduce conflict for COMA resolved as shift
    RCORC           shift and go to state 132
    COMA            shift and go to state 111

  ! COMA            [ reduce using rule 13 (params -> params COMA params .) ]


state 118

    (67) operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .

    PLUS            reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MINUS           reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    TIMES           reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    DIVIDE          reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MOD             reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    EXP             reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    COMA            reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MAYOR           reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MENOR           reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    DEQUALS         reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    NEGADOR         reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    ID              reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    LEN             reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    DEF             reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    IF              reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    ELIF            reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    ELSE            reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    FOR             reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    RETURN          reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    NUMBER          reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    STRING          reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    TRUE            reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    FALSE           reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    LCORC           reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    $end            reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    RPAREN          reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    RCORC           reduce using rule 67 (operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica .)


state 119

    (66) operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge . variables_operaciones_algebraica RPAREN
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC

    ID              shift and go to state 53
    NUMBER          shift and go to state 22
    LEN             shift and go to state 12
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    variables_operaciones_algebraica shift and go to state 133
    variable                       shift and go to state 91
    expr_funcion                   shift and go to state 74
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25

state 120

    (65) operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .

    PLUS            reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MINUS           reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    TIMES           reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    DIVIDE          reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MOD             reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    EXP             reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    COMA            reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MAYOR           reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MENOR           reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    DEQUALS         reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    NEGADOR         reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    ID              reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    LEN             reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    DEF             reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    IF              reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    ELIF            reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    ELSE            reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    FOR             reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    RETURN          reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    NUMBER          reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    STRING          reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    TRUE            reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    FALSE           reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    LCORC           reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    $end            reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    RPAREN          reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    RCORC           reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)


state 121

    (49) condiciones_expr_if_else -> condiciones and_or condiciones_expr_if_else .

    DPUNTOS         reduce using rule 49 (condiciones_expr_if_else -> condiciones and_or condiciones_expr_if_else .)
    RPAREN          reduce using rule 49 (condiciones_expr_if_else -> condiciones and_or condiciones_expr_if_else .)


state 122

    (54) condiciones -> condiciones operador_igualdad condiciones .
    (54) condiciones -> condiciones . operador_igualdad condiciones
    (36) operador_igualdad -> . MAYOR
    (37) operador_igualdad -> . MENOR
    (38) operador_igualdad -> . DEQUALS
    (39) operador_igualdad -> . MAYOR EQUALS
    (40) operador_igualdad -> . MENOR EQUALS
    (41) operador_igualdad -> . NEGADOR EQUALS

  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for DEQUALS resolved as shift
  ! shift/reduce conflict for NEGADOR resolved as shift
    AND             reduce using rule 54 (condiciones -> condiciones operador_igualdad condiciones .)
    OR              reduce using rule 54 (condiciones -> condiciones operador_igualdad condiciones .)
    DPUNTOS         reduce using rule 54 (condiciones -> condiciones operador_igualdad condiciones .)
    RPAREN          reduce using rule 54 (condiciones -> condiciones operador_igualdad condiciones .)
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    DEQUALS         shift and go to state 100
    NEGADOR         shift and go to state 101

  ! MAYOR           [ reduce using rule 54 (condiciones -> condiciones operador_igualdad condiciones .) ]
  ! MENOR           [ reduce using rule 54 (condiciones -> condiciones operador_igualdad condiciones .) ]
  ! DEQUALS         [ reduce using rule 54 (condiciones -> condiciones operador_igualdad condiciones .) ]
  ! NEGADOR         [ reduce using rule 54 (condiciones -> condiciones operador_igualdad condiciones .) ]

    operador_igualdad              shift and go to state 95

state 123

    (39) operador_igualdad -> MAYOR EQUALS .

    ID              reduce using rule 39 (operador_igualdad -> MAYOR EQUALS .)
    NUMBER          reduce using rule 39 (operador_igualdad -> MAYOR EQUALS .)
    LEN             reduce using rule 39 (operador_igualdad -> MAYOR EQUALS .)
    LPAREN          reduce using rule 39 (operador_igualdad -> MAYOR EQUALS .)
    STRING          reduce using rule 39 (operador_igualdad -> MAYOR EQUALS .)
    TRUE            reduce using rule 39 (operador_igualdad -> MAYOR EQUALS .)
    FALSE           reduce using rule 39 (operador_igualdad -> MAYOR EQUALS .)
    LCORC           reduce using rule 39 (operador_igualdad -> MAYOR EQUALS .)


state 124

    (40) operador_igualdad -> MENOR EQUALS .

    ID              reduce using rule 40 (operador_igualdad -> MENOR EQUALS .)
    NUMBER          reduce using rule 40 (operador_igualdad -> MENOR EQUALS .)
    LEN             reduce using rule 40 (operador_igualdad -> MENOR EQUALS .)
    LPAREN          reduce using rule 40 (operador_igualdad -> MENOR EQUALS .)
    STRING          reduce using rule 40 (operador_igualdad -> MENOR EQUALS .)
    TRUE            reduce using rule 40 (operador_igualdad -> MENOR EQUALS .)
    FALSE           reduce using rule 40 (operador_igualdad -> MENOR EQUALS .)
    LCORC           reduce using rule 40 (operador_igualdad -> MENOR EQUALS .)


state 125

    (41) operador_igualdad -> NEGADOR EQUALS .

    ID              reduce using rule 41 (operador_igualdad -> NEGADOR EQUALS .)
    NUMBER          reduce using rule 41 (operador_igualdad -> NEGADOR EQUALS .)
    LEN             reduce using rule 41 (operador_igualdad -> NEGADOR EQUALS .)
    LPAREN          reduce using rule 41 (operador_igualdad -> NEGADOR EQUALS .)
    STRING          reduce using rule 41 (operador_igualdad -> NEGADOR EQUALS .)
    TRUE            reduce using rule 41 (operador_igualdad -> NEGADOR EQUALS .)
    FALSE           reduce using rule 41 (operador_igualdad -> NEGADOR EQUALS .)
    LCORC           reduce using rule 41 (operador_igualdad -> NEGADOR EQUALS .)


state 126

    (50) condiciones_expr_if_else -> LPAREN condiciones_expr_if_else RPAREN .

    DPUNTOS         reduce using rule 50 (condiciones_expr_if_else -> LPAREN condiciones_expr_if_else RPAREN .)
    RPAREN          reduce using rule 50 (condiciones_expr_if_else -> LPAREN condiciones_expr_if_else RPAREN .)


state 127

    (66) operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge . variables_operaciones_algebraica RPAREN
    (65) operaciones_algebraica -> variables_operaciones_algebraica operador_alge . variables_operaciones_algebraica
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC

    ID              shift and go to state 53
    NUMBER          shift and go to state 22
    LEN             shift and go to state 12
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15

    variables_operaciones_algebraica shift and go to state 134
    variable                       shift and go to state 91
    expr_funcion                   shift and go to state 74
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25

state 128

    (53) condiciones -> operaciones_algebraica operador_igualdad variable .

    AND             reduce using rule 53 (condiciones -> operaciones_algebraica operador_igualdad variable .)
    OR              reduce using rule 53 (condiciones -> operaciones_algebraica operador_igualdad variable .)
    MAYOR           reduce using rule 53 (condiciones -> operaciones_algebraica operador_igualdad variable .)
    MENOR           reduce using rule 53 (condiciones -> operaciones_algebraica operador_igualdad variable .)
    DEQUALS         reduce using rule 53 (condiciones -> operaciones_algebraica operador_igualdad variable .)
    NEGADOR         reduce using rule 53 (condiciones -> operaciones_algebraica operador_igualdad variable .)
    DPUNTOS         reduce using rule 53 (condiciones -> operaciones_algebraica operador_igualdad variable .)
    RPAREN          reduce using rule 53 (condiciones -> operaciones_algebraica operador_igualdad variable .)


state 129

    (55) def_for -> FOR variable IN RANGE . LPAREN params_for RPAREN DPUNTOS

    LPAREN          shift and go to state 135


state 130

    (13) params -> params COMA params .
    (13) params -> params . COMA params

  ! shift/reduce conflict for COMA resolved as shift
    RPAREN          reduce using rule 13 (params -> params COMA params .)
    RCORC           reduce using rule 13 (params -> params COMA params .)
    COMA            shift and go to state 111

  ! COMA            [ reduce using rule 13 (params -> params COMA params .) ]


state 131

    (81) call_method -> variable PUNTO funcion_lista LPAREN params . RPAREN
    (13) params -> params . COMA params

    RPAREN          shift and go to state 136
    COMA            shift and go to state 111


state 132

    (28) lista -> LCORC params COMA params RCORC .

    PUNTO           reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    COMA            reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    PLUS            reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    MINUS           reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    TIMES           reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    DIVIDE          reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    MOD             reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    EXP             reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    AND             reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    OR              reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    MAYOR           reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    MENOR           reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    DEQUALS         reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    NEGADOR         reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    DPUNTOS         reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    IN              reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    ID              reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    LEN             reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    DEF             reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    IF              reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    ELIF            reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    ELSE            reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    FOR             reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    RETURN          reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    NUMBER          reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    STRING          reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    TRUE            reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    FALSE           reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    LCORC           reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    $end            reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    RPAREN          reduce using rule 28 (lista -> LCORC params COMA params RCORC .)
    RCORC           reduce using rule 28 (lista -> LCORC params COMA params RCORC .)


state 133

    (66) operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica . RPAREN

    RPAREN          shift and go to state 137


state 134

    (66) operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica . RPAREN
    (65) operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .

    RPAREN          shift and go to state 137
    MAYOR           reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MENOR           reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    DEQUALS         reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    NEGADOR         reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    PLUS            reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MINUS           reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    TIMES           reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    DIVIDE          reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    MOD             reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)
    EXP             reduce using rule 65 (operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica .)


state 135

    (55) def_for -> FOR variable IN RANGE LPAREN . params_for RPAREN DPUNTOS
    (56) params_for -> . variable_for
    (57) params_for -> . variable_for COMA variable_for
    (58) params_for -> . variable_for COMA variable_for COMA variable_for
    (59) variable_for -> . variable
    (60) variable_for -> . operaciones_algebraica
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (65) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (66) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (67) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN

    ID              shift and go to state 71
    NUMBER          shift and go to state 22
    LPAREN          shift and go to state 45
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15
    LEN             shift and go to state 12

    variable                       shift and go to state 138
    params_for                     shift and go to state 139
    variable_for                   shift and go to state 140
    operaciones_algebraica         shift and go to state 141
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25
    variables_operaciones_algebraica shift and go to state 46
    expr_funcion                   shift and go to state 74

state 136

    (81) call_method -> variable PUNTO funcion_lista LPAREN params RPAREN .

    PUNTO           reduce using rule 81 (call_method -> variable PUNTO funcion_lista LPAREN params RPAREN .)
    ID              reduce using rule 81 (call_method -> variable PUNTO funcion_lista LPAREN params RPAREN .)
    LEN             reduce using rule 81 (call_method -> variable PUNTO funcion_lista LPAREN params RPAREN .)
    DEF             reduce using rule 81 (call_method -> variable PUNTO funcion_lista LPAREN params RPAREN .)
    IF              reduce using rule 81 (call_method -> variable PUNTO funcion_lista LPAREN params RPAREN .)
    ELIF            reduce using rule 81 (call_method -> variable PUNTO funcion_lista LPAREN params RPAREN .)
    ELSE            reduce using rule 81 (call_method -> variable PUNTO funcion_lista LPAREN params RPAREN .)
    FOR             reduce using rule 81 (call_method -> variable PUNTO funcion_lista LPAREN params RPAREN .)
    RETURN          reduce using rule 81 (call_method -> variable PUNTO funcion_lista LPAREN params RPAREN .)
    NUMBER          reduce using rule 81 (call_method -> variable PUNTO funcion_lista LPAREN params RPAREN .)
    STRING          reduce using rule 81 (call_method -> variable PUNTO funcion_lista LPAREN params RPAREN .)
    TRUE            reduce using rule 81 (call_method -> variable PUNTO funcion_lista LPAREN params RPAREN .)
    FALSE           reduce using rule 81 (call_method -> variable PUNTO funcion_lista LPAREN params RPAREN .)
    LCORC           reduce using rule 81 (call_method -> variable PUNTO funcion_lista LPAREN params RPAREN .)
    $end            reduce using rule 81 (call_method -> variable PUNTO funcion_lista LPAREN params RPAREN .)
    COMA            reduce using rule 81 (call_method -> variable PUNTO funcion_lista LPAREN params RPAREN .)
    RPAREN          reduce using rule 81 (call_method -> variable PUNTO funcion_lista LPAREN params RPAREN .)
    RCORC           reduce using rule 81 (call_method -> variable PUNTO funcion_lista LPAREN params RPAREN .)


state 137

    (66) operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .

    PLUS            reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    MINUS           reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    TIMES           reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    DIVIDE          reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    MOD             reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    EXP             reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    COMA            reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    MAYOR           reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    MENOR           reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    DEQUALS         reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    NEGADOR         reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    ID              reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    LEN             reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    DEF             reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    IF              reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    ELIF            reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    ELSE            reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    FOR             reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    RETURN          reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    NUMBER          reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    STRING          reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    TRUE            reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    FALSE           reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    LCORC           reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    $end            reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    RPAREN          reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)
    RCORC           reduce using rule 66 (operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN .)


state 138

    (59) variable_for -> variable .
    (68) variables_operaciones_algebraica -> variable .

    COMA            reduce using rule 59 (variable_for -> variable .)
    RPAREN          reduce using rule 59 (variable_for -> variable .)
    PLUS            reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    MINUS           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    TIMES           reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    DIVIDE          reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    MOD             reduce using rule 68 (variables_operaciones_algebraica -> variable .)
    EXP             reduce using rule 68 (variables_operaciones_algebraica -> variable .)


state 139

    (55) def_for -> FOR variable IN RANGE LPAREN params_for . RPAREN DPUNTOS

    RPAREN          shift and go to state 142


state 140

    (56) params_for -> variable_for .
    (57) params_for -> variable_for . COMA variable_for
    (58) params_for -> variable_for . COMA variable_for COMA variable_for

    RPAREN          reduce using rule 56 (params_for -> variable_for .)
    COMA            shift and go to state 143


state 141

    (60) variable_for -> operaciones_algebraica .
    (67) operaciones_algebraica -> operaciones_algebraica . operador_alge variables_operaciones_algebraica
    (70) operador_alge -> . PLUS
    (71) operador_alge -> . MINUS
    (72) operador_alge -> . TIMES
    (73) operador_alge -> . DIVIDE
    (74) operador_alge -> . MOD
    (75) operador_alge -> . EXP

    COMA            reduce using rule 60 (variable_for -> operaciones_algebraica .)
    RPAREN          reduce using rule 60 (variable_for -> operaciones_algebraica .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    TIMES           shift and go to state 86
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 88
    EXP             shift and go to state 89

    operador_alge                  shift and go to state 83

state 142

    (55) def_for -> FOR variable IN RANGE LPAREN params_for RPAREN . DPUNTOS

    DPUNTOS         shift and go to state 144


state 143

    (57) params_for -> variable_for COMA . variable_for
    (58) params_for -> variable_for COMA . variable_for COMA variable_for
    (59) variable_for -> . variable
    (60) variable_for -> . operaciones_algebraica
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (65) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (66) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (67) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN

    ID              shift and go to state 71
    NUMBER          shift and go to state 22
    LPAREN          shift and go to state 45
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15
    LEN             shift and go to state 12

    variable_for                   shift and go to state 145
    variable                       shift and go to state 138
    operaciones_algebraica         shift and go to state 141
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25
    variables_operaciones_algebraica shift and go to state 46
    expr_funcion                   shift and go to state 74

state 144

    (55) def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .

    ID              reduce using rule 55 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    LEN             reduce using rule 55 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    DEF             reduce using rule 55 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    IF              reduce using rule 55 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    ELIF            reduce using rule 55 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    ELSE            reduce using rule 55 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    FOR             reduce using rule 55 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    RETURN          reduce using rule 55 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    NUMBER          reduce using rule 55 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    STRING          reduce using rule 55 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    TRUE            reduce using rule 55 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    FALSE           reduce using rule 55 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    LCORC           reduce using rule 55 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)
    $end            reduce using rule 55 (def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS .)


state 145

    (57) params_for -> variable_for COMA variable_for .
    (58) params_for -> variable_for COMA variable_for . COMA variable_for

    RPAREN          reduce using rule 57 (params_for -> variable_for COMA variable_for .)
    COMA            shift and go to state 146


state 146

    (58) params_for -> variable_for COMA variable_for COMA . variable_for
    (59) variable_for -> . variable
    (60) variable_for -> . operaciones_algebraica
    (17) variable -> . ID
    (18) variable -> . expr_str
    (19) variable -> . NUMBER
    (20) variable -> . expr_float
    (21) variable -> . bool
    (22) variable -> . lista
    (65) operaciones_algebraica -> . variables_operaciones_algebraica operador_alge variables_operaciones_algebraica
    (66) operaciones_algebraica -> . LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN
    (67) operaciones_algebraica -> . operaciones_algebraica operador_alge variables_operaciones_algebraica
    (29) expr_str -> . STRING
    (30) expr_float -> . NUMBER PUNTO NUMBER
    (61) bool -> . TRUE
    (62) bool -> . FALSE
    (26) lista -> . ID LCORC variable RCORC
    (27) lista -> . ID LCORC operaciones_algebraica RCORC
    (28) lista -> . LCORC params COMA params RCORC
    (68) variables_operaciones_algebraica -> . variable
    (69) variables_operaciones_algebraica -> . expr_funcion
    (23) expr_funcion -> . ID LPAREN params RPAREN
    (24) expr_funcion -> . ID LPAREN RPAREN
    (25) expr_funcion -> . LEN LPAREN params RPAREN

    ID              shift and go to state 71
    NUMBER          shift and go to state 22
    LPAREN          shift and go to state 45
    STRING          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LCORC           shift and go to state 15
    LEN             shift and go to state 12

    variable_for                   shift and go to state 147
    variable                       shift and go to state 138
    operaciones_algebraica         shift and go to state 141
    expr_str                       shift and go to state 21
    expr_float                     shift and go to state 23
    bool                           shift and go to state 24
    lista                          shift and go to state 25
    variables_operaciones_algebraica shift and go to state 46
    expr_funcion                   shift and go to state 74

state 147

    (58) params_for -> variable_for COMA variable_for COMA variable_for .

    RPAREN          reduce using rule 58 (params_for -> variable_for COMA variable_for COMA variable_for .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for LEN in state 0 resolved as shift
WARNING: shift/reduce conflict for DEF in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 0 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 0 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 0 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 0 resolved as shift
WARNING: shift/reduce conflict for LCORC in state 0 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 22 resolved as shift
WARNING: shift/reduce conflict for LCORC in state 53 resolved as shift
WARNING: shift/reduce conflict for COMA in state 117 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 122 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 122 resolved as shift
WARNING: shift/reduce conflict for DEQUALS in state 122 resolved as shift
WARNING: shift/reduce conflict for NEGADOR in state 122 resolved as shift
WARNING: shift/reduce conflict for COMA in state 130 resolved as shift
