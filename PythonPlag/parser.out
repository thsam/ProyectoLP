Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ID

Grammar

Rule 0     S' -> expr_funcion
Rule 1     expr_funcion -> NAME LPAREN params RPAREN
Rule 2     expr_funcion -> NAME LPAREN RPAREN
Rule 3     params -> variable
Rule 4     params -> params COMA variable
Rule 5     params -> expr_funcion
Rule 6     variable -> NAME
Rule 7     variable -> expr_str
Rule 8     variable -> NUMBER
Rule 9     variable -> expr_float
Rule 10    variable -> bool
Rule 11    variable -> lista
Rule 12    lista -> NAME LCORC variable RCORC
Rule 13    lista -> NAME LCORC RCORC
Rule 14    lista -> NAME LCORC operaciones_algebraica RCORC
Rule 15    expr_str -> STRING
Rule 16    expr_float -> NUMBER PUNTO NUMBER
Rule 17    expr_def_funcion -> DEF expr_funcion DPUNTOS
Rule 18    linea_codigo -> expr_funcion
Rule 19    linea_codigo -> expr_asign
Rule 20    linea_codigo -> expr_if_else
Rule 21    linea_codigo -> def_for
Rule 22    linea_codigo -> expr_return
Rule 23    linea_codigo -> expr_def_funcion
Rule 24    linea_codigo -> COMMENT
Rule 25    expr_asign -> NAME EQUALS variable
Rule 26    expr_asign -> NAME EQUALS operaciones_algebraica
Rule 27    operador_igualdad -> MAYOR
Rule 28    operador_igualdad -> MENOR
Rule 29    operador_igualdad -> EQUALS EQUALS
Rule 30    operador_igualdad -> MAYOR EQUALS
Rule 31    operador_igualdad -> MENOR EQUALS
Rule 32    operador_igualdad -> NEGADOR EQUALS
Rule 33    expr_return -> RETURN variable
Rule 34    expr_return -> RETURN expr_funcion
Rule 35    expr_return -> RETURN operaciones_algebraica
Rule 36    expr_if_else -> IF condiciones_para_expr_if_else DPUNTOS
Rule 37    expr_if_else -> ELIF condiciones_para_expr_if_else DPUNTOS
Rule 38    expr_if_else -> ELSE DPUNTOS
Rule 39    condiciones -> variable
Rule 40    condiciones -> expr_funcion operador_igualdad variable
Rule 41    condiciones -> expr_funcion
Rule 42    condiciones -> expr_funcion operador_igualdad expr_funcion
Rule 43    condiciones -> variable operador_igualdad expr_funcion
Rule 44    condiciones -> operaciones_algebraica operador_igualdad expr_funcion
Rule 45    condiciones -> operaciones_algebraica operador_igualdad variable
Rule 46    condiciones -> variable operador_igualdad operaciones_algebraica
Rule 47    condiciones -> expr_funcion operador_igualdad operaciones_algebraica
Rule 48    condiciones_para_expr_if_else -> condiciones
Rule 49    condiciones_para_expr_if_else -> condiciones_para_expr_if_else and_or condiciones
Rule 50    def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS
Rule 51    params_for -> variable
Rule 52    params_for -> variable COMA variable
Rule 53    params_for -> variable COMA variable COMA variable
Rule 54    bool -> TRUE
Rule 55    bool -> FALSE
Rule 56    and_or -> AND
Rule 57    and_or -> OR
Rule 58    operaciones_algebraica -> variable operador_alge variable
Rule 59    operaciones_algebraica -> LPAREN variable operador_alge variable RPAREN
Rule 60    operaciones_algebraica -> operaciones_algebraica operador_alge variable
Rule 61    operaciones_algebraica -> variable operador_alge operaciones_algebraica
Rule 62    operador_alge -> PLUS
Rule 63    operador_alge -> MINUS
Rule 64    operador_alge -> TIMES
Rule 65    operador_alge -> DIVIDE
Rule 66    operador_alge -> EXP
Rule 67    operador_alge -> MOD
Rule 68    empty -> <empty>

Terminals, with rules where they appear

AND                  : 56
COMA                 : 4 52 53 53
COMMENT              : 24
DEF                  : 17
DIVIDE               : 65
DPUNTOS              : 17 36 37 38 50
ELIF                 : 37
ELSE                 : 38
EQUALS               : 25 26 29 29 30 31 32
EXP                  : 66
FALSE                : 55
FOR                  : 50
ID                   : 
IF                   : 36
IN                   : 50
LCORC                : 12 13 14
LPAREN               : 1 2 50 59
MAYOR                : 27 30
MENOR                : 28 31
MINUS                : 63
MOD                  : 67
NAME                 : 1 2 6 12 13 14 25 26
NEGADOR              : 32
NUMBER               : 8 16 16
OR                   : 57
PLUS                 : 62
PUNTO                : 16
RANGE                : 50
RCORC                : 12 13 14
RETURN               : 33 34 35
RPAREN               : 1 2 50 59
STRING               : 15
TIMES                : 64
TRUE                 : 54
error                : 

Nonterminals, with rules where they appear

and_or               : 49
bool                 : 10
condiciones          : 48 49
condiciones_para_expr_if_else : 36 37 49
def_for              : 21
empty                : 
expr_asign           : 19
expr_def_funcion     : 23
expr_float           : 9
expr_funcion         : 5 17 18 34 40 41 42 42 43 44 47 0
expr_if_else         : 20
expr_return          : 22
expr_str             : 7
linea_codigo         : 
lista                : 11
operaciones_algebraica : 14 26 35 44 45 46 47 60 61
operador_alge        : 58 59 60 61
operador_igualdad    : 40 42 43 44 45 46 47
params               : 1 4
params_for           : 50
variable             : 3 4 12 25 33 39 40 43 45 46 50 51 52 52 53 53 53 58 58 59 59 60 61

Parsing method: LALR

state 0

    (0) S' -> . expr_funcion
    (1) expr_funcion -> . NAME LPAREN params RPAREN
    (2) expr_funcion -> . NAME LPAREN RPAREN

    NAME            shift and go to state 2

    expr_funcion                   shift and go to state 1

state 1

    (0) S' -> expr_funcion .



state 2

    (1) expr_funcion -> NAME . LPAREN params RPAREN
    (2) expr_funcion -> NAME . LPAREN RPAREN

    LPAREN          shift and go to state 3


state 3

    (1) expr_funcion -> NAME LPAREN . params RPAREN
    (2) expr_funcion -> NAME LPAREN . RPAREN
    (3) params -> . variable
    (4) params -> . params COMA variable
    (5) params -> . expr_funcion
    (6) variable -> . NAME
    (7) variable -> . expr_str
    (8) variable -> . NUMBER
    (9) variable -> . expr_float
    (10) variable -> . bool
    (11) variable -> . lista
    (1) expr_funcion -> . NAME LPAREN params RPAREN
    (2) expr_funcion -> . NAME LPAREN RPAREN
    (15) expr_str -> . STRING
    (16) expr_float -> . NUMBER PUNTO NUMBER
    (54) bool -> . TRUE
    (55) bool -> . FALSE
    (12) lista -> . NAME LCORC variable RCORC
    (13) lista -> . NAME LCORC RCORC
    (14) lista -> . NAME LCORC operaciones_algebraica RCORC

    RPAREN          shift and go to state 6
    NAME            shift and go to state 4
    NUMBER          shift and go to state 10
    STRING          shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16

    params                         shift and go to state 5
    variable                       shift and go to state 7
    expr_funcion                   shift and go to state 8
    expr_str                       shift and go to state 9
    expr_float                     shift and go to state 11
    bool                           shift and go to state 12
    lista                          shift and go to state 13

state 4

    (6) variable -> NAME .
    (1) expr_funcion -> NAME . LPAREN params RPAREN
    (2) expr_funcion -> NAME . LPAREN RPAREN
    (12) lista -> NAME . LCORC variable RCORC
    (13) lista -> NAME . LCORC RCORC
    (14) lista -> NAME . LCORC operaciones_algebraica RCORC

    RPAREN          reduce using rule 6 (variable -> NAME .)
    COMA            reduce using rule 6 (variable -> NAME .)
    LPAREN          shift and go to state 3
    LCORC           shift and go to state 17


state 5

    (1) expr_funcion -> NAME LPAREN params . RPAREN
    (4) params -> params . COMA variable

    RPAREN          shift and go to state 18
    COMA            shift and go to state 19


state 6

    (2) expr_funcion -> NAME LPAREN RPAREN .

    $end            reduce using rule 2 (expr_funcion -> NAME LPAREN RPAREN .)
    RPAREN          reduce using rule 2 (expr_funcion -> NAME LPAREN RPAREN .)
    COMA            reduce using rule 2 (expr_funcion -> NAME LPAREN RPAREN .)


state 7

    (3) params -> variable .

    RPAREN          reduce using rule 3 (params -> variable .)
    COMA            reduce using rule 3 (params -> variable .)


state 8

    (5) params -> expr_funcion .

    RPAREN          reduce using rule 5 (params -> expr_funcion .)
    COMA            reduce using rule 5 (params -> expr_funcion .)


state 9

    (7) variable -> expr_str .

    RPAREN          reduce using rule 7 (variable -> expr_str .)
    COMA            reduce using rule 7 (variable -> expr_str .)
    RCORC           reduce using rule 7 (variable -> expr_str .)
    PLUS            reduce using rule 7 (variable -> expr_str .)
    MINUS           reduce using rule 7 (variable -> expr_str .)
    TIMES           reduce using rule 7 (variable -> expr_str .)
    DIVIDE          reduce using rule 7 (variable -> expr_str .)
    EXP             reduce using rule 7 (variable -> expr_str .)
    MOD             reduce using rule 7 (variable -> expr_str .)


state 10

    (8) variable -> NUMBER .
    (16) expr_float -> NUMBER . PUNTO NUMBER

    RPAREN          reduce using rule 8 (variable -> NUMBER .)
    COMA            reduce using rule 8 (variable -> NUMBER .)
    RCORC           reduce using rule 8 (variable -> NUMBER .)
    PLUS            reduce using rule 8 (variable -> NUMBER .)
    MINUS           reduce using rule 8 (variable -> NUMBER .)
    TIMES           reduce using rule 8 (variable -> NUMBER .)
    DIVIDE          reduce using rule 8 (variable -> NUMBER .)
    EXP             reduce using rule 8 (variable -> NUMBER .)
    MOD             reduce using rule 8 (variable -> NUMBER .)
    PUNTO           shift and go to state 20


state 11

    (9) variable -> expr_float .

    RPAREN          reduce using rule 9 (variable -> expr_float .)
    COMA            reduce using rule 9 (variable -> expr_float .)
    RCORC           reduce using rule 9 (variable -> expr_float .)
    PLUS            reduce using rule 9 (variable -> expr_float .)
    MINUS           reduce using rule 9 (variable -> expr_float .)
    TIMES           reduce using rule 9 (variable -> expr_float .)
    DIVIDE          reduce using rule 9 (variable -> expr_float .)
    EXP             reduce using rule 9 (variable -> expr_float .)
    MOD             reduce using rule 9 (variable -> expr_float .)


state 12

    (10) variable -> bool .

    RPAREN          reduce using rule 10 (variable -> bool .)
    COMA            reduce using rule 10 (variable -> bool .)
    RCORC           reduce using rule 10 (variable -> bool .)
    PLUS            reduce using rule 10 (variable -> bool .)
    MINUS           reduce using rule 10 (variable -> bool .)
    TIMES           reduce using rule 10 (variable -> bool .)
    DIVIDE          reduce using rule 10 (variable -> bool .)
    EXP             reduce using rule 10 (variable -> bool .)
    MOD             reduce using rule 10 (variable -> bool .)


state 13

    (11) variable -> lista .

    RPAREN          reduce using rule 11 (variable -> lista .)
    COMA            reduce using rule 11 (variable -> lista .)
    RCORC           reduce using rule 11 (variable -> lista .)
    PLUS            reduce using rule 11 (variable -> lista .)
    MINUS           reduce using rule 11 (variable -> lista .)
    TIMES           reduce using rule 11 (variable -> lista .)
    DIVIDE          reduce using rule 11 (variable -> lista .)
    EXP             reduce using rule 11 (variable -> lista .)
    MOD             reduce using rule 11 (variable -> lista .)


state 14

    (15) expr_str -> STRING .

    RPAREN          reduce using rule 15 (expr_str -> STRING .)
    COMA            reduce using rule 15 (expr_str -> STRING .)
    RCORC           reduce using rule 15 (expr_str -> STRING .)
    PLUS            reduce using rule 15 (expr_str -> STRING .)
    MINUS           reduce using rule 15 (expr_str -> STRING .)
    TIMES           reduce using rule 15 (expr_str -> STRING .)
    DIVIDE          reduce using rule 15 (expr_str -> STRING .)
    EXP             reduce using rule 15 (expr_str -> STRING .)
    MOD             reduce using rule 15 (expr_str -> STRING .)


state 15

    (54) bool -> TRUE .

    RPAREN          reduce using rule 54 (bool -> TRUE .)
    COMA            reduce using rule 54 (bool -> TRUE .)
    RCORC           reduce using rule 54 (bool -> TRUE .)
    PLUS            reduce using rule 54 (bool -> TRUE .)
    MINUS           reduce using rule 54 (bool -> TRUE .)
    TIMES           reduce using rule 54 (bool -> TRUE .)
    DIVIDE          reduce using rule 54 (bool -> TRUE .)
    EXP             reduce using rule 54 (bool -> TRUE .)
    MOD             reduce using rule 54 (bool -> TRUE .)


state 16

    (55) bool -> FALSE .

    RPAREN          reduce using rule 55 (bool -> FALSE .)
    COMA            reduce using rule 55 (bool -> FALSE .)
    RCORC           reduce using rule 55 (bool -> FALSE .)
    PLUS            reduce using rule 55 (bool -> FALSE .)
    MINUS           reduce using rule 55 (bool -> FALSE .)
    TIMES           reduce using rule 55 (bool -> FALSE .)
    DIVIDE          reduce using rule 55 (bool -> FALSE .)
    EXP             reduce using rule 55 (bool -> FALSE .)
    MOD             reduce using rule 55 (bool -> FALSE .)


state 17

    (12) lista -> NAME LCORC . variable RCORC
    (13) lista -> NAME LCORC . RCORC
    (14) lista -> NAME LCORC . operaciones_algebraica RCORC
    (6) variable -> . NAME
    (7) variable -> . expr_str
    (8) variable -> . NUMBER
    (9) variable -> . expr_float
    (10) variable -> . bool
    (11) variable -> . lista
    (58) operaciones_algebraica -> . variable operador_alge variable
    (59) operaciones_algebraica -> . LPAREN variable operador_alge variable RPAREN
    (60) operaciones_algebraica -> . operaciones_algebraica operador_alge variable
    (61) operaciones_algebraica -> . variable operador_alge operaciones_algebraica
    (15) expr_str -> . STRING
    (16) expr_float -> . NUMBER PUNTO NUMBER
    (54) bool -> . TRUE
    (55) bool -> . FALSE
    (12) lista -> . NAME LCORC variable RCORC
    (13) lista -> . NAME LCORC RCORC
    (14) lista -> . NAME LCORC operaciones_algebraica RCORC

    RCORC           shift and go to state 23
    NAME            shift and go to state 21
    NUMBER          shift and go to state 10
    LPAREN          shift and go to state 25
    STRING          shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16

    variable                       shift and go to state 22
    operaciones_algebraica         shift and go to state 24
    expr_str                       shift and go to state 9
    expr_float                     shift and go to state 11
    bool                           shift and go to state 12
    lista                          shift and go to state 13

state 18

    (1) expr_funcion -> NAME LPAREN params RPAREN .

    $end            reduce using rule 1 (expr_funcion -> NAME LPAREN params RPAREN .)
    RPAREN          reduce using rule 1 (expr_funcion -> NAME LPAREN params RPAREN .)
    COMA            reduce using rule 1 (expr_funcion -> NAME LPAREN params RPAREN .)


state 19

    (4) params -> params COMA . variable
    (6) variable -> . NAME
    (7) variable -> . expr_str
    (8) variable -> . NUMBER
    (9) variable -> . expr_float
    (10) variable -> . bool
    (11) variable -> . lista
    (15) expr_str -> . STRING
    (16) expr_float -> . NUMBER PUNTO NUMBER
    (54) bool -> . TRUE
    (55) bool -> . FALSE
    (12) lista -> . NAME LCORC variable RCORC
    (13) lista -> . NAME LCORC RCORC
    (14) lista -> . NAME LCORC operaciones_algebraica RCORC

    NAME            shift and go to state 21
    NUMBER          shift and go to state 10
    STRING          shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16

    variable                       shift and go to state 26
    expr_str                       shift and go to state 9
    expr_float                     shift and go to state 11
    bool                           shift and go to state 12
    lista                          shift and go to state 13

state 20

    (16) expr_float -> NUMBER PUNTO . NUMBER

    NUMBER          shift and go to state 27


state 21

    (6) variable -> NAME .
    (12) lista -> NAME . LCORC variable RCORC
    (13) lista -> NAME . LCORC RCORC
    (14) lista -> NAME . LCORC operaciones_algebraica RCORC

    RCORC           reduce using rule 6 (variable -> NAME .)
    PLUS            reduce using rule 6 (variable -> NAME .)
    MINUS           reduce using rule 6 (variable -> NAME .)
    TIMES           reduce using rule 6 (variable -> NAME .)
    DIVIDE          reduce using rule 6 (variable -> NAME .)
    EXP             reduce using rule 6 (variable -> NAME .)
    MOD             reduce using rule 6 (variable -> NAME .)
    RPAREN          reduce using rule 6 (variable -> NAME .)
    COMA            reduce using rule 6 (variable -> NAME .)
    LCORC           shift and go to state 17


state 22

    (12) lista -> NAME LCORC variable . RCORC
    (58) operaciones_algebraica -> variable . operador_alge variable
    (61) operaciones_algebraica -> variable . operador_alge operaciones_algebraica
    (62) operador_alge -> . PLUS
    (63) operador_alge -> . MINUS
    (64) operador_alge -> . TIMES
    (65) operador_alge -> . DIVIDE
    (66) operador_alge -> . EXP
    (67) operador_alge -> . MOD

    RCORC           shift and go to state 28
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EXP             shift and go to state 34
    MOD             shift and go to state 35

    operador_alge                  shift and go to state 29

state 23

    (13) lista -> NAME LCORC RCORC .

    RPAREN          reduce using rule 13 (lista -> NAME LCORC RCORC .)
    COMA            reduce using rule 13 (lista -> NAME LCORC RCORC .)
    RCORC           reduce using rule 13 (lista -> NAME LCORC RCORC .)
    PLUS            reduce using rule 13 (lista -> NAME LCORC RCORC .)
    MINUS           reduce using rule 13 (lista -> NAME LCORC RCORC .)
    TIMES           reduce using rule 13 (lista -> NAME LCORC RCORC .)
    DIVIDE          reduce using rule 13 (lista -> NAME LCORC RCORC .)
    EXP             reduce using rule 13 (lista -> NAME LCORC RCORC .)
    MOD             reduce using rule 13 (lista -> NAME LCORC RCORC .)


state 24

    (14) lista -> NAME LCORC operaciones_algebraica . RCORC
    (60) operaciones_algebraica -> operaciones_algebraica . operador_alge variable
    (62) operador_alge -> . PLUS
    (63) operador_alge -> . MINUS
    (64) operador_alge -> . TIMES
    (65) operador_alge -> . DIVIDE
    (66) operador_alge -> . EXP
    (67) operador_alge -> . MOD

    RCORC           shift and go to state 36
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EXP             shift and go to state 34
    MOD             shift and go to state 35

    operador_alge                  shift and go to state 37

state 25

    (59) operaciones_algebraica -> LPAREN . variable operador_alge variable RPAREN
    (6) variable -> . NAME
    (7) variable -> . expr_str
    (8) variable -> . NUMBER
    (9) variable -> . expr_float
    (10) variable -> . bool
    (11) variable -> . lista
    (15) expr_str -> . STRING
    (16) expr_float -> . NUMBER PUNTO NUMBER
    (54) bool -> . TRUE
    (55) bool -> . FALSE
    (12) lista -> . NAME LCORC variable RCORC
    (13) lista -> . NAME LCORC RCORC
    (14) lista -> . NAME LCORC operaciones_algebraica RCORC

    NAME            shift and go to state 21
    NUMBER          shift and go to state 10
    STRING          shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16

    variable                       shift and go to state 38
    expr_str                       shift and go to state 9
    expr_float                     shift and go to state 11
    bool                           shift and go to state 12
    lista                          shift and go to state 13

state 26

    (4) params -> params COMA variable .

    RPAREN          reduce using rule 4 (params -> params COMA variable .)
    COMA            reduce using rule 4 (params -> params COMA variable .)


state 27

    (16) expr_float -> NUMBER PUNTO NUMBER .

    RPAREN          reduce using rule 16 (expr_float -> NUMBER PUNTO NUMBER .)
    COMA            reduce using rule 16 (expr_float -> NUMBER PUNTO NUMBER .)
    RCORC           reduce using rule 16 (expr_float -> NUMBER PUNTO NUMBER .)
    PLUS            reduce using rule 16 (expr_float -> NUMBER PUNTO NUMBER .)
    MINUS           reduce using rule 16 (expr_float -> NUMBER PUNTO NUMBER .)
    TIMES           reduce using rule 16 (expr_float -> NUMBER PUNTO NUMBER .)
    DIVIDE          reduce using rule 16 (expr_float -> NUMBER PUNTO NUMBER .)
    EXP             reduce using rule 16 (expr_float -> NUMBER PUNTO NUMBER .)
    MOD             reduce using rule 16 (expr_float -> NUMBER PUNTO NUMBER .)


state 28

    (12) lista -> NAME LCORC variable RCORC .

    RPAREN          reduce using rule 12 (lista -> NAME LCORC variable RCORC .)
    COMA            reduce using rule 12 (lista -> NAME LCORC variable RCORC .)
    RCORC           reduce using rule 12 (lista -> NAME LCORC variable RCORC .)
    PLUS            reduce using rule 12 (lista -> NAME LCORC variable RCORC .)
    MINUS           reduce using rule 12 (lista -> NAME LCORC variable RCORC .)
    TIMES           reduce using rule 12 (lista -> NAME LCORC variable RCORC .)
    DIVIDE          reduce using rule 12 (lista -> NAME LCORC variable RCORC .)
    EXP             reduce using rule 12 (lista -> NAME LCORC variable RCORC .)
    MOD             reduce using rule 12 (lista -> NAME LCORC variable RCORC .)


state 29

    (58) operaciones_algebraica -> variable operador_alge . variable
    (61) operaciones_algebraica -> variable operador_alge . operaciones_algebraica
    (6) variable -> . NAME
    (7) variable -> . expr_str
    (8) variable -> . NUMBER
    (9) variable -> . expr_float
    (10) variable -> . bool
    (11) variable -> . lista
    (58) operaciones_algebraica -> . variable operador_alge variable
    (59) operaciones_algebraica -> . LPAREN variable operador_alge variable RPAREN
    (60) operaciones_algebraica -> . operaciones_algebraica operador_alge variable
    (61) operaciones_algebraica -> . variable operador_alge operaciones_algebraica
    (15) expr_str -> . STRING
    (16) expr_float -> . NUMBER PUNTO NUMBER
    (54) bool -> . TRUE
    (55) bool -> . FALSE
    (12) lista -> . NAME LCORC variable RCORC
    (13) lista -> . NAME LCORC RCORC
    (14) lista -> . NAME LCORC operaciones_algebraica RCORC

    NAME            shift and go to state 21
    NUMBER          shift and go to state 10
    LPAREN          shift and go to state 25
    STRING          shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16

    variable                       shift and go to state 39
    operaciones_algebraica         shift and go to state 40
    expr_str                       shift and go to state 9
    expr_float                     shift and go to state 11
    bool                           shift and go to state 12
    lista                          shift and go to state 13

state 30

    (62) operador_alge -> PLUS .

    NAME            reduce using rule 62 (operador_alge -> PLUS .)
    NUMBER          reduce using rule 62 (operador_alge -> PLUS .)
    LPAREN          reduce using rule 62 (operador_alge -> PLUS .)
    STRING          reduce using rule 62 (operador_alge -> PLUS .)
    TRUE            reduce using rule 62 (operador_alge -> PLUS .)
    FALSE           reduce using rule 62 (operador_alge -> PLUS .)


state 31

    (63) operador_alge -> MINUS .

    NAME            reduce using rule 63 (operador_alge -> MINUS .)
    NUMBER          reduce using rule 63 (operador_alge -> MINUS .)
    LPAREN          reduce using rule 63 (operador_alge -> MINUS .)
    STRING          reduce using rule 63 (operador_alge -> MINUS .)
    TRUE            reduce using rule 63 (operador_alge -> MINUS .)
    FALSE           reduce using rule 63 (operador_alge -> MINUS .)


state 32

    (64) operador_alge -> TIMES .

    NAME            reduce using rule 64 (operador_alge -> TIMES .)
    NUMBER          reduce using rule 64 (operador_alge -> TIMES .)
    LPAREN          reduce using rule 64 (operador_alge -> TIMES .)
    STRING          reduce using rule 64 (operador_alge -> TIMES .)
    TRUE            reduce using rule 64 (operador_alge -> TIMES .)
    FALSE           reduce using rule 64 (operador_alge -> TIMES .)


state 33

    (65) operador_alge -> DIVIDE .

    NAME            reduce using rule 65 (operador_alge -> DIVIDE .)
    NUMBER          reduce using rule 65 (operador_alge -> DIVIDE .)
    LPAREN          reduce using rule 65 (operador_alge -> DIVIDE .)
    STRING          reduce using rule 65 (operador_alge -> DIVIDE .)
    TRUE            reduce using rule 65 (operador_alge -> DIVIDE .)
    FALSE           reduce using rule 65 (operador_alge -> DIVIDE .)


state 34

    (66) operador_alge -> EXP .

    NAME            reduce using rule 66 (operador_alge -> EXP .)
    NUMBER          reduce using rule 66 (operador_alge -> EXP .)
    LPAREN          reduce using rule 66 (operador_alge -> EXP .)
    STRING          reduce using rule 66 (operador_alge -> EXP .)
    TRUE            reduce using rule 66 (operador_alge -> EXP .)
    FALSE           reduce using rule 66 (operador_alge -> EXP .)


state 35

    (67) operador_alge -> MOD .

    NAME            reduce using rule 67 (operador_alge -> MOD .)
    NUMBER          reduce using rule 67 (operador_alge -> MOD .)
    LPAREN          reduce using rule 67 (operador_alge -> MOD .)
    STRING          reduce using rule 67 (operador_alge -> MOD .)
    TRUE            reduce using rule 67 (operador_alge -> MOD .)
    FALSE           reduce using rule 67 (operador_alge -> MOD .)


state 36

    (14) lista -> NAME LCORC operaciones_algebraica RCORC .

    RPAREN          reduce using rule 14 (lista -> NAME LCORC operaciones_algebraica RCORC .)
    COMA            reduce using rule 14 (lista -> NAME LCORC operaciones_algebraica RCORC .)
    RCORC           reduce using rule 14 (lista -> NAME LCORC operaciones_algebraica RCORC .)
    PLUS            reduce using rule 14 (lista -> NAME LCORC operaciones_algebraica RCORC .)
    MINUS           reduce using rule 14 (lista -> NAME LCORC operaciones_algebraica RCORC .)
    TIMES           reduce using rule 14 (lista -> NAME LCORC operaciones_algebraica RCORC .)
    DIVIDE          reduce using rule 14 (lista -> NAME LCORC operaciones_algebraica RCORC .)
    EXP             reduce using rule 14 (lista -> NAME LCORC operaciones_algebraica RCORC .)
    MOD             reduce using rule 14 (lista -> NAME LCORC operaciones_algebraica RCORC .)


state 37

    (60) operaciones_algebraica -> operaciones_algebraica operador_alge . variable
    (6) variable -> . NAME
    (7) variable -> . expr_str
    (8) variable -> . NUMBER
    (9) variable -> . expr_float
    (10) variable -> . bool
    (11) variable -> . lista
    (15) expr_str -> . STRING
    (16) expr_float -> . NUMBER PUNTO NUMBER
    (54) bool -> . TRUE
    (55) bool -> . FALSE
    (12) lista -> . NAME LCORC variable RCORC
    (13) lista -> . NAME LCORC RCORC
    (14) lista -> . NAME LCORC operaciones_algebraica RCORC

    NAME            shift and go to state 21
    NUMBER          shift and go to state 10
    STRING          shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16

    variable                       shift and go to state 41
    expr_str                       shift and go to state 9
    expr_float                     shift and go to state 11
    bool                           shift and go to state 12
    lista                          shift and go to state 13

state 38

    (59) operaciones_algebraica -> LPAREN variable . operador_alge variable RPAREN
    (62) operador_alge -> . PLUS
    (63) operador_alge -> . MINUS
    (64) operador_alge -> . TIMES
    (65) operador_alge -> . DIVIDE
    (66) operador_alge -> . EXP
    (67) operador_alge -> . MOD

    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EXP             shift and go to state 34
    MOD             shift and go to state 35

    operador_alge                  shift and go to state 42

state 39

    (58) operaciones_algebraica -> variable operador_alge variable .
    (58) operaciones_algebraica -> variable . operador_alge variable
    (61) operaciones_algebraica -> variable . operador_alge operaciones_algebraica
    (62) operador_alge -> . PLUS
    (63) operador_alge -> . MINUS
    (64) operador_alge -> . TIMES
    (65) operador_alge -> . DIVIDE
    (66) operador_alge -> . EXP
    (67) operador_alge -> . MOD

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    RCORC           reduce using rule 58 (operaciones_algebraica -> variable operador_alge variable .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EXP             shift and go to state 34
    MOD             shift and go to state 35

  ! PLUS            [ reduce using rule 58 (operaciones_algebraica -> variable operador_alge variable .) ]
  ! MINUS           [ reduce using rule 58 (operaciones_algebraica -> variable operador_alge variable .) ]
  ! TIMES           [ reduce using rule 58 (operaciones_algebraica -> variable operador_alge variable .) ]
  ! DIVIDE          [ reduce using rule 58 (operaciones_algebraica -> variable operador_alge variable .) ]
  ! EXP             [ reduce using rule 58 (operaciones_algebraica -> variable operador_alge variable .) ]
  ! MOD             [ reduce using rule 58 (operaciones_algebraica -> variable operador_alge variable .) ]

    operador_alge                  shift and go to state 29

state 40

    (61) operaciones_algebraica -> variable operador_alge operaciones_algebraica .
    (60) operaciones_algebraica -> operaciones_algebraica . operador_alge variable
    (62) operador_alge -> . PLUS
    (63) operador_alge -> . MINUS
    (64) operador_alge -> . TIMES
    (65) operador_alge -> . DIVIDE
    (66) operador_alge -> . EXP
    (67) operador_alge -> . MOD

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    RCORC           reduce using rule 61 (operaciones_algebraica -> variable operador_alge operaciones_algebraica .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EXP             shift and go to state 34
    MOD             shift and go to state 35

  ! PLUS            [ reduce using rule 61 (operaciones_algebraica -> variable operador_alge operaciones_algebraica .) ]
  ! MINUS           [ reduce using rule 61 (operaciones_algebraica -> variable operador_alge operaciones_algebraica .) ]
  ! TIMES           [ reduce using rule 61 (operaciones_algebraica -> variable operador_alge operaciones_algebraica .) ]
  ! DIVIDE          [ reduce using rule 61 (operaciones_algebraica -> variable operador_alge operaciones_algebraica .) ]
  ! EXP             [ reduce using rule 61 (operaciones_algebraica -> variable operador_alge operaciones_algebraica .) ]
  ! MOD             [ reduce using rule 61 (operaciones_algebraica -> variable operador_alge operaciones_algebraica .) ]

    operador_alge                  shift and go to state 37

state 41

    (60) operaciones_algebraica -> operaciones_algebraica operador_alge variable .

    RCORC           reduce using rule 60 (operaciones_algebraica -> operaciones_algebraica operador_alge variable .)
    PLUS            reduce using rule 60 (operaciones_algebraica -> operaciones_algebraica operador_alge variable .)
    MINUS           reduce using rule 60 (operaciones_algebraica -> operaciones_algebraica operador_alge variable .)
    TIMES           reduce using rule 60 (operaciones_algebraica -> operaciones_algebraica operador_alge variable .)
    DIVIDE          reduce using rule 60 (operaciones_algebraica -> operaciones_algebraica operador_alge variable .)
    EXP             reduce using rule 60 (operaciones_algebraica -> operaciones_algebraica operador_alge variable .)
    MOD             reduce using rule 60 (operaciones_algebraica -> operaciones_algebraica operador_alge variable .)


state 42

    (59) operaciones_algebraica -> LPAREN variable operador_alge . variable RPAREN
    (6) variable -> . NAME
    (7) variable -> . expr_str
    (8) variable -> . NUMBER
    (9) variable -> . expr_float
    (10) variable -> . bool
    (11) variable -> . lista
    (15) expr_str -> . STRING
    (16) expr_float -> . NUMBER PUNTO NUMBER
    (54) bool -> . TRUE
    (55) bool -> . FALSE
    (12) lista -> . NAME LCORC variable RCORC
    (13) lista -> . NAME LCORC RCORC
    (14) lista -> . NAME LCORC operaciones_algebraica RCORC

    NAME            shift and go to state 21
    NUMBER          shift and go to state 10
    STRING          shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16

    variable                       shift and go to state 43
    expr_str                       shift and go to state 9
    expr_float                     shift and go to state 11
    bool                           shift and go to state 12
    lista                          shift and go to state 13

state 43

    (59) operaciones_algebraica -> LPAREN variable operador_alge variable . RPAREN

    RPAREN          shift and go to state 44


state 44

    (59) operaciones_algebraica -> LPAREN variable operador_alge variable RPAREN .

    RCORC           reduce using rule 59 (operaciones_algebraica -> LPAREN variable operador_alge variable RPAREN .)
    PLUS            reduce using rule 59 (operaciones_algebraica -> LPAREN variable operador_alge variable RPAREN .)
    MINUS           reduce using rule 59 (operaciones_algebraica -> LPAREN variable operador_alge variable RPAREN .)
    TIMES           reduce using rule 59 (operaciones_algebraica -> LPAREN variable operador_alge variable RPAREN .)
    DIVIDE          reduce using rule 59 (operaciones_algebraica -> LPAREN variable operador_alge variable RPAREN .)
    EXP             reduce using rule 59 (operaciones_algebraica -> LPAREN variable operador_alge variable RPAREN .)
    MOD             reduce using rule 59 (operaciones_algebraica -> LPAREN variable operador_alge variable RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 39 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 39 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 39 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 39 resolved as shift
WARNING: shift/reduce conflict for EXP in state 39 resolved as shift
WARNING: shift/reduce conflict for MOD in state 39 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 40 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 40 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 40 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 40 resolved as shift
WARNING: shift/reduce conflict for EXP in state 40 resolved as shift
WARNING: shift/reduce conflict for MOD in state 40 resolved as shift
