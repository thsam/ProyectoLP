
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocMENORMAYORDEQUALSleftPLUSMINUSleftTIMESDIVIDEleftLPARENRPARENleftMODEXPleftLCORCRCORCAND APPEND COMA COMMENT DEF DEQUALS DIVIDE DPUNTOS ELIF ELSE EQUALS EXP FALSE FOR ID IF IN INDEX LCORC LEN LPAREN MAYOR MENOR MINUS MOD NEGADOR NUMBER OR PLUS POP PUNTO RANGE RCORC RETURN RPAREN STRING TIMES TRUEbloque_codigo : empty\n                     | linea_codigo empty\n                     | bloque_codigo linea_codigo emptylinea_codigo : expr_funcion\n\t\t\t\t\t| expr_def_funcion\n\t\t\t\t\t| expr_asign\n\t\t\t\t\t| expr_if_else\n\t\t\t\t\t| def_for\n\t\t\t\t\t| expr_return\n\t\t\t\t\t| call_methodexpr_def_funcion : DEF expr_funcion DPUNTOSparams : variable\n\t\t\t  | params COMA params\n\t\t\t  | expr_funcion\n\t\t\t  | expr_asign\n\t\t\t  | operaciones_algebraicavariable : ID\n                | expr_str\n                | NUMBER\n                | expr_float\n                | bool\n                | listaexpr_funcion : ID LPAREN params RPAREN\n                    | ID LPAREN RPAREN\n                    | LEN LPAREN params RPARENlista : ID LCORC variable RCORC\n             | ID LCORC operaciones_algebraica RCORC\n             | LCORC params COMA params RCORCexpr_str : STRINGexpr_float : NUMBER PUNTO NUMBERexpr_asign : ID EQUALS variable\n                  | ID EQUALS expr_funcion\n                  | ID EQUALS operaciones_algebraica\n                  | ID EQUALS LCORC RCORC\n                  | ID EQUALS call_methodoperador_igualdad : MAYOR\n                         | MENOR\n                         | DEQUALS\n                         | MAYOR EQUALS\n                         | MENOR EQUALS\n                         | NEGADOR EQUALSexpr_return : RETURN variable\n                   | RETURN expr_funcion\n                   | RETURN operaciones_algebraica expr_if_else : IF condiciones_expr_if_else DPUNTOS\n                     | ELIF condiciones_expr_if_else DPUNTOS\n                     | ELSE DPUNTOScondiciones_expr_if_else : condiciones\n                                | condiciones and_or condiciones_expr_if_else\n                                | LPAREN condiciones_expr_if_else RPARENcondiciones : variable\n                   | expr_funcion\n                   | operaciones_algebraica operador_igualdad variable\n                   | condiciones operador_igualdad condicionesdef_for : FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOSparams_for :\tvariable_for\n                  | variable_for COMA variable_for\n                  | variable_for  COMA variable_for COMA variable_forvariable_for : variable\n                    | operaciones_algebraicabool : TRUE\n\t        | FALSE and_or : AND\n               | ORoperaciones_algebraica : variables_operaciones_algebraica operador_alge variables_operaciones_algebraica\n                              | LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN\n                              | operaciones_algebraica operador_alge variables_operaciones_algebraicavariables_operaciones_algebraica : variable\n                                         | expr_funcionoperador_alge : PLUS\n\t                 | MINUS\n\t                 | TIMES\n\t                 | DIVIDE\n\t                 | MOD\n\t                 | EXP funcion_lista : APPEND\n                      | INDEX\n                      | POP\n\n    call_method : variable PUNTO expr_funcion\n                   | call_method PUNTO expr_funcion\n                   | variable PUNTO funcion_lista LPAREN params RPARENempty : '
    
_lr_action_items = {'ID':([0,1,2,3,4,5,6,7,8,9,10,13,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,45,49,53,55,58,59,60,62,63,65,66,67,68,69,70,74,76,77,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,106,107,109,110,111,112,113,114,115,116,118,119,120,123,124,125,127,132,135,136,137,143,144,146,],[11,11,-1,-82,-4,-5,-6,-7,-8,-9,-10,37,44,53,53,57,53,-18,-19,-20,-21,-22,-29,-61,-62,-82,-2,37,44,53,71,44,37,53,53,-17,-47,-42,-43,-44,-3,-80,-24,-31,-32,-33,44,-35,-69,-11,-79,44,53,-70,-71,-72,-73,-74,-75,-68,53,-45,53,53,-63,-64,-36,-37,-38,57,-46,-30,-23,44,-34,-26,-27,-25,44,-67,53,-65,-39,-40,-41,53,-28,71,-81,-66,71,-55,71,]),'LEN':([0,1,2,3,4,5,6,7,8,9,10,13,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,45,49,53,55,58,59,60,62,63,65,66,67,68,69,70,74,76,77,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,107,109,110,111,112,113,114,115,116,118,119,120,123,124,125,127,132,135,136,137,143,144,146,],[12,12,-1,-82,-4,-5,-6,-7,-8,-9,-10,12,12,12,12,12,-18,-19,-20,-21,-22,-29,-61,-62,-82,-2,12,12,12,12,12,12,12,12,-17,-47,-42,-43,-44,-3,-80,-24,-31,-32,-33,12,-35,-69,-11,-79,12,12,-70,-71,-72,-73,-74,-75,-68,12,-45,12,12,-63,-64,-36,-37,-38,-46,-30,-23,12,-34,-26,-27,-25,12,-67,12,-65,-39,-40,-41,12,-28,12,-81,-66,12,-55,12,]),'DEF':([0,1,2,3,4,5,6,7,8,9,10,21,22,23,24,25,26,27,28,29,30,53,55,58,59,60,62,63,65,66,67,68,70,74,76,77,91,93,107,109,110,112,113,114,115,118,120,132,136,137,144,],[13,13,-1,-82,-4,-5,-6,-7,-8,-9,-10,-18,-19,-20,-21,-22,-29,-61,-62,-82,-2,-17,-47,-42,-43,-44,-3,-80,-24,-31,-32,-33,-35,-69,-11,-79,-68,-45,-46,-30,-23,-34,-26,-27,-25,-67,-65,-28,-81,-66,-55,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,21,22,23,24,25,26,27,28,29,30,53,55,58,59,60,62,63,65,66,67,68,70,74,76,77,91,93,107,109,110,112,113,114,115,118,120,132,136,137,144,],[16,16,-1,-82,-4,-5,-6,-7,-8,-9,-10,-18,-19,-20,-21,-22,-29,-61,-62,-82,-2,-17,-47,-42,-43,-44,-3,-80,-24,-31,-32,-33,-35,-69,-11,-79,-68,-45,-46,-30,-23,-34,-26,-27,-25,-67,-65,-28,-81,-66,-55,]),'ELIF':([0,1,2,3,4,5,6,7,8,9,10,21,22,23,24,25,26,27,28,29,30,53,55,58,59,60,62,63,65,66,67,68,70,74,76,77,91,93,107,109,110,112,113,114,115,118,120,132,136,137,144,],[17,17,-1,-82,-4,-5,-6,-7,-8,-9,-10,-18,-19,-20,-21,-22,-29,-61,-62,-82,-2,-17,-47,-42,-43,-44,-3,-80,-24,-31,-32,-33,-35,-69,-11,-79,-68,-45,-46,-30,-23,-34,-26,-27,-25,-67,-65,-28,-81,-66,-55,]),'ELSE':([0,1,2,3,4,5,6,7,8,9,10,21,22,23,24,25,26,27,28,29,30,53,55,58,59,60,62,63,65,66,67,68,70,74,76,77,91,93,107,109,110,112,113,114,115,118,120,132,136,137,144,],[18,18,-1,-82,-4,-5,-6,-7,-8,-9,-10,-18,-19,-20,-21,-22,-29,-61,-62,-82,-2,-17,-47,-42,-43,-44,-3,-80,-24,-31,-32,-33,-35,-69,-11,-79,-68,-45,-46,-30,-23,-34,-26,-27,-25,-67,-65,-28,-81,-66,-55,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,21,22,23,24,25,26,27,28,29,30,53,55,58,59,60,62,63,65,66,67,68,70,74,76,77,91,93,107,109,110,112,113,114,115,118,120,132,136,137,144,],[19,19,-1,-82,-4,-5,-6,-7,-8,-9,-10,-18,-19,-20,-21,-22,-29,-61,-62,-82,-2,-17,-47,-42,-43,-44,-3,-80,-24,-31,-32,-33,-35,-69,-11,-79,-68,-45,-46,-30,-23,-34,-26,-27,-25,-67,-65,-28,-81,-66,-55,]),'RETURN':([0,1,2,3,4,5,6,7,8,9,10,21,22,23,24,25,26,27,28,29,30,53,55,58,59,60,62,63,65,66,67,68,70,74,76,77,91,93,107,109,110,112,113,114,115,118,120,132,136,137,144,],[20,20,-1,-82,-4,-5,-6,-7,-8,-9,-10,-18,-19,-20,-21,-22,-29,-61,-62,-82,-2,-17,-47,-42,-43,-44,-3,-80,-24,-31,-32,-33,-35,-69,-11,-79,-68,-45,-46,-30,-23,-34,-26,-27,-25,-67,-65,-28,-81,-66,-55,]),'NUMBER':([0,1,2,3,4,5,6,7,8,9,10,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,45,49,53,55,58,59,60,61,62,63,65,66,67,68,69,70,74,76,77,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,106,107,109,110,111,112,113,114,115,116,118,119,120,123,124,125,127,132,135,136,137,143,144,146,],[22,22,-1,-82,-4,-5,-6,-7,-8,-9,-10,22,22,22,22,22,-18,-19,-20,-21,-22,-29,-61,-62,-82,-2,22,22,22,22,22,22,-17,-47,-42,-43,-44,109,-3,-80,-24,-31,-32,-33,22,-35,-69,-11,-79,22,22,-70,-71,-72,-73,-74,-75,-68,22,-45,22,22,-63,-64,-36,-37,-38,22,-46,-30,-23,22,-34,-26,-27,-25,22,-67,22,-65,-39,-40,-41,22,-28,22,-81,-66,22,-55,22,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,45,49,53,55,58,59,60,62,63,65,66,67,68,69,70,74,76,77,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,106,107,109,110,111,112,113,114,115,116,118,119,120,123,124,125,127,132,135,136,137,143,144,146,],[26,26,-1,-82,-4,-5,-6,-7,-8,-9,-10,26,26,26,26,26,-18,-19,-20,-21,-22,-29,-61,-62,-82,-2,26,26,26,26,26,26,-17,-47,-42,-43,-44,-3,-80,-24,-31,-32,-33,26,-35,-69,-11,-79,26,26,-70,-71,-72,-73,-74,-75,-68,26,-45,26,26,-63,-64,-36,-37,-38,26,-46,-30,-23,26,-34,-26,-27,-25,26,-67,26,-65,-39,-40,-41,26,-28,26,-81,-66,26,-55,26,]),'TRUE':([0,1,2,3,4,5,6,7,8,9,10,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,45,49,53,55,58,59,60,62,63,65,66,67,68,69,70,74,76,77,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,106,107,109,110,111,112,113,114,115,116,118,119,120,123,124,125,127,132,135,136,137,143,144,146,],[27,27,-1,-82,-4,-5,-6,-7,-8,-9,-10,27,27,27,27,27,-18,-19,-20,-21,-22,-29,-61,-62,-82,-2,27,27,27,27,27,27,-17,-47,-42,-43,-44,-3,-80,-24,-31,-32,-33,27,-35,-69,-11,-79,27,27,-70,-71,-72,-73,-74,-75,-68,27,-45,27,27,-63,-64,-36,-37,-38,27,-46,-30,-23,27,-34,-26,-27,-25,27,-67,27,-65,-39,-40,-41,27,-28,27,-81,-66,27,-55,27,]),'FALSE':([0,1,2,3,4,5,6,7,8,9,10,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,45,49,53,55,58,59,60,62,63,65,66,67,68,69,70,74,76,77,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,106,107,109,110,111,112,113,114,115,116,118,119,120,123,124,125,127,132,135,136,137,143,144,146,],[28,28,-1,-82,-4,-5,-6,-7,-8,-9,-10,28,28,28,28,28,-18,-19,-20,-21,-22,-29,-61,-62,-82,-2,28,28,28,28,28,28,-17,-47,-42,-43,-44,-3,-80,-24,-31,-32,-33,28,-35,-69,-11,-79,28,28,-70,-71,-72,-73,-74,-75,-68,28,-45,28,28,-63,-64,-36,-37,-38,28,-46,-30,-23,28,-34,-26,-27,-25,28,-67,28,-65,-39,-40,-41,28,-28,28,-81,-66,28,-55,28,]),'LCORC':([0,1,2,3,4,5,6,7,8,9,10,11,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,44,45,49,53,55,57,58,59,60,62,63,65,66,67,68,69,70,71,74,76,77,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,106,107,109,110,111,112,113,114,115,116,118,119,120,123,124,125,127,132,135,136,137,143,144,146,],[15,15,-1,-82,-4,-5,-6,-7,-8,-9,-10,34,15,15,15,15,15,-18,-19,-20,-21,-22,-29,-61,-62,-82,-2,15,69,15,15,34,15,15,34,-47,34,-42,-43,-44,-3,-80,-24,-31,-32,-33,15,-35,34,-69,-11,-79,15,15,-70,-71,-72,-73,-74,-75,-68,15,-45,15,15,-63,-64,-36,-37,-38,15,-46,-30,-23,15,-34,-26,-27,-25,15,-67,15,-65,-39,-40,-41,15,-28,15,-81,-66,15,-55,15,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,21,22,23,24,25,26,27,28,29,30,53,55,58,59,60,62,63,65,66,67,68,70,74,76,77,91,93,107,109,110,112,113,114,115,118,120,132,136,137,144,],[-82,0,-1,-82,-4,-5,-6,-7,-8,-9,-10,-18,-19,-20,-21,-22,-29,-61,-62,-82,-2,-17,-47,-42,-43,-44,-3,-80,-24,-31,-32,-33,-35,-69,-11,-79,-68,-45,-46,-30,-23,-34,-26,-27,-25,-67,-65,-28,-81,-66,-55,]),'PUNTO':([10,11,14,21,22,23,24,25,26,27,28,53,63,65,66,70,77,109,110,113,114,115,132,136,],[31,-17,38,-18,61,-20,-21,-22,-29,-61,-62,-17,-80,-24,38,31,-79,-30,-23,-26,-27,-25,-28,-81,]),'LPAREN':([11,12,15,16,17,20,32,33,34,35,37,44,49,53,69,71,78,79,80,81,82,94,95,96,97,98,99,100,111,116,123,124,125,129,135,143,146,],[32,35,45,49,49,45,45,45,45,45,32,32,49,32,45,32,116,-76,-77,-78,45,49,45,-63,-64,-36,-37,-38,45,45,-39,-40,-41,135,45,45,45,]),'EQUALS':([11,44,98,99,101,],[33,33,123,124,125,]),'DPUNTOS':([18,21,22,23,24,25,26,27,28,36,47,48,50,51,53,54,57,65,109,110,113,114,115,121,122,126,128,132,142,],[55,-18,-19,-20,-21,-22,-29,-61,-62,76,93,-48,-51,-52,-17,107,-17,-24,-30,-23,-26,-27,-25,-49,-54,-50,-53,-28,144,]),'COMA':([21,22,23,24,25,26,27,28,39,40,41,42,43,44,53,63,64,65,66,67,68,70,71,74,75,77,91,109,110,112,113,114,115,117,118,120,130,131,132,136,137,138,140,141,145,],[-18,-19,-20,-21,-22,-29,-61,-62,82,-12,-14,-15,-16,-17,-17,-80,111,-24,-31,-32,-33,-35,-17,-69,111,-79,-68,-30,-23,-34,-26,-27,-25,111,-67,-65,111,111,-28,-81,-66,-59,143,-60,146,]),'PLUS':([21,22,23,24,25,26,27,28,40,41,43,44,46,50,51,52,53,58,59,60,65,66,67,68,71,72,73,74,90,91,103,104,105,109,110,113,114,115,118,120,132,134,137,138,141,],[-18,-19,-20,-21,-22,-29,-61,-62,-68,-69,84,-17,84,-68,-69,84,-17,-68,-69,84,-24,-68,-69,84,-17,-68,84,-69,84,-68,84,-68,-69,-30,-23,-26,-27,-25,-67,-65,-28,-65,-66,-68,84,]),'MINUS':([21,22,23,24,25,26,27,28,40,41,43,44,46,50,51,52,53,58,59,60,65,66,67,68,71,72,73,74,90,91,103,104,105,109,110,113,114,115,118,120,132,134,137,138,141,],[-18,-19,-20,-21,-22,-29,-61,-62,-68,-69,85,-17,85,-68,-69,85,-17,-68,-69,85,-24,-68,-69,85,-17,-68,85,-69,85,-68,85,-68,-69,-30,-23,-26,-27,-25,-67,-65,-28,-65,-66,-68,85,]),'TIMES':([21,22,23,24,25,26,27,28,40,41,43,44,46,50,51,52,53,58,59,60,65,66,67,68,71,72,73,74,90,91,103,104,105,109,110,113,114,115,118,120,132,134,137,138,141,],[-18,-19,-20,-21,-22,-29,-61,-62,-68,-69,86,-17,86,-68,-69,86,-17,-68,-69,86,-24,-68,-69,86,-17,-68,86,-69,86,-68,86,-68,-69,-30,-23,-26,-27,-25,-67,-65,-28,-65,-66,-68,86,]),'DIVIDE':([21,22,23,24,25,26,27,28,40,41,43,44,46,50,51,52,53,58,59,60,65,66,67,68,71,72,73,74,90,91,103,104,105,109,110,113,114,115,118,120,132,134,137,138,141,],[-18,-19,-20,-21,-22,-29,-61,-62,-68,-69,87,-17,87,-68,-69,87,-17,-68,-69,87,-24,-68,-69,87,-17,-68,87,-69,87,-68,87,-68,-69,-30,-23,-26,-27,-25,-67,-65,-28,-65,-66,-68,87,]),'MOD':([21,22,23,24,25,26,27,28,40,41,43,44,46,50,51,52,53,58,59,60,65,66,67,68,71,72,73,74,90,91,103,104,105,109,110,113,114,115,118,120,132,134,137,138,141,],[-18,-19,-20,-21,-22,-29,-61,-62,-68,-69,88,-17,88,-68,-69,88,-17,-68,-69,88,-24,-68,-69,88,-17,-68,88,-69,88,-68,88,-68,-69,-30,-23,-26,-27,-25,-67,-65,-28,-65,-66,-68,88,]),'EXP':([21,22,23,24,25,26,27,28,40,41,43,44,46,50,51,52,53,58,59,60,65,66,67,68,71,72,73,74,90,91,103,104,105,109,110,113,114,115,118,120,132,134,137,138,141,],[-18,-19,-20,-21,-22,-29,-61,-62,-68,-69,89,-17,89,-68,-69,89,-17,-68,-69,89,-24,-68,-69,89,-17,-68,89,-69,89,-68,89,-68,-69,-30,-23,-26,-27,-25,-67,-65,-28,-65,-66,-68,89,]),'AND':([21,22,23,24,25,26,27,28,48,50,51,53,57,65,104,105,109,110,113,114,115,122,128,132,],[-18,-19,-20,-21,-22,-29,-61,-62,96,-51,-52,-17,-17,-24,-51,-52,-30,-23,-26,-27,-25,-54,-53,-28,]),'OR':([21,22,23,24,25,26,27,28,48,50,51,53,57,65,104,105,109,110,113,114,115,122,128,132,],[-18,-19,-20,-21,-22,-29,-61,-62,97,-51,-52,-17,-17,-24,-51,-52,-30,-23,-26,-27,-25,-54,-53,-28,]),'MAYOR':([21,22,23,24,25,26,27,28,48,50,51,52,53,57,65,74,91,104,105,109,110,113,114,115,118,120,122,128,132,134,137,],[-18,-19,-20,-21,-22,-29,-61,-62,98,-51,-52,98,-17,-17,-24,-69,-68,-51,-52,-30,-23,-26,-27,-25,-67,-65,98,-53,-28,-65,-66,]),'MENOR':([21,22,23,24,25,26,27,28,48,50,51,52,53,57,65,74,91,104,105,109,110,113,114,115,118,120,122,128,132,134,137,],[-18,-19,-20,-21,-22,-29,-61,-62,99,-51,-52,99,-17,-17,-24,-69,-68,-51,-52,-30,-23,-26,-27,-25,-67,-65,99,-53,-28,-65,-66,]),'DEQUALS':([21,22,23,24,25,26,27,28,48,50,51,52,53,57,65,74,91,104,105,109,110,113,114,115,118,120,122,128,132,134,137,],[-18,-19,-20,-21,-22,-29,-61,-62,100,-51,-52,100,-17,-17,-24,-69,-68,-51,-52,-30,-23,-26,-27,-25,-67,-65,100,-53,-28,-65,-66,]),'NEGADOR':([21,22,23,24,25,26,27,28,48,50,51,52,53,57,65,74,91,104,105,109,110,113,114,115,118,120,122,128,132,134,137,],[-18,-19,-20,-21,-22,-29,-61,-62,101,-51,-52,101,-17,-17,-24,-69,-68,-51,-52,-30,-23,-26,-27,-25,-67,-65,101,-53,-28,-65,-66,]),'IN':([21,22,23,24,25,26,27,28,56,57,109,113,114,132,],[-18,-19,-20,-21,-22,-29,-61,-62,108,-17,-30,-26,-27,-28,]),'RPAREN':([21,22,23,24,25,26,27,28,32,40,41,42,43,44,48,50,51,53,57,63,64,65,66,67,68,70,71,74,75,77,91,102,104,105,109,110,112,113,114,115,118,120,121,122,126,128,130,131,132,133,134,136,137,138,139,140,141,145,147,],[-18,-19,-20,-21,-22,-29,-61,-62,65,-12,-14,-15,-16,-17,-48,-51,-52,-17,-17,-80,110,-24,-31,-32,-33,-35,-17,-69,115,-79,-68,126,-51,-52,-30,-23,-34,-26,-27,-25,-67,-65,-49,-54,-50,-53,-13,136,-28,137,137,-81,-66,-59,142,-56,-60,-57,-58,]),'RCORC':([21,22,23,24,25,26,27,28,40,41,42,43,44,53,63,65,66,67,68,69,70,71,72,73,74,77,91,109,110,112,113,114,115,117,118,120,130,132,136,137,],[-18,-19,-20,-21,-22,-29,-61,-62,-12,-14,-15,-16,-17,-17,-80,-24,-31,-32,-33,112,-35,-17,113,114,-69,-79,-68,-30,-23,-34,-26,-27,-25,132,-67,-65,-13,-28,-81,-66,]),'APPEND':([38,],[79,]),'INDEX':([38,],[80,]),'POP':([38,],[81,]),'RANGE':([108,],[129,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'bloque_codigo':([0,],[1,]),'empty':([0,3,29,],[2,30,62,]),'linea_codigo':([0,1,],[3,29,]),'expr_funcion':([0,1,13,15,16,17,20,31,32,33,34,35,38,45,49,69,82,83,92,94,95,111,116,119,127,135,143,146,],[4,4,36,41,51,51,59,63,41,67,74,41,77,74,105,41,41,74,74,51,51,41,41,74,74,74,74,74,]),'expr_def_funcion':([0,1,],[5,5,]),'expr_asign':([0,1,15,32,35,69,82,111,116,],[6,6,42,42,42,42,42,42,42,]),'expr_if_else':([0,1,],[7,7,]),'def_for':([0,1,],[8,8,]),'expr_return':([0,1,],[9,9,]),'call_method':([0,1,33,],[10,10,70,]),'variable':([0,1,15,16,17,19,20,32,33,34,35,45,49,69,82,83,92,94,95,106,111,116,119,127,135,143,146,],[14,14,40,50,50,56,58,40,66,72,40,91,104,40,40,91,91,50,50,128,40,40,91,91,138,138,138,]),'expr_str':([0,1,15,16,17,19,20,32,33,34,35,45,49,69,82,83,92,94,95,106,111,116,119,127,135,143,146,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'expr_float':([0,1,15,16,17,19,20,32,33,34,35,45,49,69,82,83,92,94,95,106,111,116,119,127,135,143,146,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'bool':([0,1,15,16,17,19,20,32,33,34,35,45,49,69,82,83,92,94,95,106,111,116,119,127,135,143,146,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'lista':([0,1,15,16,17,19,20,32,33,34,35,45,49,69,82,83,92,94,95,106,111,116,119,127,135,143,146,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'params':([15,32,35,69,82,111,116,],[39,64,75,39,117,130,131,]),'operaciones_algebraica':([15,16,17,20,32,33,34,35,49,69,82,94,95,111,116,135,143,146,],[43,52,52,60,43,68,73,43,52,43,43,52,52,43,43,141,141,141,]),'variables_operaciones_algebraica':([15,16,17,20,32,33,34,35,45,49,69,82,83,92,94,95,111,116,119,127,135,143,146,],[46,46,46,46,46,46,46,46,90,103,46,46,118,120,46,46,46,46,133,134,46,46,46,]),'condiciones_expr_if_else':([16,17,49,94,],[47,54,102,121,]),'condiciones':([16,17,49,94,95,],[48,48,48,48,122,]),'funcion_lista':([38,],[78,]),'operador_alge':([43,46,52,60,68,73,90,103,141,],[83,92,83,83,83,83,119,127,83,]),'and_or':([48,],[94,]),'operador_igualdad':([48,52,122,],[95,106,95,]),'params_for':([135,],[139,]),'variable_for':([135,143,146,],[140,145,147,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> bloque_codigo","S'",1,None,None,None),
  ('bloque_codigo -> empty','bloque_codigo',1,'p_bloque_codigo','PythonPlag.py',110),
  ('bloque_codigo -> linea_codigo empty','bloque_codigo',2,'p_bloque_codigo','PythonPlag.py',111),
  ('bloque_codigo -> bloque_codigo linea_codigo empty','bloque_codigo',3,'p_bloque_codigo','PythonPlag.py',112),
  ('linea_codigo -> expr_funcion','linea_codigo',1,'p_linea_codigo','PythonPlag.py',116),
  ('linea_codigo -> expr_def_funcion','linea_codigo',1,'p_linea_codigo','PythonPlag.py',117),
  ('linea_codigo -> expr_asign','linea_codigo',1,'p_linea_codigo','PythonPlag.py',118),
  ('linea_codigo -> expr_if_else','linea_codigo',1,'p_linea_codigo','PythonPlag.py',119),
  ('linea_codigo -> def_for','linea_codigo',1,'p_linea_codigo','PythonPlag.py',120),
  ('linea_codigo -> expr_return','linea_codigo',1,'p_linea_codigo','PythonPlag.py',121),
  ('linea_codigo -> call_method','linea_codigo',1,'p_linea_codigo','PythonPlag.py',122),
  ('expr_def_funcion -> DEF expr_funcion DPUNTOS','expr_def_funcion',3,'p_expr_def_funcion','PythonPlag.py',127),
  ('params -> variable','params',1,'p_params','PythonPlag.py',131),
  ('params -> params COMA params','params',3,'p_params','PythonPlag.py',132),
  ('params -> expr_funcion','params',1,'p_params','PythonPlag.py',133),
  ('params -> expr_asign','params',1,'p_params','PythonPlag.py',134),
  ('params -> operaciones_algebraica','params',1,'p_params','PythonPlag.py',135),
  ('variable -> ID','variable',1,'p_variable','PythonPlag.py',140),
  ('variable -> expr_str','variable',1,'p_variable','PythonPlag.py',141),
  ('variable -> NUMBER','variable',1,'p_variable','PythonPlag.py',142),
  ('variable -> expr_float','variable',1,'p_variable','PythonPlag.py',143),
  ('variable -> bool','variable',1,'p_variable','PythonPlag.py',144),
  ('variable -> lista','variable',1,'p_variable','PythonPlag.py',145),
  ('expr_funcion -> ID LPAREN params RPAREN','expr_funcion',4,'p_expr_funcion','PythonPlag.py',149),
  ('expr_funcion -> ID LPAREN RPAREN','expr_funcion',3,'p_expr_funcion','PythonPlag.py',150),
  ('expr_funcion -> LEN LPAREN params RPAREN','expr_funcion',4,'p_expr_funcion','PythonPlag.py',151),
  ('lista -> ID LCORC variable RCORC','lista',4,'p_lista','PythonPlag.py',157),
  ('lista -> ID LCORC operaciones_algebraica RCORC','lista',4,'p_lista','PythonPlag.py',158),
  ('lista -> LCORC params COMA params RCORC','lista',5,'p_lista','PythonPlag.py',159),
  ('expr_str -> STRING','expr_str',1,'p_expr_str','PythonPlag.py',164),
  ('expr_float -> NUMBER PUNTO NUMBER','expr_float',3,'p_expr_float','PythonPlag.py',168),
  ('expr_asign -> ID EQUALS variable','expr_asign',3,'p_expr_asign','PythonPlag.py',174),
  ('expr_asign -> ID EQUALS expr_funcion','expr_asign',3,'p_expr_asign','PythonPlag.py',175),
  ('expr_asign -> ID EQUALS operaciones_algebraica','expr_asign',3,'p_expr_asign','PythonPlag.py',176),
  ('expr_asign -> ID EQUALS LCORC RCORC','expr_asign',4,'p_expr_asign','PythonPlag.py',177),
  ('expr_asign -> ID EQUALS call_method','expr_asign',3,'p_expr_asign','PythonPlag.py',178),
  ('operador_igualdad -> MAYOR','operador_igualdad',1,'p_operador_igualdad','PythonPlag.py',182),
  ('operador_igualdad -> MENOR','operador_igualdad',1,'p_operador_igualdad','PythonPlag.py',183),
  ('operador_igualdad -> DEQUALS','operador_igualdad',1,'p_operador_igualdad','PythonPlag.py',184),
  ('operador_igualdad -> MAYOR EQUALS','operador_igualdad',2,'p_operador_igualdad','PythonPlag.py',185),
  ('operador_igualdad -> MENOR EQUALS','operador_igualdad',2,'p_operador_igualdad','PythonPlag.py',186),
  ('operador_igualdad -> NEGADOR EQUALS','operador_igualdad',2,'p_operador_igualdad','PythonPlag.py',187),
  ('expr_return -> RETURN variable','expr_return',2,'p_expr_return','PythonPlag.py',191),
  ('expr_return -> RETURN expr_funcion','expr_return',2,'p_expr_return','PythonPlag.py',192),
  ('expr_return -> RETURN operaciones_algebraica','expr_return',2,'p_expr_return','PythonPlag.py',193),
  ('expr_if_else -> IF condiciones_expr_if_else DPUNTOS','expr_if_else',3,'p_expr_if_else','PythonPlag.py',197),
  ('expr_if_else -> ELIF condiciones_expr_if_else DPUNTOS','expr_if_else',3,'p_expr_if_else','PythonPlag.py',198),
  ('expr_if_else -> ELSE DPUNTOS','expr_if_else',2,'p_expr_if_else','PythonPlag.py',199),
  ('condiciones_expr_if_else -> condiciones','condiciones_expr_if_else',1,'p_codiciones_para_expr_if_else','PythonPlag.py',203),
  ('condiciones_expr_if_else -> condiciones and_or condiciones_expr_if_else','condiciones_expr_if_else',3,'p_codiciones_para_expr_if_else','PythonPlag.py',204),
  ('condiciones_expr_if_else -> LPAREN condiciones_expr_if_else RPAREN','condiciones_expr_if_else',3,'p_codiciones_para_expr_if_else','PythonPlag.py',205),
  ('condiciones -> variable','condiciones',1,'p_condiciones','PythonPlag.py',209),
  ('condiciones -> expr_funcion','condiciones',1,'p_condiciones','PythonPlag.py',210),
  ('condiciones -> operaciones_algebraica operador_igualdad variable','condiciones',3,'p_condiciones','PythonPlag.py',211),
  ('condiciones -> condiciones operador_igualdad condiciones','condiciones',3,'p_condiciones','PythonPlag.py',212),
  ('def_for -> FOR variable IN RANGE LPAREN params_for RPAREN DPUNTOS','def_for',8,'p_def_for','PythonPlag.py',216),
  ('params_for -> variable_for','params_for',1,'p_params_for','PythonPlag.py',220),
  ('params_for -> variable_for COMA variable_for','params_for',3,'p_params_for','PythonPlag.py',221),
  ('params_for -> variable_for COMA variable_for COMA variable_for','params_for',5,'p_params_for','PythonPlag.py',222),
  ('variable_for -> variable','variable_for',1,'p_variable_for','PythonPlag.py',225),
  ('variable_for -> operaciones_algebraica','variable_for',1,'p_variable_for','PythonPlag.py',226),
  ('bool -> TRUE','bool',1,'p_bool','PythonPlag.py',230),
  ('bool -> FALSE','bool',1,'p_bool','PythonPlag.py',231),
  ('and_or -> AND','and_or',1,'p_and_or','PythonPlag.py',235),
  ('and_or -> OR','and_or',1,'p_and_or','PythonPlag.py',236),
  ('operaciones_algebraica -> variables_operaciones_algebraica operador_alge variables_operaciones_algebraica','operaciones_algebraica',3,'p_operaciones_algebraica','PythonPlag.py',240),
  ('operaciones_algebraica -> LPAREN variables_operaciones_algebraica operador_alge variables_operaciones_algebraica RPAREN','operaciones_algebraica',5,'p_operaciones_algebraica','PythonPlag.py',241),
  ('operaciones_algebraica -> operaciones_algebraica operador_alge variables_operaciones_algebraica','operaciones_algebraica',3,'p_operaciones_algebraica','PythonPlag.py',242),
  ('variables_operaciones_algebraica -> variable','variables_operaciones_algebraica',1,'p_variables_operaciones_algebraica','PythonPlag.py',245),
  ('variables_operaciones_algebraica -> expr_funcion','variables_operaciones_algebraica',1,'p_variables_operaciones_algebraica','PythonPlag.py',246),
  ('operador_alge -> PLUS','operador_alge',1,'p_operador_alge','PythonPlag.py',250),
  ('operador_alge -> MINUS','operador_alge',1,'p_operador_alge','PythonPlag.py',251),
  ('operador_alge -> TIMES','operador_alge',1,'p_operador_alge','PythonPlag.py',252),
  ('operador_alge -> DIVIDE','operador_alge',1,'p_operador_alge','PythonPlag.py',253),
  ('operador_alge -> MOD','operador_alge',1,'p_operador_alge','PythonPlag.py',254),
  ('operador_alge -> EXP','operador_alge',1,'p_operador_alge','PythonPlag.py',255),
  ('funcion_lista -> APPEND','funcion_lista',1,'p_funcion_lista','PythonPlag.py',258),
  ('funcion_lista -> INDEX','funcion_lista',1,'p_funcion_lista','PythonPlag.py',259),
  ('funcion_lista -> POP','funcion_lista',1,'p_funcion_lista','PythonPlag.py',260),
  ('call_method -> variable PUNTO expr_funcion','call_method',3,'p_call_method','PythonPlag.py',264),
  ('call_method -> call_method PUNTO expr_funcion','call_method',3,'p_call_method','PythonPlag.py',265),
  ('call_method -> variable PUNTO funcion_lista LPAREN params RPAREN','call_method',6,'p_call_method','PythonPlag.py',266),
  ('empty -> <empty>','empty',0,'p_empty','PythonPlag.py',269),
]
